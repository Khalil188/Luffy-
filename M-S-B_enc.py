# Compiled By Mr Mafia | Muhammad Muzammil
# Github  :  https://github.com/Muzammil-404

import base64
exec(base64.b64decode("I19fX19fX19fX19fX19fX19fX3wgSU1QT1JUIHxfX19fX19fX19fX19fX19fX18jDQpmcm9tIG9zIGltcG9ydCBwYXRoDQppbXBvcnQgcmVxdWVzdHMscmFuZG9tLHV1aWQsc3RyaW5nLGhhc2hsaWIsanNvbg0KZnJvbSBvcyBpbXBvcnQgcGF0aA0KaW1wb3J0IG9zLHV1aWQsYmFzZTY0LHJlcXVlc3RzLHpsaWIsaHR0cHgsdGltZSxwbGF0Zm9ybSxkYXRldGltZQ0KZnJvbSB0aW1lIGltcG9ydCBsb2NhbHRpbWUgYXMgbHQNCmZyb20gdXJsbGliLnJlcXVlc3QgaW1wb3J0IHVybG9wZW4NCmltcG9ydCBvcyxiYXNlNjQsemxpYixwaXAsdXJsbGliLHVybGxpYjMNCmltcG9ydCBwbGF0Zm9ybSxtYXRoLHNtdHBsaWINCmltcG9ydCBwbGF0Zm9ybQ0KaW1wb3J0IHNtdHBsaWINCmltcG9ydCBtYXRoDQppbXBvcnQgb3MsYmFzZTY0LHpsaWIscGlwLHVybGxpYg0KdHJ5Og0KICAgICAgICBpbXBvcnQgb3MscmVxdWVzdHMsanNvbix0aW1lLHJlLHJhbmRvbSxzeXMsdXVpZCxzdHJpbmcsc3VicHJvY2Vzcw0KICAgICAgICBmcm9tIHN0cmluZyBpbXBvcnQgKg0KICAgICAgICBmcm9tIGNvbmN1cnJlbnQuZnV0dXJlcyBpbXBvcnQgVGhyZWFkUG9vbEV4ZWN1dG9yIGFzIHRyZWQNCmV4Y2VwdCBNb2R1bGVOb3RGb3VuZEVycm9yOg0KICAgICAgICBwcmludCgnXG4gSW5zdGFsbGluZyBtaXNzaW5nIG1vZHVsZXMgLi4uJykNCiAgICAgICAgb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCByZXF1ZXN0cyBmdXR1cmVzPT0yID4gL2Rldi9udWxsJykNCiAgICAgICAgb3Muc3lzdGVtKCdweXRob24gcnVuLnB5JykNCmV4Y2VwdDpwYXNzDQojX19fX19fX19fX19fX19fX19fWyBkYXRlIF1fX19fX19fX19fX19fX19fX18jDQpkaWMgPSB7JzEnOidKYW51YXJ5JywnMic6J0ZlYnJ1YXJ5JywnMyc6J01hcmNoJywnNCc6J0FwcmlsJywnNSc6J01heScsJzYnOidKdW5lJywnNyc6J0p1bHknLCc4JzonQXVndXN0JywnOSc6J1NlcHRlbWJlcicsJzEwJzonT2N0b2JlcicsJzExJzonTm92ZW1iZXInLCcxMic6J0RlY2VtYmVyJ30NCmRpYzIgPSB7JzAxJzonSmFudWFyeScsJzAyJzonRmVicnVhcnknLCcwMyc6J01hcmNoJywnMDQnOidBcHJpbCcsJzA1JzonTWF5JywnMDYnOidKdW5lJywnMDcnOidKdWx5JywnMDgnOidBdWd1c3QnLCcwOSc6J1NlcHRlbWJlcicsJzEwJzonT2N0b2JlcicsJzExJzonTm92ZW1iZXInLCcxMic6J0RldmVtYmVyJ30NCnRnbCA9IGRhdGV0aW1lLmRhdGV0aW1lLm5vdygpLmRheQ0KYmxuID0gZGljWyhzdHIoZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCkubW9udGgpKV0NCnRobiA9IGRhdGV0aW1lLmRhdGV0aW1lLm5vdygpLnllYXINCmRhdGUgPSBzdHIodGdsKSsnXHgxYlszODs1OzI0NG0tXHgxYlszODs1OzQ2bScrc3RyKGJsbikrJ1x4MWJbMzg7NTsyNDRtLVx4MWJbMzg7NTs0Nm0nK3N0cih0aG4pDQpsdHggPSBpbnQobHQoKVszXSkNCmlmIGx0eCA+IDEyOg0KICAgIGEgPSBsdHgtMTINCiAgICB0YWcgPSAiUE0iDQplbHNlOg0KICAgIGEgPSBsdHgNCiAgICB0YWcgPSAiQU0iDQojX19fX19fX19fX19fX19fX19ffCBFVEMgfF9fX19fX19fX19fX19fX19fXyMNCnNpbV9pZCA9ICcnDQphbmRyb2lkX3ZlcnNpb24gPSBzdWJwcm9jZXNzLmNoZWNrX291dHB1dCgnZ2V0cHJvcCByby5idWlsZC52ZXJzaW9uLnJlbGVhc2UnLHNoZWxsPVRydWUpLmRlY29kZSgndXRmLTgnKS5yZXBsYWNlKCdcbicsJycpDQptb2RlbCA9IHN1YnByb2Nlc3MuY2hlY2tfb3V0cHV0KCdnZXRwcm9wIHJvLnByb2R1Y3QubW9kZWwnLHNoZWxsPVRydWUpLmRlY29kZSgndXRmLTgnKS5yZXBsYWNlKCdcbicsJycpDQpidWlsZCA9IHN1YnByb2Nlc3MuY2hlY2tfb3V0cHV0KCdnZXRwcm9wIHJvLmJ1aWxkLmlkJyxzaGVsbD1UcnVlKS5kZWNvZGUoJ3V0Zi04JykucmVwbGFjZSgnXG4nLCcnKQ0KZmJsYyA9ICdlbl9HQicNCnRyeToNCiAgICAgICAgZmJjciA9IHN1YnByb2Nlc3MuY2hlY2tfb3V0cHV0KCdnZXRwcm9wIGdzbS5vcGVyYXRvci5hbHBoYScsc2hlbGw9VHJ1ZSkuZGVjb2RlKCd1dGYtOCcpLnNwbGl0KCcsJylbMF0ucmVwbGFjZSgnXG4nLCcnKQ0KZXhjZXB0Og0KICAgICAgICBmYmNyID0gJ1pvbmcnDQpmYm1mID0gc3VicHJvY2Vzcy5jaGVja19vdXRwdXQoJ2dldHByb3Agcm8ucHJvZHVjdC5tYW51ZmFjdHVyZXInLHNoZWxsPVRydWUpLmRlY29kZSgndXRmLTgnKS5yZXBsYWNlKCdcbicsJycpDQpmYmJkID0gc3VicHJvY2Vzcy5jaGVja19vdXRwdXQoJ2dldHByb3Agcm8ucHJvZHVjdC5icmFuZCcsc2hlbGw9VHJ1ZSkuZGVjb2RlKCd1dGYtOCcpLnJlcGxhY2UoJ1xuJywnJykNCmZiZHYgPSBtb2RlbA0KZmJzdiA9IGFuZHJvaWRfdmVyc2lvbg0KZmJjYSA9IHN1YnByb2Nlc3MuY2hlY2tfb3V0cHV0KCdnZXRwcm9wIHJvLnByb2R1Y3QuY3B1LmFiaWxpc3QnLHNoZWxsPVRydWUpLmRlY29kZSgndXRmLTgnKS5yZXBsYWNlKCcsJywnOicpLnJlcGxhY2UoJ1xuJywnJykNCmZiZG0gPSAne2RlbnNpdHk9Mi4yNSxoZWlnaHQ9JytzdWJwcm9jZXNzLmNoZWNrX291dHB1dCgnZ2V0cHJvcCByby5od3VpLnRleHRfbGFyZ2VfY2FjaGVfaGVpZ2h0JyxzaGVsbD1UcnVlKS5kZWNvZGUoJ3V0Zi04JykucmVwbGFjZSgnXG4nLCcnKSsnLHdpZHRoPScrc3VicHJvY2Vzcy5jaGVja19vdXRwdXQoJ2dldHByb3Agcm8uaHd1aS50ZXh0X2xhcmdlX2NhY2hlX3dpZHRoJyxzaGVsbD1UcnVlKS5kZWNvZGUoJ3V0Zi04JykucmVwbGFjZSgnXG4nLCcnKQ0KdHJ5Og0KICAgICAgICBmYmNyID0gc3VicHJvY2Vzcy5jaGVja19vdXRwdXQoJ2dldHByb3AgZ3NtLm9wZXJhdG9yLmFscGhhJyxzaGVsbD1UcnVlKS5kZWNvZGUoJ3V0Zi04Jykuc3BsaXQoJywnKQ0KICAgICAgICB0b3RhbCA9IDANCiAgICAgICAgZm9yIGkgaW4gZmJjcjoNCiAgICAgICAgICAgICAgICB0b3RhbCs9MQ0KICAgICAgICBzZWxlY3QgPSAoJzEnLCcyJykNCiAgICAgICAgaWYgc2VsZWN0ID09ICcxJzoNCiAgICAgICAgICAgICAgICBmYmNyID0gc3VicHJvY2Vzcy5jaGVja19vdXRwdXQoJ2dldHByb3AgZ3NtLm9wZXJhdG9yLmFscGhhJyxzaGVsbD1UcnVlKS5kZWNvZGUoJ3V0Zi04Jykuc3BsaXQoJywnKVswXS5yZXBsYWNlKCdcbicsJycpDQogICAgICAgICAgICAgICAgc2ltX2lkKz1mYmNyDQogICAgICAgIGVsaWYgc2VsZWN0ID09ICcyJzoNCiAgICAgICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgICAgICAgICBmYmNyID0gc3VicHJvY2Vzcy5jaGVja19vdXRwdXQoJ2dldHByb3AgZ3NtLm9wZXJhdG9yLmFscGhhJyxzaGVsbD1UcnVlKS5kZWNvZGUoJ3V0Zi04Jykuc3BsaXQoJywnKVsxXS5yZXBsYWNlKCdcbicsJycpDQogICAgICAgICAgICAgICAgICAgICAgICBzaW1faWQrPWZiY3INCiAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQogICAgICAgICAgICAgICAgICAgICAgICBmYmNyID0gIlpvbmciDQogICAgICAgICAgICAgICAgICAgICAgICBzaW1faWQrPWZiY3INCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICBmYmNyID0gJ1pvbmcnDQogICAgICAgICAgICAgICAgc2ltX2lkKz1mYmNyDQpleGNlcHQ6DQogICAgICAgIGZiY3IgPSAiWm9uZyINCmRldmljZSA9IHsNCiAgICAgICAgJ2FuZHJvaWRfdmVyc2lvbic6YW5kcm9pZF92ZXJzaW9uLA0KICAgICAgICAnbW9kZWwnOm1vZGVsLA0KICAgICAgICAnYnVpbGQnOmJ1aWxkLA0KICAgICAgICAnZmJsYyc6ZmJsYywNCiAgICAgICAgJ2ZibWYnOmZibWYsDQogICAgICAgICdmYmJkJzpmYmJkLA0KICAgICAgICAnZmJkdic6bW9kZWwsDQogICAgICAgICdmYnN2JzpmYnN2LA0KICAgICAgICAnZmJjYSc6ZmJjYSwNCiAgICAgICAgJ2ZiZG0nOmZiZG19DQojX19fX19fX19fX19fX19fX19ffCBMT09QIHxfX19fX19fX19fX19fX19fX18jDQpsb29wPTA7b2tzPVtdO2Nwcz1bXTt0d2Y9W107cGNwPVtdO2lkPVtdO3Rva2Vua3U9W107dWlkPVtdO3BsaXN0ID0gW10NCiNfX19fX19fX19fX19fX19fX19bIFNZUyBdX19fX19fX19fX19fX19fX19fIw0KI3N5cy5zdGRvdXQud3JpdGUoJ1x4MWJdMjsgKOKYoO+4jylNUvCfm6DvuI9TUEpM8J+SmvCfpYAo4pig77iPKVx4MDcnKQ0KI19fX19fX19fX19fX19fX19fX3wgQ09MT1VSIHxfX19fX19fX19fX19fX19fX18jDQpBID0gJ1x4MWJbMTs5N20nO1IgPSAnXHgxYlszODs1OzE5Nm0nO1kgPSAnXDAzM1sxOzMzbSc7RyA9ICdceDFiWzM4OzU7NDZtJztCID0gJ1x4MWJbMzg7NTs4bSc7RzEgPSAnXHgxYlszODs1OzQ4bSc7RzIgPSAnXHgxYlszODs1OzQ3bSc7RzMgPSAnXHgxYlszODs1OzQ4bSc7RzQgPSAnXHgxYlszODs1OzQ5bSc7RzUgPSAnXHgxYlszODs1OzUwbSc7WCA9ICdcMzNbMTszNG0nO1gxID0gJ1x4MWJbMzg7NTsxNG0nO1gyID0gJ1x4MWJbMzg7NTsxMjNtJztYMyA9ICdceDFiWzM4OzU7MTIybSc7WDQgPSAnXHgxYlszODs1Ozg2bSc7WDUgPSAnXHgxYlszODs1OzEyMW0nO1MgPSAnXHgxYlsxOzk2bSc7TSA9ICdceDFiWzM4OzU7MjA1bScNCiNfX19fX19fX19fX19fX19fX198IExJTkUgfF9fX19fX19fX19fX19fX19fXyMNCmRlZiBjbGVhcigpOm9zLnN5c3RlbSgnY2xlYXInKTtwcmludChsb2dvKQ0KZGVmIGxpbmV4KCk6cHJpbnQoZidceDFiWzE7OTdt4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSBXDAzM1sxOzM3bScpDQojX19fX19fX19fX19fX19fX19fWyBNMSBdX19fX19fX19fX19fX19fX19fIw0KZGVmIEhPUF9NMSgpOg0KICAgICAgICB1YSAgPSAiW0ZCQU4vRkI0QTtGQkFWLyIrc3RyKHJhbmRvbS5yYW5kaW50KDExLDc3KSkrJy4wLjAuJytzdHIocmFuZG9tLnJhbmRyYW5nZSg5LDQ5KSkrc3RyKHJhbmRvbS5yYW5kaW50KDExLDc3KSkgKyI7RkJCVi8iK3N0cihyYW5kb20ucmFuZGludCgxMTExMTExLDc3Nzc3NzcpKSsiOydbRkI0QS87RkJBVi9ZWldTRVM5MztGQkJWLzMxNDM4NjU3NDtGQkFOL0ZCNEE7RkJBVi9ZWldTRVM5MztGQkJWLzMxNDM4NjU3NDtGQkRNLy8qe2RlbnNpdHk9Mi41LHdpZHRoPTcyMCxoZWlnaHQ9MTkyMH07RkJMQy9pdF9JVDtGQlJWLzU5NzAyODE3NDtGQkNSL1Nvbnk7RkJNRi9Nb3Rvcm9sYTtGQkJEL1Nvbnk7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvWGlhb21pX01pXzEyWkE7RkJTVi8xNjtGQk9QLzY7RkJDQS9hcm02NC12OGE7RkJTUy8xODtdIjsiW0ZCQU4vO0ZCQVYvO0ZCQlYvMjk4MzI3NjMzO0ZCQU4vRkJBTjtGQkFWLztGQkJWLzI5ODMyNzYzMztGQkRNLy8qe2RlbnNpdHk9Mi41LHdpZHRoPTE5MjAsaGVpZ2h0PTEyODB9O0ZCTEMvZGVfREU7RkJSVi84NzA3Mjg2NTc7RkJDUi9PUFBPO0ZCTUYvVklWTztGQkJEL0VsZXBob25lO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL0hUQ19Ecml2ZV8xNDtGQlNWLzExO0ZCT1AvNjtGQkNBL3g4Nl82NDtGQlNTLzE0O10iOyJGQkFOLztGQkFWLztGQkJWLzQwMTY2NzQyNDtGQkFOL0ZCQU47RkJBVi87RkJCVi80MDE2Njc0MjQ7RkJETS8vKntkZW5zaXR5PTEuNSx3aWR0aD0xNDQwLGhlaWdodD0xMjgwfTtGQkxDL2phX0pQO0ZCUlYvMjI5ODgzMDQ1O0ZCQ1IvUmVhbG1lO0ZCTUYvT25lUGx1cztGQkJEL01laXp1O0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL09uZVBsdXNfTm9yZF9OODAwO0ZCU1YvMTU7RkJPUC81O0ZCQ0EveDg2O0ZCU1MvMTQ7XSI7IltGQkFOLztGQkFWL1laV1NFUzkzO0ZCQlYvMjAxNzA4MDgyO0ZCQU4vRkJBTjtGQkFWL1laV1NFUzkzO0ZCQlYvMjAxNzA4MDgyO0ZCRE0vLyp7ZGVuc2l0eT0yLjAsd2lkdGg9MjU2MCxoZWlnaHQ9NDA5Nn07RkJMQy9lbl9VUztGQlJWLzk0NjEwNDE5MjtGQkNSL0xHO0ZCTUYvQXBwbGU7RkJCRC9Qb2NvO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL09uZVBsdXNfTm9yZF9ONzAwO0ZCU1YvMTE7RkJPUC83O0ZCQ0EveDg2XzY0O0ZCU1MvO10iOyJbRkI0QS87RkJBVi9BMVhETDVVNDtGQkJWLzUzNDA3NzU4ODtGQkFOL0ZCNEE7RkJBVi9BMVhETDVVNDtGQkJWLzUzNDA3NzU4ODtGQkRNLy8qe2RlbnNpdHk9MS41LHdpZHRoPTEwODAsaGVpZ2h0PTEyODB9O0ZCTEMvamFfSlA7RkJSVi80MTAyMzkwNjI7RkJDUi9Tb255O0ZCTUYvQXBwbGU7RkJCRC9MYXZhO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL0hUQ19Ecml2ZV8xMjtGQlNWLzEyO0ZCT1AvNjtGQkNBL3g4NjtGQlNTLztdIjsiW0ZCQU4vO0ZCQVYvWVpXU0VTOTM7RkJCVi8xMDc2NDE2MTU7RkJBTi9GQkFOO0ZCQVYvWVpXU0VTOTM7RkJCVi8xMDc2NDE2MTU7RkJETS8vKntkZW5zaXR5PTEuNSx3aWR0aD0yNTYwLGhlaWdodD0xOTIwfTtGQkxDL2l0X0lUO0ZCUlYvMjU2MjY4MDg5O0ZCQ1IvT1BQTztGQk1GL1hpYW9taTtGQkJEL09QaG9uZTtGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9MR19RMTI7RkJTVi8xNDtGQk9QLzc7RkJDQS94ODY7RkJTUy8xNTtdIjsiW0ZCNEEvO0ZCQVYvNFEwOTVNUUc7RkJCVi83MjAxNTk1NDI7RkJBTi9GQjRBO0ZCQVYvNFEwOTVNUUc7RkJCVi83MjAxNTk1NDI7RkJETS8vKntkZW5zaXR5PTIuNSx3aWR0aD0yNTYwLGhlaWdodD00MDk2fTtGQkxDL2VzX0VTO0ZCUlYvNjI0ODYwMjI1O0ZCQ1IvTEc7RkJNRi9BcHBsZTtGQkJEL0FTVVM7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvU29ueV9YcGVyaWFfNUE7RkJTVi8xNjtGQk9QLzY7RkJDQS9hcm02NC12OGE7RkJTUy87XSI7IiBbRkJBTi87RkJBVi87RkJCVi85OTQ2MTIwNTc7RkJBTi9GQkFOO0ZCQVYvO0ZCQlYvOTk0NjEyMDU3O0ZCRE0vLyp7ZGVuc2l0eT0yLjUsd2lkdGg9NzIwLGhlaWdodD0xOTIwfTtGQkxDL2l0X0lUO0ZCUlYvNDg0MzgzMDE4O0ZCQ1IvT1BQTztGQk1GL0FwcGxlO0ZCQkQvT2JpO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL1hpYW9taV9NaV9NaXhfMTQ7RkJTVi8xMztGQk9QLzU7RkJDQS9hcm1lYWJpO0ZCU1MvO10iOyJbRkJBTi87RkJBVi9ZWldTRVM5MztGQkJWLzQ2MDYzMjMwNDtGQkFOL0ZCQU47RkJBVi9ZWldTRVM5MztGQkJWLzQ2MDYzMjMwNDtGQkRNLy8qe2RlbnNpdHk9My4wLHdpZHRoPTcyMCxoZWlnaHQ9MTkyMH07RkJMQy96aF9DTjtGQlJWLzkwMjI5ODQxODtGQkNSL09QUE87RkJNRi9Nb3Rvcm9sYTtGQkJEL0NhbG1lO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL05va2lhX1g4MDtGQlNWLzE3O0ZCT1AvNztGQkNBL3g4Nl82NDtGQlNTLztdIjsiW0ZCQU4vO0ZCQVYvO0ZCQlYvNTM1ODQwODQ1O0ZCQU4vRkJBTjtGQkFWLztGQkJWLzUzNTg0MDg0NTtGQkRNLy8qe2RlbnNpdHk9My4wLHdpZHRoPTEwODAsaGVpZ2h0PTI1NjB9O0ZCTEMvcnVfUlU7RkJSVi80Mzc3MTU0NzQ7RkJDUi9Ob2tpYTtGQk1GL1ZJVk87RkJCRC9HRml2ZTtGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9YaWFvbWlfTWlfMTI7RkJTVi8xMjtGQk9QLzg7RkJDQS94ODZfNjQ7RkJTUy8xMDtdIg0KICAgICAgICByZXR1cm4gdWENCiNfX19fX19fX19fX19fX19fX19bIE0yIF1fX19fX19fX19fX19fX19fX18jDQpkZWYgSE9QX00yKCk6DQogICAgICAgIHVhICA9ICJbRkJBTi9GQjRBO0ZCQVYvIitzdHIocmFuZG9tLnJhbmRpbnQoMTEsNzcpKSsnLjAuMC4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDksNDkpKStzdHIocmFuZG9tLnJhbmRpbnQoMTEsNzcpKSArIjtGQkJWLyIrc3RyKHJhbmRvbS5yYW5kaW50KDExMTExMTEsNzc3Nzc3NykpKyI7J1tGQjRBLztGQkFWL1laV1NFUzkzO0ZCQlYvMzE0Mzg2NTc0O0ZCQU4vRkI0QTtGQkFWL1laV1NFUzkzO0ZCQlYvMzE0Mzg2NTc0O0ZCRE0vLyp7ZGVuc2l0eT0yLjUsd2lkdGg9NzIwLGhlaWdodD0xOTIwfTtGQkxDL2l0X0lUO0ZCUlYvNTk3MDI4MTc0O0ZCQ1IvU29ueTtGQk1GL01vdG9yb2xhO0ZCQkQvU29ueTtGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9YaWFvbWlfTWlfMTJaQTtGQlNWLzE2O0ZCT1AvNjtGQkNBL2FybTY0LXY4YTtGQlNTLzE4O10iOyJbRkJBTi87RkJBVi87RkJCVi8yOTgzMjc2MzM7RkJBTi9GQkFOO0ZCQVYvO0ZCQlYvMjk4MzI3NjMzO0ZCRE0vLyp7ZGVuc2l0eT0yLjUsd2lkdGg9MTkyMCxoZWlnaHQ9MTI4MH07RkJMQy9kZV9ERTtGQlJWLzg3MDcyODY1NztGQkNSL09QUE87RkJNRi9WSVZPO0ZCQkQvRWxlcGhvbmU7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvSFRDX0RyaXZlXzE0O0ZCU1YvMTE7RkJPUC82O0ZCQ0EveDg2XzY0O0ZCU1MvMTQ7XSI7IkZCQU4vO0ZCQVYvO0ZCQlYvNDAxNjY3NDI0O0ZCQU4vRkJBTjtGQkFWLztGQkJWLzQwMTY2NzQyNDtGQkRNLy8qe2RlbnNpdHk9MS41LHdpZHRoPTE0NDAsaGVpZ2h0PTEyODB9O0ZCTEMvamFfSlA7RkJSVi8yMjk4ODMwNDU7RkJDUi9SZWFsbWU7RkJNRi9PbmVQbHVzO0ZCQkQvTWVpenU7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvT25lUGx1c19Ob3JkX044MDA7RkJTVi8xNTtGQk9QLzU7RkJDQS94ODY7RkJTUy8xNDtdIjsiW0ZCQU4vO0ZCQVYvWVpXU0VTOTM7RkJCVi8yMDE3MDgwODI7RkJBTi9GQkFOO0ZCQVYvWVpXU0VTOTM7RkJCVi8yMDE3MDgwODI7RkJETS8vKntkZW5zaXR5PTIuMCx3aWR0aD0yNTYwLGhlaWdodD00MDk2fTtGQkxDL2VuX1VTO0ZCUlYvOTQ2MTA0MTkyO0ZCQ1IvTEc7RkJNRi9BcHBsZTtGQkJEL1BvY287RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvT25lUGx1c19Ob3JkX043MDA7RkJTVi8xMTtGQk9QLzc7RkJDQS94ODZfNjQ7RkJTUy87XSI7IltGQjRBLztGQkFWL0ExWERMNVU0O0ZCQlYvNTM0MDc3NTg4O0ZCQU4vRkI0QTtGQkFWL0ExWERMNVU0O0ZCQlYvNTM0MDc3NTg4O0ZCRE0vLyp7ZGVuc2l0eT0xLjUsd2lkdGg9MTA4MCxoZWlnaHQ9MTI4MH07RkJMQy9qYV9KUDtGQlJWLzQxMDIzOTA2MjtGQkNSL1Nvbnk7RkJNRi9BcHBsZTtGQkJEL0xhdmE7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvSFRDX0RyaXZlXzEyO0ZCU1YvMTI7RkJPUC82O0ZCQ0EveDg2O0ZCU1MvO10iOyJbRkJBTi87RkJBVi9ZWldTRVM5MztGQkJWLzEwNzY0MTYxNTtGQkFOL0ZCQU47RkJBVi9ZWldTRVM5MztGQkJWLzEwNzY0MTYxNTtGQkRNLy8qe2RlbnNpdHk9MS41LHdpZHRoPTI1NjAsaGVpZ2h0PTE5MjB9O0ZCTEMvaXRfSVQ7RkJSVi8yNTYyNjgwODk7RkJDUi9PUFBPO0ZCTUYvWGlhb21pO0ZCQkQvT1Bob25lO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL0xHX1ExMjtGQlNWLzE0O0ZCT1AvNztGQkNBL3g4NjtGQlNTLzE1O10iOyJbRkI0QS87RkJBVi80UTA5NU1RRztGQkJWLzcyMDE1OTU0MjtGQkFOL0ZCNEE7RkJBVi80UTA5NU1RRztGQkJWLzcyMDE1OTU0MjtGQkRNLy8qe2RlbnNpdHk9Mi41LHdpZHRoPTI1NjAsaGVpZ2h0PTQwOTZ9O0ZCTEMvZXNfRVM7RkJSVi82MjQ4NjAyMjU7RkJDUi9MRztGQk1GL0FwcGxlO0ZCQkQvQVNVUztGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9Tb255X1hwZXJpYV81QTtGQlNWLzE2O0ZCT1AvNjtGQkNBL2FybTY0LXY4YTtGQlNTLztdIjsiIFtGQkFOLztGQkFWLztGQkJWLzk5NDYxMjA1NztGQkFOL0ZCQU47RkJBVi87RkJCVi85OTQ2MTIwNTc7RkJETS8vKntkZW5zaXR5PTIuNSx3aWR0aD03MjAsaGVpZ2h0PTE5MjB9O0ZCTEMvaXRfSVQ7RkJSVi80ODQzODMwMTg7RkJDUi9PUFBPO0ZCTUYvQXBwbGU7RkJCRC9PYmk7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvWGlhb21pX01pX01peF8xNDtGQlNWLzEzO0ZCT1AvNTtGQkNBL2FybWVhYmk7RkJTUy87XSI7IltGQkFOLztGQkFWL1laV1NFUzkzO0ZCQlYvNDYwNjMyMzA0O0ZCQU4vRkJBTjtGQkFWL1laV1NFUzkzO0ZCQlYvNDYwNjMyMzA0O0ZCRE0vLyp7ZGVuc2l0eT0zLjAsd2lkdGg9NzIwLGhlaWdodD0xOTIwfTtGQkxDL3poX0NOO0ZCUlYvOTAyMjk4NDE4O0ZCQ1IvT1BQTztGQk1GL01vdG9yb2xhO0ZCQkQvQ2FsbWU7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvTm9raWFfWDgwO0ZCU1YvMTc7RkJPUC83O0ZCQ0EveDg2XzY0O0ZCU1MvO10iOyJbRkJBTi87RkJBVi87RkJCVi81MzU4NDA4NDU7RkJBTi9GQkFOO0ZCQVYvO0ZCQlYvNTM1ODQwODQ1O0ZCRE0vLyp7ZGVuc2l0eT0zLjAsd2lkdGg9MTA4MCxoZWlnaHQ9MjU2MH07RkJMQy9ydV9SVTtGQlJWLzQzNzcxNTQ3NDtGQkNSL05va2lhO0ZCTUYvVklWTztGQkJEL0dGaXZlO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL1hpYW9taV9NaV8xMjtGQlNWLzEyO0ZCT1AvODtGQkNBL3g4Nl82NDtGQlNTLzEwO10iDQogICAgICAgIHJldHVybiB1YQ0KI19fX19fX19fX19fX19fX19fX1sgTTMgXV9fX19fX19fX19fX19fX19fXyMNCmRlZiBIT1BfTTMoKToNCiAgICAgICAgdWEgID0gIltGQkFOL0ZCNEE7RkJBVi8iK3N0cihyYW5kb20ucmFuZGludCgxMSw3NykpKycuMC4wLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoOSw0OSkpK3N0cihyYW5kb20ucmFuZGludCgxMSw3NykpICsiO0ZCQlYvIitzdHIocmFuZG9tLnJhbmRpbnQoMTExMTExMSw3Nzc3Nzc3KSkrIjsnW0ZCNEEvO0ZCQVYvWVpXU0VTOTM7RkJCVi8zMTQzODY1NzQ7RkJBTi9GQjRBO0ZCQVYvWVpXU0VTOTM7RkJCVi8zMTQzODY1NzQ7RkJETS8vKntkZW5zaXR5PTIuNSx3aWR0aD03MjAsaGVpZ2h0PTE5MjB9O0ZCTEMvaXRfSVQ7RkJSVi81OTcwMjgxNzQ7RkJDUi9Tb255O0ZCTUYvTW90b3JvbGE7RkJCRC9Tb255O0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL1hpYW9taV9NaV8xMlpBO0ZCU1YvMTY7RkJPUC82O0ZCQ0EvYXJtNjQtdjhhO0ZCU1MvMTg7XSI7IltGQkFOLztGQkFWLztGQkJWLzI5ODMyNzYzMztGQkFOL0ZCQU47RkJBVi87RkJCVi8yOTgzMjc2MzM7RkJETS8vKntkZW5zaXR5PTIuNSx3aWR0aD0xOTIwLGhlaWdodD0xMjgwfTtGQkxDL2RlX0RFO0ZCUlYvODcwNzI4NjU3O0ZCQ1IvT1BQTztGQk1GL1ZJVk87RkJCRC9FbGVwaG9uZTtGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9IVENfRHJpdmVfMTQ7RkJTVi8xMTtGQk9QLzY7RkJDQS94ODZfNjQ7RkJTUy8xNDtdIjsiRkJBTi87RkJBVi87RkJCVi80MDE2Njc0MjQ7RkJBTi9GQkFOO0ZCQVYvO0ZCQlYvNDAxNjY3NDI0O0ZCRE0vLyp7ZGVuc2l0eT0xLjUsd2lkdGg9MTQ0MCxoZWlnaHQ9MTI4MH07RkJMQy9qYV9KUDtGQlJWLzIyOTg4MzA0NTtGQkNSL1JlYWxtZTtGQk1GL09uZVBsdXM7RkJCRC9NZWl6dTtGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9PbmVQbHVzX05vcmRfTjgwMDtGQlNWLzE1O0ZCT1AvNTtGQkNBL3g4NjtGQlNTLzE0O10iOyJbRkJBTi87RkJBVi9ZWldTRVM5MztGQkJWLzIwMTcwODA4MjtGQkFOL0ZCQU47RkJBVi9ZWldTRVM5MztGQkJWLzIwMTcwODA4MjtGQkRNLy8qe2RlbnNpdHk9Mi4wLHdpZHRoPTI1NjAsaGVpZ2h0PTQwOTZ9O0ZCTEMvZW5fVVM7RkJSVi85NDYxMDQxOTI7RkJDUi9MRztGQk1GL0FwcGxlO0ZCQkQvUG9jbztGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9PbmVQbHVzX05vcmRfTjcwMDtGQlNWLzExO0ZCT1AvNztGQkNBL3g4Nl82NDtGQlNTLztdIjsiW0ZCNEEvO0ZCQVYvQTFYREw1VTQ7RkJCVi81MzQwNzc1ODg7RkJBTi9GQjRBO0ZCQVYvQTFYREw1VTQ7RkJCVi81MzQwNzc1ODg7RkJETS8vKntkZW5zaXR5PTEuNSx3aWR0aD0xMDgwLGhlaWdodD0xMjgwfTtGQkxDL2phX0pQO0ZCUlYvNDEwMjM5MDYyO0ZCQ1IvU29ueTtGQk1GL0FwcGxlO0ZCQkQvTGF2YTtGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9IVENfRHJpdmVfMTI7RkJTVi8xMjtGQk9QLzY7RkJDQS94ODY7RkJTUy87XSI7IltGQkFOLztGQkFWL1laV1NFUzkzO0ZCQlYvMTA3NjQxNjE1O0ZCQU4vRkJBTjtGQkFWL1laV1NFUzkzO0ZCQlYvMTA3NjQxNjE1O0ZCRE0vLyp7ZGVuc2l0eT0xLjUsd2lkdGg9MjU2MCxoZWlnaHQ9MTkyMH07RkJMQy9pdF9JVDtGQlJWLzI1NjI2ODA4OTtGQkNSL09QUE87RkJNRi9YaWFvbWk7RkJCRC9PUGhvbmU7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvTEdfUTEyO0ZCU1YvMTQ7RkJPUC83O0ZCQ0EveDg2O0ZCU1MvMTU7XSI7IltGQjRBLztGQkFWLzRRMDk1TVFHO0ZCQlYvNzIwMTU5NTQyO0ZCQU4vRkI0QTtGQkFWLzRRMDk1TVFHO0ZCQlYvNzIwMTU5NTQyO0ZCRE0vLyp7ZGVuc2l0eT0yLjUsd2lkdGg9MjU2MCxoZWlnaHQ9NDA5Nn07RkJMQy9lc19FUztGQlJWLzYyNDg2MDIyNTtGQkNSL0xHO0ZCTUYvQXBwbGU7RkJCRC9BU1VTO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL1NvbnlfWHBlcmlhXzVBO0ZCU1YvMTY7RkJPUC82O0ZCQ0EvYXJtNjQtdjhhO0ZCU1MvO10iOyIgW0ZCQU4vO0ZCQVYvO0ZCQlYvOTk0NjEyMDU3O0ZCQU4vRkJBTjtGQkFWLztGQkJWLzk5NDYxMjA1NztGQkRNLy8qe2RlbnNpdHk9Mi41LHdpZHRoPTcyMCxoZWlnaHQ9MTkyMH07RkJMQy9pdF9JVDtGQlJWLzQ4NDM4MzAxODtGQkNSL09QUE87RkJNRi9BcHBsZTtGQkJEL09iaTtGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9YaWFvbWlfTWlfTWl4XzE0O0ZCU1YvMTM7RkJPUC81O0ZCQ0EvYXJtZWFiaTtGQlNTLztdIjsiW0ZCQU4vO0ZCQVYvWVpXU0VTOTM7RkJCVi80NjA2MzIzMDQ7RkJBTi9GQkFOO0ZCQVYvWVpXU0VTOTM7RkJCVi80NjA2MzIzMDQ7RkJETS8vKntkZW5zaXR5PTMuMCx3aWR0aD03MjAsaGVpZ2h0PTE5MjB9O0ZCTEMvemhfQ047RkJSVi85MDIyOTg0MTg7RkJDUi9PUFBPO0ZCTUYvTW90b3JvbGE7RkJCRC9DYWxtZTtGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9Ob2tpYV9YODA7RkJTVi8xNztGQk9QLzc7RkJDQS94ODZfNjQ7RkJTUy87XSI7IltGQkFOLztGQkFWLztGQkJWLzUzNTg0MDg0NTtGQkFOL0ZCQU47RkJBVi87RkJCVi81MzU4NDA4NDU7RkJETS8vKntkZW5zaXR5PTMuMCx3aWR0aD0xMDgwLGhlaWdodD0yNTYwfTtGQkxDL3J1X1JVO0ZCUlYvNDM3NzE1NDc0O0ZCQ1IvTm9raWE7RkJNRi9WSVZPO0ZCQkQvR0ZpdmU7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvWGlhb21pX01pXzEyO0ZCU1YvMTI7RkJPUC84O0ZCQ0EveDg2XzY0O0ZCU1MvMTA7XSINCiAgICAgICAgcmV0dXJuIHVhDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1bIFVBLUNPREUgXS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIw0KI29sZCB1YSBkZWZbXQ0KZGVmIHdpbmRvd3MoKToNCiAgICBhVj1zdHIocmFuZG9tLmNob2ljZShyYW5nZSgxMCwyMCkpKQ0KICAgIEE9ZiJNb3ppbGxhLzUuMCAoV2luZG93czsgVTsgV2luZG93cyBOVCB7c3RyKHJhbmRvbS5jaG9pY2UocmFuZ2UoNSw3KSkpfS4xOyBlbi1VUykgQXBwbGVXZWJLaXQvNTM0LnthVn0gKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUve3N0cihyYW5kb20uY2hvaWNlKHJhbmdlKDgsMTIpKSl9LjAue3N0cihyYW5kb20uY2hvaWNlKHJhbmdlKDU1Miw2NjEpKSl9LjAgU2FmYXJpLzUzNC57YVZ9Ig0KICAgIGJWPXN0cihyYW5kb20uY2hvaWNlKHJhbmdlKDEsMzYpKSkNCiAgICBieD1zdHIocmFuZG9tLmNob2ljZShyYW5nZSgzNCwzOCkpKQ0KICAgIGJ6PWYiNXtieH0ue2JWfSINCiAgICBCPWYiTW96aWxsYS81LjAgKFdpbmRvd3MgTlQge3N0cihyYW5kb20uY2hvaWNlKHJhbmdlKDUsNykpKX0ue3N0cihyYW5kb20uY2hvaWNlKFsnMicsJzEnXSkpfSkgQXBwbGVXZWJLaXQve2J6fSAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS97c3RyKHJhbmRvbS5jaG9pY2UocmFuZ2UoMTIsNDIpKSl9LjAue3N0cihyYW5kb20uY2hvaWNlKHJhbmdlKDc0MiwyMjAwKSkpfS57c3RyKHJhbmRvbS5jaG9pY2UocmFuZ2UoMSwxMjApKSl9IFNhZmFyaS97Ynp9Ig0KICAgIGNWPXN0cihyYW5kb20uY2hvaWNlKHJhbmdlKDEsMzYpKSkNCiAgICBjeD1zdHIocmFuZG9tLmNob2ljZShyYW5nZSgzNCwzOCkpKQ0KICAgIGN6PWYiNXtjeH0ue2NWfSINCiAgICBDPWYiTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi57c3RyKHJhbmRvbS5jaG9pY2UoWycyJywnMSddKSl9OyBXT1c2NCkgQXBwbGVXZWJLaXQve2N6fSAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS97c3RyKHJhbmRvbS5jaG9pY2UocmFuZ2UoMTIsNDIpKSl9LjAue3N0cihyYW5kb20uY2hvaWNlKHJhbmdlKDc0MiwyMjAwKSkpfS57c3RyKHJhbmRvbS5jaG9pY2UocmFuZ2UoMSwxMjApKSl9IFNhZmFyaS97Y3p9Ig0KICAgIEQ9ZiJNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTIxLjAue3N0cihyYW5kb20uY2hvaWNlKHJhbmdlKDEsNzEyMCkpKX0uMCBTYWZhcmkvNTM3LjM2Ig0KICAgIHJldHVybiByYW5kb20uY2hvaWNlKFtBLEIsQyxEXSkNCg0KI19fX19fX19fX19fX19fX19fX3wgTE9HTyB8X19fX19fX19fX19fX19fX19fIw0KbG9nbz0oIiIiXDAzM1sxOzM3bSANCu+8nO+/o++9gOODveOAgSAgICAgICAgICAgICAgICAgICAgICAgICAgICDvvI/vv6PvvJ4NCiAgICAgIOOCneOAgSAgICAgIO+8vCAgICDvvI/ijJLjg70s44OOICAgICAvwrQNCiAgICAgICAgICAgICAg44Kd44CBICBg77yIICggzaHCsCDNnMqWIM2hwrApIO+8jw0KICAgICAgICAgICAgICAgICAgICAgICAgPiAgICAgICAgICAgLOODjg0KICAgICAgICAgICAgICAgICAgICDiiKBfLCwsL8K04oCdDQogICAgICAgICAgICAgICAgICDiiKnigJXigJXigJXigJXiiKkNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NClwwMzNbMTszMm3igKJcMDMzWzE7MzdtIENSRUFURUQgQlkgIFwwMzNbMTszMm0g4oCi4oiaXDAzM1sxOzM3bSAgS2hhbGlsIA0KXDAzM1sxOzMybeKAolwwMzNbMTszN20gRkFDRUJPT0sgICAgXDAzM1sxOzMybSDigKLiiJpcMDMzWzE7MzdtICBMVUZGWQ0KXDAzM1sxOzMybeKAolwwMzNbMTszN20gVE9PTFMgICAgICAgXDAzM1sxOzMybSDigKLiiJpcMDMzWzE7MzdtICBGUkVFDQpcMDMzWzE7MzJt4oCiXDAzM1sxOzM3bSBWRVJTSU9OICAgICBcMDMzWzE7MzJtIOKAouKImlwwMzNbMTszN20gIFwwMzNbMTszMm0yLjBcMDMzWzE7MzdtIA0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIiIiKQ0KI19fX19fX19fX19fX19fX19fX3wgTUFJTiB8X19fX19fX19fX19fX19fX19fIw0KZGVmIG1lbnUoKToNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXIoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidceDFiWzM4OzU7MjQ0bSh7QX0xXHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBGSUxFIENMT05JTkcgXG5ceDFiWzM4OzU7MjQ0bSh7QX0yXHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBSQU5ET00gQ0xPTklOR1xuXHgxYlszODs1OzI0NG0oe0F9MFx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gRVhJVCBUT09MJykNCiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmV4KCkNCiAgICAgICAgICAgICAgICAgICAgICAgIHhkPWlucHV0KGYnXHgxYlszODs1OzI0NG0oe0F9P1x4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gQ0hPSUNFIDogJykNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIHhkIGluIFsnMScsJzAxJ106DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyKCk7cHJpbnQoZidceDFiWzM4OzU7MjQ0bSh7QX3imKDvuI9ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIEVYQU1QTEUgOiAvc2RjYXJkL0ZJTEUudHh0ICcpO2xpbmV4KCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZSA9IGlucHV0KGYnXHgxYlszODs1OzI0NG0oe0F9P1x4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gRklMRSBOQU1FIDogJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvID0gb3BlbihmaWxlLCdyJykucmVhZCgpLnNwbGl0bGluZXMoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGNlcHQgRmlsZU5vdEZvdW5kRXJyb3I6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidceDFiWzM4OzU7MjQ0bSh7QX3imKDvuI9ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIEZJTEUgTE9DQVRJT04gTk9UIEZPVU5EICcpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcCgxKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lbnUoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGVhcigpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F9MVx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gTUVUSE9EIFx4MWJbMzg7NTsyNDRtKHtBfU0xXHgxYlszODs1OzI0NG0pXG5ceDFiWzM4OzU7MjQ0bSh7QX0yXHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBNRVRIT0QgXHgxYlszODs1OzI0NG0oe0F9TTJceDFiWzM4OzU7MjQ0bSknKTtsaW5leCgpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG10aGQ9aW5wdXQoZidceDFiWzM4OzU7MjQ0bSh7QX0/XHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBDSE9JQ0UgOiAnKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGVhcigpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwc19saW1pdCA9IGludChpbnB1dChmJ1x4MWJbMzg7NTsyNDRtKHtBfeKYoO+4j1x4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gUEFTU1dPUkQgTElNSVQgOiAnKSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhjZXB0Og0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHNfbGltaXQgPTENCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXIoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1x4MWJbMzg7NTsyNDRtW1x4MWJbMTs5N23imKDvuI9ceDFiWzM4OzU7MjQ0bV0gXHgxYlszODs1OzQ2bUVYQU1QTEUgXHgxYlsxOzk3beKXjyBceDFiWzM4OzU7NDZtZmlyc3QgbGFzdCBceDFiWzM4OzU7MjQ0bXxceDFiWzM4OzU7NDZtIGZpcnN0MTIzJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidceDFiWzM4OzU7MjQ0bVtceDFiWzE7OTdt4pig77iPXHgxYlszODs1OzI0NG1dIFx4MWJbMzg7NTs0Nm1FWEFNUExFIFx4MWJbMTs5N23il48gXHgxYlszODs1OzQ2bTU3MjczMjAwIDU5MDM5MjAwIDU3NTc1NzUxICcpO2xpbmV4KCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIGkgaW4gcmFuZ2UocHNfbGltaXQpOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxpc3QuYXBwZW5kKGlucHV0KGYnXHgxYlszODs1OzI0NG0oe0F94pig77iPXHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBQQVNTV09SRCBOTyB7aSsxfSBceDFiWzM4OzU7MjQ0beKAk1x4MWJbMzg7NTs0Nm3inqR7QX0gJykpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmV4KCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidceDFiWzM4OzU7MjQ0bVtceDFiWzE7OTdt4pig77iPXHgxYlszODs1OzI0NG1dIFx4MWJbMzg7NTs0Nm1FWEFNUExFIFx4MWJbMTs5N23il48gXHgxYlszODs1OzQ2bWZpcnN0IGxhc3QgXHgxYlszODs1OzI0NG18XHgxYlszODs1OzQ2bSBmaXJzdDEyMycpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYnXHgxYlszODs1OzI0NG1bXHgxYlsxOzk3beKYoO+4j1x4MWJbMzg7NTsyNDRtXSBceDFiWzM4OzU7NDZtRVhBTVBMRSBceDFiWzE7OTdt4pePIFx4MWJbMzg7NTs0Nm01NzI3MzIwMCA1OTAzOTIwMCA1NzU3NTc1MSAnKTtsaW5leCgpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyKCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidceDFiWzM4OzU7MjQ0bSh7QX3imKDvuI9ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIERPIFlPVSBXRU5UIFNIT1cgQ1AgQUNDT1VOVCDinqQgXHgxYlszODs1OzI0NG1bXHgxYlszODs1OzQ2bVlceDFiWzM4OzU7MjQ0bS9ceDFiWzE7OTFtTlx4MWJbMzg7NTsyNDRtXScpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmV4KCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3g9aW5wdXQoZidceDFiWzM4OzU7MjQ0bSh7QX0/XHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBDSE9JQ0UgOiAnKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBjeCBpbiBbJ3knLCdZJywneWVzJywnWWVzJywnMSddOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBjcC5hcHBlbmQoJ3knKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBjcC5hcHBlbmQoJ24nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aXRoIHRyZWQobWF4X3dvcmtlcnM9MzApIGFzIGNyYWNrX3N1Ym1pdDoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGVhcigpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxfaWRzID0gc3RyKGxlbihmbykpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidceDFiWzM4OzU7MjQ0bSh7QX3imKDvuI9ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIFRPVEFMIEFDQ09VTlQgXHgxYlszODs1OzI0NG3igJNceDFiWzM4OzU7NDZt4p6ke0F9ICcrdG90YWxfaWRzK2YnIFx4MWJbMzg7NTsyNDRtKHtBfeKcmFx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gUEFTUyBceDFiWzM4OzU7MjQ0beKAk1x4MWJbMzg7NTs0Nm3inqR7QX0ge3BzX2xpbWl0fScpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidceDFiWzM4OzU7MjQ0bSh7QX3imKDvuI9ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIElGIE5PIFJFU1VMVCBceDFiWzM4OzU7MjQ0bVtceDFiWzM4OzU7NDZtT05ceDFiWzM4OzU7MjQ0bS9ceDFiWzM4OzU7NDZtT0ZGXHgxYlszODs1OzI0NG1dXHgxYlszODs1OzQ2bSBBSVJQTEFORSBNT0RFe0J9W3tBfU17bXRoZH17Qn1dJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5leCgpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIHVzZXIgaW4gZm86DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZHMsbmFtZXMgPSB1c2VyLnNwbGl0KCd8JykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3NsaXN0ID0gcGxpc3QNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIG10aGQgaW4gWycxJywnMDEnXToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JhY2tfc3VibWl0LnN1Ym1pdChhcGkxLGlkcyxuYW1lcyxwYXNzbGlzdCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsaWYgbXRoZCBpbiBbJzInLCcwMiddOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmFja19zdWJtaXQuc3VibWl0KGFwaTIsaWRzLG5hbWVzLHBhc3NsaXN0KQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgnXDAzM1sxOzM3bScpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYnXHJceDFiWzE7OTdt4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSBXDAzM1sxOzM3bScpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F94pig77iPXHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBUSEUgUFJPQ0VTUyBIQVMgQ09NUExFVEVEJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidceDFiWzM4OzU7MjQ0bSh7QX3imKDvuI9ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIFRPVEFMIE9LL0NQIDogJytzdHIobGVuKG9rcykpKycvJytzdHIobGVuKGNwcykpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1xyXHgxYlsxOzk3beKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgVwwMzNbMTszN20nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dChmJ1x4MWJbMzg7NTsyNDRtKHtBfeKYoO+4j1x4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gUFJFU1MgRU5URVIgVE8gQkFDSyAnKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZW51KCkNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsaWYgeGQgaW4gWycyJywnMDInXToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG0oKQ0KICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiB4ZCBpbiBbJzMnLCcwMyddOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfb2xkXygpDQogICAgICAgICAgICAgICAgICAgICAgICBlbGlmIHhkIGluIFsnMCcsJzA1J106DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4aXQoZidceDFiWzM4OzU7MjQ0bSh7QX1ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIEVYSVQgRE9ORSAnKQ0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhpdChmJ1x4MWJbMzg7NTsyNDRtKHtBfVx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gT1BUSU9OIE5PVCBGT1VORCBJTiBNRU5VLi4uJykNCiAgICAgICAgZXhjZXB0IFZhbHVlRXJyb3I6DQogICAgICAgICAgICAgICAgZXhpdCgpDQogICAgICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCiAgICAgICAgICAgICAgICBwcmludChmJ1x4MWJbMzg7NTsyNDRtKHtBfeKYoO+4j1x4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gTk8gSU5URVJORVQgQ09OTkVDVElPTi4uLicpDQogICAgICAgICAgICAgICAgZXhpdCgpDQojX19fX19fX19fX19fX19fX19ffCBSQU5ET00gfF9fX19fX19fX19fX19fX19fXyMNCmRlZiByYW5kbSgpOg0KICAgIGNsZWFyKCkNCiAgICBwcmludChmJ1x4MWJbMzg7NTsyNDRtKHtBfTFceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIEJBTkdMQURFU0ggQ0xPTklORyAnKQ0KICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F9Mlx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gSU5ESUEgQ0xPTklORyAnKQ0KICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F9M1x4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gTkVQQUwgQ0xPTklORyAnKQ0KICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F9MFx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gQkFDSyBUTyBNRU5VICcpO2xpbmV4KCkNCiAgICBvcHRpb249aW5wdXQoZidceDFiWzM4OzU7MjQ0bSh7QX0/XHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBDSE9JQ0UgOiAnKQ0KICAgIGlmIG9wdGlvbiBpbiBbJzEnLCdBJ106DQogICAgICAgIGJkKCkNCiAgICBlbGlmIG9wdGlvbiBpbiBbJzInLCdCJ106DQogICAgICAgIGluZGlhKCkNCiAgICBlbGlmIG9wdGlvbiBpbiBbJzMnLCdDJ106DQogICAgICAgIG5lcGFsKCkNCiAgICBlbGlmIG9wdGlvbiBpbiBbJzAnLCcwMCddOg0KICAgICAgICBtZW51KCkNCiAgICBlbHNlOg0KICAgICAgICBleGl0KGYnXHgxYlszODs1OzI0NG0oe0F9XHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBCWUUgQllFICcpDQojX19fX19fX19fX19fX19fX19ffCBCQU5HTEFERVNIIHxfX19fX19fX19fX19fX19fX18jDQpkZWYgYmQoKToNCiAgICAgICAgdXNlcj1bXQ0KICAgICAgICBjbGVhcigpDQogICAgICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F94pig77iPXHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBFWEFNUExFIDogMDE3IHwgMDE5IHwgMDE4IHwgMDE2ICcpO2xpbmV4KCkNCiAgICAgICAgY29kZSA9IGlucHV0KGYnXHgxYlszODs1OzI0NG0oe0F9P1x4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gQ0hPSUNFICA6ICcpDQogICAgICAgIGNsZWFyKCk7cHJpbnQoZidceDFiWzM4OzU7MjQ0bSh7QX3imKDvuI9ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIEVYQU1QTEUgOiAzMDAwIHwgNTAwMCB8IDEwMDAwIHwgOTk5OTkgJyk7bGluZXgoKQ0KICAgICAgICBsaW1pdCA9IGludChpbnB1dChmJ1x4MWJbMzg7NTsyNDRtKHtBfT9ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIENIT0lDRSAgOiAnKSkNCiAgICAgICAgY2xlYXIoKQ0KICAgICAgICBwcmludChmJ1x4MWJbMzg7NTsyNDRtKHtBfTFceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIE1FVEhPRCBceDFiWzM4OzU7MjQ0bSh7QX1NMVx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gXG5ceDFiWzM4OzU7MjQ0bSh7QX0yXHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBNRVRIT0QgXHgxYlszODs1OzI0NG0oe0F9TTJceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtICcpO2xpbmV4KCkNCiAgICAgICAgbXRoZCA9IGlucHV0KGYnXHgxYlszODs1OzI0NG0oe0F9P1x4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gQ0hPSUNFICA6ICcpDQogICAgICAgIGZvciBubWJyIGluIHJhbmdlKGxpbWl0KToNCiAgICAgICAgICAgIG5tcD0nJy5qb2luKHJhbmRvbS5jaG9pY2Uoc3RyaW5nLmRpZ2l0cykgZm9yIF8gaW4gcmFuZ2UoOCkpDQogICAgICAgICAgICB1c2VyLmFwcGVuZChubXApDQogICAgICAgIHdpdGggdHJlZChtYXhfd29ya2Vycz0zMCkgYXMgaGFiaWI6ICAgIA0KICAgICAgICAgICAgY2xlYXIoKQ0KICAgICAgICAgICAgdGwgPSBzdHIobGVuKHVzZXIpKQ0KICAgICAgICAgICAgcHJpbnQoZidceDFiWzM4OzU7MjQ0bSh7QX1ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIFNJTSBDT0RFIDp7QX0ge2NvZGV9ICcpDQogICAgICAgICAgICBwcmludChmJ1x4MWJbMzg7NTsyNDRtKHtBfVx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gVE9UQUwgSUQgOntBfSB7dGx9ICcpDQogICAgICAgICAgICBwcmludChmJ1x4MWJbMzg7NTsyNDRtKHtBfVx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gSUYgTk8gUkVTVUxUIFx4MWJbMzg7NTsyNDRtW1x4MWJbMzg7NTs0Nm1PTlx4MWJbMzg7NTsyNDRtL1x4MWJbMzg7NTs0Nm1PRkZceDFiWzM4OzU7MjQ0bV1ceDFiWzM4OzU7NDZtIEFJUlBMQU5FIE1PREV7Qn1be0F9TXttdGhkfXtCfV0nKTtsaW5leCgpDQogICAgICAgICAgICBmb3IgcHN4IGluIHVzZXI6DQogICAgICAgICAgICAgICAgdWlkID0gY29kZStwc3gNCiAgICAgICAgICAgICAgICBwYXNzbGlzdCA9IFtwc3gsdWlkLCdCYW5nbGFkZXNoJywnYmFuZ2xhZGVzaCcsJ2kgbG92ZSB5b3UnLCdpbG92ZXlvdScsJ2ZyZWUgZmlyZScsJ2ZyZWVmaXJlJ10NCiAgICAgICAgICAgICAgICBpZiBtdGhkIGluIFsnMScsJzAxJ106DQogICAgICAgICAgICAgICAgICAgIGhhYmliLnN1Ym1pdChybmRtMSx1aWQscGFzc2xpc3QpDQogICAgICAgICAgICAgICAgaWYgbXRoZCBpbiBbJzInLCcwMiddOg0KICAgICAgICAgICAgICAgICAgICBoYWJpYi5zdWJtaXQocm5kbTIsdWlkLHBhc3NsaXN0KQ0KICAgICAgICBwcmludCgnXDAzM1sxOzM3bScpDQogICAgICAgIHByaW50KGYnXHJceDFiWzE7OTdt4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSBXDAzM1sxOzM3bScpDQogICAgICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F9XHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBUSEUgUFJPQ0VTUyBIQVMgQ09NUExFVEVEJykNCiAgICAgICAgcHJpbnQoZidceDFiWzM4OzU7MjQ0bSh7QX1ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIFRPVEFMIE9LIElEIDogJytzdHIobGVuKG9rcykpKQ0KICAgICAgICBwcmludChmJ1x4MWJbMzg7NTsyNDRtKHtBfVx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gVE9UQUwgQ1AgSUQgOiAnK3N0cihsZW4oY3BzKSkpDQogICAgICAgIHByaW50KGYnXHJceDFiWzE7OTdt4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSBXDAzM1sxOzM3bScpDQogICAgICAgIGlucHV0KGYnXHgxYlszODs1OzI0NG0oe0F9XHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBQUkVTUyBFTlRFUiBUTyBCQUNLICcpDQogICAgICAgIG1lbnUoKQ0KI19fX19fX19fX19fX19fX19fX3wgSU5ESUEgfF9fX19fX19fX19fX19fX19fXyMNCmRlZiBpbmRpYSgpOg0KICAgICAgICB1c2VyPVtdDQogICAgICAgIGNsZWFyKCkNCiAgICAgICAgcHJpbnQoZidceDFiWzM4OzU7MjQ0bSh7QX3imKDvuI9ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIEVYQU1QTEUgOiArOTE2MzkgfCArOTE5MzQgfCArOTE5MDIgfCArOTE5MzcgJyk7bGluZXgoKQ0KICAgICAgICBjb2RlID0gaW5wdXQoZidceDFiWzM4OzU7MjQ0bSh7QX0/XHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBDSE9JQ0UgIDogJykNCiAgICAgICAgY2xlYXIoKTtwcmludChmJ1x4MWJbMzg7NTsyNDRtKHtBfeKYoO+4j1x4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gRVhBTVBMRSA6IDMwMDAgfCA1MDAwIHwgMTAwMDAgfCA5OTk5OSAnKTtsaW5leCgpDQogICAgICAgIGxpbWl0ID0gaW50KGlucHV0KGYnXHgxYlszODs1OzI0NG0oe0F9P1x4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gQ0hPSUNFICA6ICcpKQ0KICAgICAgICBjbGVhcigpDQogICAgICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F9MVx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gTUVUSE9EIFx4MWJbMzg7NTsyNDRtKHtBfU0xXHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBcblx4MWJbMzg7NTsyNDRtKHtBfTJceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIE1FVEhPRCBceDFiWzM4OzU7MjQ0bSh7QX1NMlx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gJyk7bGluZXgoKQ0KICAgICAgICBtdGhkID0gaW5wdXQoZidceDFiWzM4OzU7MjQ0bSh7QX0/XHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBDSE9JQ0UgIDogJykNCiAgICAgICAgZm9yIG5tYnIgaW4gcmFuZ2UobGltaXQpOg0KICAgICAgICAgICAgbm1wID0gIiIuIGpvaW4ocmFuZG9tLmNob2ljZShzdHJpbmcuZGlnaXRzKSBmb3IgXyBpbiByYW5nZSg3KSkNCiAgICAgICAgICAgIHVzZXIuYXBwZW5kKG5tcCkNCiAgICAgICAgd2l0aCB0cmVkKG1heF93b3JrZXJzPTMwKSBhcyBoYWJpYjogICAgDQogICAgICAgICAgICBjbGVhcigpDQogICAgICAgICAgICB0bCA9IHN0cihsZW4odXNlcikpDQogICAgICAgICAgICBwcmludChmJ1x4MWJbMzg7NTsyNDRtKHtBfVx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gU0lNIENPREUgOntBfSB7Y29kZX0gJykNCiAgICAgICAgICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F9XHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBUT1RBTCBJRCA6e0F9IHt0bH0gJykNCiAgICAgICAgICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F9XHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBJRiBOTyBSRVNVTFQgXHgxYlszODs1OzI0NG1bXHgxYlszODs1OzQ2bU9OXHgxYlszODs1OzI0NG0vXHgxYlszODs1OzQ2bU9GRlx4MWJbMzg7NTsyNDRtXVx4MWJbMzg7NTs0Nm0gQUlSUExBTkUgTU9ERXtCfVt7QX1Ne210aGR9e0J9XScpO2xpbmV4KCkNCiAgICAgICAgICAgIGZvciBwc3ggaW4gdXNlcjoNCiAgICAgICAgICAgICAgICB1aWQgPSBjb2RlK3BzeA0KICAgICAgICAgICAgICAgIHBhc3NsaXN0ID0gW3BzeCx1aWRbOjhdLCc1NzI3MzIwMCcsJzU5MDM5MjAwJywnNTc1NzU3NTEnXQ0KICAgICAgICAgICAgICAgIGlmIG10aGQgaW4gWycxJywnMDEnXToNCiAgICAgICAgICAgICAgICAgICAgaGFiaWIuc3VibWl0KHJuZG0xLHVpZCxwYXNzbGlzdCkNCiAgICAgICAgICAgICAgICBpZiBtdGhkIGluIFsnMicsJzAyJ106DQogICAgICAgICAgICAgICAgICAgIGhhYmliLnN1Ym1pdChybmRtMix1aWQscGFzc2xpc3QpDQogICAgICAgIHByaW50KCdcMDMzWzE7MzdtJykNCiAgICAgICAgcHJpbnQoZidcclx4MWJbMTs5N23ilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIFcMDMzWzE7MzdtJykNCiAgICAgICAgcHJpbnQoZidceDFiWzM4OzU7MjQ0bSh7QX1ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIFRIRSBQUk9DRVNTIEhBUyBDT01QTEVURUQnKQ0KICAgICAgICBwcmludChmJ1x4MWJbMzg7NTsyNDRtKHtBfVx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gVE9UQUwgT0sgSUQgOiAnK3N0cihsZW4ob2tzKSkpDQogICAgICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F9XHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBUT1RBTCBDUCBJRCA6ICcrc3RyKGxlbihjcHMpKSkNCiAgICAgICAgcHJpbnQoZidcclx4MWJbMTs5N23ilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIFcMDMzWzE7MzdtJykNCiAgICAgICAgaW5wdXQoZidceDFiWzM4OzU7MjQ0bSh7QX1ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIFBSRVNTIEVOVEVSIFRPIEJBQ0sgJykNCiAgICAgICAgbWVudSgpDQojX19fX19fX19fX19fX19fX19ffCBORVBBTCB8X19fX19fX19fX19fX19fX19fIw0KZGVmIG5lcGFsKCk6DQogICAgICAgIHVzZXI9W10NCiAgICAgICAgY2xlYXIoKQ0KICAgICAgICBwcmludChmJ1x4MWJbMzg7NTsyNDRtKHtBfVx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gRVhBTVBMRSA6IDk4MTUgfCA5ODE0IHwgOTg2MSB8IDk4NDAgJyk7bGluZXgoKQ0KICAgICAgICBjb2RlID0gaW5wdXQoZidceDFiWzM4OzU7MjQ0bSh7QX0/XHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBDSE9JQ0UgIDogJykNCiAgICAgICAgY2xlYXIoKTtwcmludChmJ1x4MWJbMzg7NTsyNDRtKHtBfVx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gRVhBTVBMRSA6IDMwMDAgfCA1MDAwIHwgMTAwMDAgfCA5OTk5OSAnKTtsaW5leCgpDQogICAgICAgIGxpbWl0ID0gaW50KGlucHV0KGYnXHgxYlszODs1OzI0NG0oe0F9P1x4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gQ0hPSUNFICA6ICcpKQ0KICAgICAgICBjbGVhcigpDQogICAgICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F9MVx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gTUVUSE9EIFx4MWJbMzg7NTsyNDRtKHtBfU0xXHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBcblx4MWJbMzg7NTsyNDRtKHtBfTJceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIE1FVEhPRCBceDFiWzM4OzU7MjQ0bSh7QX1NMlx4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gJyk7bGluZXgoKQ0KICAgICAgICBtdGhkID0gaW5wdXQoZidceDFiWzM4OzU7MjQ0bSh7QX0/XHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBDSE9JQ0UgIDogJykNCiAgICAgICAgZm9yIG5tYnIgaW4gcmFuZ2UobGltaXQpOg0KICAgICAgICAgICAgbm1wID0gIiIuIGpvaW4ocmFuZG9tLmNob2ljZShzdHJpbmcuZGlnaXRzKSBmb3IgXyBpbiByYW5nZSg2KSkNCiAgICAgICAgICAgIHVzZXIuYXBwZW5kKG5tcCkNCiAgICAgICAgd2l0aCB0cmVkKG1heF93b3JrZXJzPTMwKSBhcyBoYWJpYjogICAgDQogICAgICAgICAgICBjbGVhcigpDQogICAgICAgICAgICB0bCA9IHN0cihsZW4odXNlcikpDQogICAgICAgICAgICBwcmludChmJ1x4MWJbMzg7NTsyNDRtKHtBfeKYoO+4j1x4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gU0lNIENPREUgOntBfSB7Y29kZX0gJykNCiAgICAgICAgICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F94pig77iPXHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBUT1RBTCBJRCA6e0F9IHt0bH0gJykNCiAgICAgICAgICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F94pig77iPXHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBJRiBOTyBSRVNVTFQgXHgxYlszODs1OzI0NG1bXHgxYlszODs1OzQ2bU9OXHgxYlszODs1OzI0NG0vXHgxYlszODs1OzQ2bU9GRlx4MWJbMzg7NTsyNDRtXVx4MWJbMzg7NTs0Nm0gQUlSUExBTkUgTU9ERXtCfVt7QX1Ne210aGR9e0J9XScpO2xpbmV4KCkNCiAgICAgICAgICAgIGZvciBwc3ggaW4gdXNlcjoNCiAgICAgICAgICAgICAgICB1aWQgPSBjb2RlK3BzeA0KICAgICAgICAgICAgICAgIHBhc3NsaXN0ID0gW3VpZCxwc3gsdWlkWzo4XSx1aWRbOjddLHVpZFs6Nl0sJ25lcGFsMTInLCduZXBhbDEyMycsJ25lcGFsMTIzNCcsJ25lcGFsMTIzNDUnLCdtYXlhMTIzJywna2F0aG1hbmR1JywncG9raGFyYScsJ3RhbWFuZycsJ21heWExMjM0JywndGFtYW5nMTIzJywndGFtYW5nMTIzNDUnLCduZXBhbEAxMjMnLCdrYXRobWFuZHUxMjMnXQ0KICAgICAgICAgICAgICAgIGlmIG10aGQgaW4gWycxJywnMDEnXToNCiAgICAgICAgICAgICAgICAgICAgaGFiaWIuc3VibWl0KHJuZG0xLHVpZCxwYXNzbGlzdCkNCiAgICAgICAgICAgICAgICBpZiBtdGhkIGluIFsnMicsJzAyJ106DQogICAgICAgICAgICAgICAgICAgIGhhYmliLnN1Ym1pdChybmRtMix1aWQscGFzc2xpc3QpDQogICAgICAgIHByaW50KCdcMDMzWzE7MzdtJykNCiAgICAgICAgcHJpbnQoZidcclx4MWJbMTs5N23ilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIFcMDMzWzE7MzdtJykNCiAgICAgICAgcHJpbnQoZidceDFiWzM4OzU7MjQ0bSh7QX3imKDvuI9ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIFRIRSBQUk9DRVNTIEhBUyBDT01QTEVURUQnKQ0KICAgICAgICBwcmludChmJ1x4MWJbMzg7NTsyNDRtKHtBfeKYoO+4j1x4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gVE9UQUwgT0sgSUQgOiAnK3N0cihsZW4ob2tzKSkpDQogICAgICAgIHByaW50KGYnXHgxYlszODs1OzI0NG0oe0F94pig77iPXHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSBUT1RBTCBDUCBJRCA6ICcrc3RyKGxlbihjcHMpKSkNCiAgICAgICAgcHJpbnQoZidcclx4MWJbMTs5N23ilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIFcMDMzWzE7MzdtJykNCiAgICAgICAgaW5wdXQoZidceDFiWzM4OzU7MjQ0bSh7QX3imKDvuI9ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtIFBSRVNTIEVOVEVSIFRPIEJBQ0sgJykNCiNfX19fX19fX19fX19fX19fX198IEZJTEUgTUVUSE9EIE0xIHxfX19fX19fX19fX19fX19fX18jDQpkZWYgYXBpMShpZHMsbmFtZXMscGFzc2xpc3QpOg0KICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgZ2xvYmFsIG9rcyxsb29wLHNpbV9pZCxkZXZpY2UNCiAgICAgICAgICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKGYnXHJcclx4MWJbMzg7NTsyNDRtKFx4MWJbMzg7NTs0Nm17ZGF0ZX1ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtICVzIFx4MWJbMzg7NTsyNDRtfFx4MWJbMzg7NTs0Nm0gT0tceDFiWzM4OzU7MjQ0bXxceDFiWzM4OzU7NDZtQ1BceDFiWzM4OzU7NDZtICVzXHgxYlszODs1OzI0NG18XHgxYlszODs1OzQ2bSVzICclKGxvb3AsbGVuKG9rcyksbGVuKGNwcykpKTtzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICAgICAgICAgICAgICBmbiA9IG5hbWVzLnNwbGl0KCcgJylbMF0NCiAgICAgICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgICAgICAgICBsbiA9IG5hbWVzLnNwbGl0KCcgJylbMV0NCiAgICAgICAgICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICAgICAgICAgICAgICBsbiA9IGZuDQogICAgICAgICAgICAgICAgZm9yIHB3IGluIHBhc3NsaXN0Og0KICAgICAgICAgICAgICAgICAgICAgICAgcGFzID0gcHcucmVwbGFjZSgnZmlyc3QnLGZuLmxvd2VyKCkpLnJlcGxhY2UoJ0ZpcnN0JyxmbikucmVwbGFjZSgnbGFzdCcsbG4ubG93ZXIoKSkucmVwbGFjZSgnTGFzdCcsbG4pLnJlcGxhY2UoJ05hbWUnLG5hbWVzKS5yZXBsYWNlKCduYW1lJyxuYW1lcy5sb3dlcigpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzVG9rZW4gPSAnMzUwNjg1NTMxNzI4fDYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJw0KICAgICAgICAgICAgICAgICAgICAgICAgZmJhdiA9IGYne3JhbmRvbS5yYW5kaW50KDExMSw5OTkpfS4wLjAue3JhbmRvbS5yYW5kaW50KDExLDk5KX0ue3JhbmRvbS5yYW5kaW50KDExMSw5OTkpfScNCiAgICAgICAgICAgICAgICAgICAgICAgIGZiYnYgPSBzdHIocmFuZG9tLnJhbmRpbnQoMTExMTExMTExLDk5OTk5OTk5OSkpDQogICAgICAgICAgICAgICAgICAgICAgICBhbmRyb2lkX3ZlcnNpb24gPSBkZXZpY2VbJ2FuZHJvaWRfdmVyc2lvbiddDQogICAgICAgICAgICAgICAgICAgICAgICBtb2RlbCA9IGRldmljZVsnbW9kZWwnXQ0KICAgICAgICAgICAgICAgICAgICAgICAgYnVpbGQgPSBkZXZpY2VbJ2J1aWxkJ10NCiAgICAgICAgICAgICAgICAgICAgICAgIGZibGMgPSBkZXZpY2VbJ2ZibGMnXQ0KICAgICAgICAgICAgICAgICAgICAgICAgZmJjciA9IHNpbV9pZA0KICAgICAgICAgICAgICAgICAgICAgICAgZmJtZiA9IGRldmljZVsnZmJtZiddDQogICAgICAgICAgICAgICAgICAgICAgICBmYmJkID0gZGV2aWNlWydmYmJkJ10NCiAgICAgICAgICAgICAgICAgICAgICAgIGZiZHYgPSBkZXZpY2VbJ2ZiZHYnXQ0KICAgICAgICAgICAgICAgICAgICAgICAgZmJzdiA9IGRldmljZVsnZmJzdiddDQogICAgICAgICAgICAgICAgICAgICAgICBmYmNhID0gZGV2aWNlWydmYmNhJ10NCiAgICAgICAgICAgICAgICAgICAgICAgIGZiZG0gPSBkZXZpY2VbJ2ZiZG0nXQ0KICAgICAgICAgICAgICAgICAgICAgICAgZmJmdyA9ICcxJw0KICAgICAgICAgICAgICAgICAgICAgICAgZmJydiA9ICcwJw0KICAgICAgICAgICAgICAgICAgICAgICAgZmJhbiA9ICdGQjRBJw0KICAgICAgICAgICAgICAgICAgICAgICAgZmJwbiA9ICdjb20uZmFjZWJvb2sua2F0YW5hJw0KICAgICAgICAgICAgICAgICAgICAgICAgdWEgPSAnW0ZCQU4vO0ZCQVYvNFEwOTVNUUc7RkJCVi8xNzM3MDU5Nzg7RkJBTi9GQkFOO0ZCQVYvNFEwOTVNUUc7RkJCVi8xNzM3MDU5Nzg7RkJETS8vKntkZW5zaXR5PTIuNSx3aWR0aD0xNDQwLGhlaWdodD0xOTIwfTtGQkxDL2l0X0lUO0ZCUlYvNzcyMTg5NzMyO0ZCQ1IvTm9raWE7RkJNRi9WSVZPO0ZCQkQvWlRFO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL1NhbXN1bmdfR2FsYXh5X0EzMjtGQlNWLzEyO0ZCT1AvNDtGQkNBL2FybWVhYmk7RkJTUy8xMTtdJw0KICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tX3NlZWQgPSByYW5kb20uUmFuZG9tKCkNCiAgICAgICAgICAgICAgICAgICAgICAgIGFkaWQgPSBzdHIoJycuam9pbihyYW5kb21fc2VlZC5jaG9pY2VzKHN0cmluZy5oZXhkaWdpdHMsIGs9MTYpKSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGRldmljZV9pZCA9IHN0cih1dWlkLnV1aWQ0KCkpDQogICAgICAgICAgICAgICAgICAgICAgICBzZWN1cmUgPSBzdHIodXVpZC51dWlkNCgpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgZmFtaWx5ID0gc3RyKHV1aWQudXVpZDQoKSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc1Rva2VuID0gJzM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMicNCiAgICAgICAgICAgICAgICAgICAgICAgIHhkID1zdHIoJycuam9pbihyYW5kb21fc2VlZC5jaG9pY2VzKHN0cmluZy5kaWdpdHMsIGs9MjApKSkNCiAgICAgICAgICAgICAgICAgICAgICAgIHNpbV9zZXJpYWxzID0gZidbInt4ZH0iXScNCiAgICAgICAgICAgICAgICAgICAgICAgIGxpID0gWycyOCcsJzI5JywnMjEwJ10NCiAgICAgICAgICAgICAgICAgICAgICAgIGxpMiA9IHJhbmRvbS5jaG9pY2UobGkpDQogICAgICAgICAgICAgICAgICAgICAgICBqMSA9ICcnLmpvaW4ocmFuZG9tLmNob2ljZShzdHJpbmcuZGlnaXRzKSBmb3IgXyBpbiByYW5nZSgyKSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGphem9lc3QgPSBsaTIrajENCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgOiB7J2FkaWQnOiAnMTIxY2M5ZDYtYmJiNi00OWY0LThlNTktZjQ0YjI5M2IzYmQwJywgJ2Zvcm1hdCc6ICdqc29uJywgJ2RldmljZV9pZCc6ICcyY2U1ODExYi02MDNlLTQ5MzctODljNC0yMWFmMjljZTE0MjQnLCAnZmFtaWx5X2RldmljZV9pZCc6ICdiN2FmNzc3Zi1iNzBlLTQxMWYtYTBkYS1kNTZmY2JiOWE0N2EnLCAnc2VjdXJlX2ZhbWlseV9kZXZpY2VfaWQnOiAnNGEzNWE4ZmYtM2FhNi00ZDA1LWI3M2UtYjkxYzQzYjA3ZjQ0JywgJ2NwbCc6ICd0cnVlJywgJ3RyeV9udW0nOiAnMScsICdlbWFpbCc6ICcxMDAwMzAwMTYwNjYwNDQnLCAncGFzc3dvcmQnOiAnd2FoZWVkJywgJ21ldGhvZCc6ICdhdXRoLmxvZ2luJywgJ2dlbmVyYXRlX3Nlc3Npb25fY29va2llcyc6ICcxJywgJ3NpbV9zZXJpYWxzJzogIlsnODA5NzM0NTMzNDUyMTA3ODQ3OTgnXSIsICdvcGVuaWRfZmxvdyc6ICdhbmRyb2lkX2xvZ2luJywgJ29wZW5pZF9wcm92aWRlcic6ICdnb29nbGUnLCAnb3BlbmlkX2VtYWlscyc6ICJbJzAxNzEwOTQwMDE3J10iLCAnb3BlbmlkX3Rva2Vucyc6ICJbJ2V5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJamRqT1dNM09HVXpZakF3WlRGaVlqQTVNbVF5TkRaak9EZzNZakV4TWpJd1l6ZzNZamRrTWpBaUxDSjBlWEFpT2lKS1YxUWlmUS5leUpwYzNNaU9pQWlZV05qYjNWdWRITXVaMjl2WjJ4bExtTnZiU0lzSUNKaGVuQWlPaUFpTVRZNU1qSTVNemd5TXkweFpubzBjR1ZqT0dnNU4ySnNZbXhtZDJ0ME9EaDJORzh3ZVdKNVkycHNlV1l1WVhCd2N5NW5iMjluYkdWMWMyVnlZMjl1ZEdWdWRDNWpiMjBpTENBaVlYVmtJam9nSWpFMk9USXlPVE00TWpNdGJEaHFaREE1T0doNVkzZG1kMmxuWkRZME5XNXhNbWRtZVhWMFlURnVaMkZvTG1Gd2NITXVaMjl2WjJ4bGRYTmxjbU52Ym5SbGJuUXVZMjl0SWl3Z0luTjFZaUk2SUNJeE1Ea3hNems0TnpNek5ETXdOVGN3TURFNU56a2lMQ0FpWlcxaGFXd2lPaUFpTVRrME5VQm5iV0ZwYkM1amIyMGlMQ0FpWlcxaGFXeGZkbVZ5YVdacFpXUWlPaUIwY25WbExDQWljR2xqZEhWeVpTSTZJQ0pvZEhSd2N6b3ZMMnhvTXk1bmIyOW5iR1YxYzJWeVkyOXVkR1Z1ZEM1amIyMHZZUzB2UVVSZlkwMU5VbXRGWTNGRGNUbHdjRjlZTUhkSVlUbFNiM0pwUjJWMWEwdEphME5uTFUxNVRqRmlSMmd4YjNsblgxRTljemsyTFdNaUxDQWlhV0YwSWpvZ01UWTVNakk1TXpneU15d2dJbVY0Y0NJNklERTJPVEl5T1RNNE1qTjkub0h2YWtDeHBtVmRBellncTVqU1hONXVDRDZMMTBCajJFaGJsV0s0SUVGaGF0X2FjbjZqRFBLR2NZVkR4OHd4b2o1ckZSVmJEUDF4d3pmTjBlQ0ZHNlI5cFRzbHNRSFAtUHJUTnNxZVZuaFdEVjFpRXVwNzdpUmhQakpSQ2xOTWlqNVJ6cVFGcjdyU3R3UHRBb2xyUVdDX3FfdXVGckdlbFcyMVRnX2VuQTM2UFBTclNobmxvVG02enQ4M3hVWXpLUXZYbDU1YnJCczJ6YXRaMnZXd2Z0d01vT1dmcDZOYlVrZDhobGlack1HQThqX0E5UFRpal8xLTVCUVpTT1hTZmpjeGw3SnRad3F4NERKTjJka0kwZVQ2aFNBamM0WVVPTVFIRExSSkQ5dFk0Y2tZZnpKMzhtR2pzMm01d0FDdjJuMVFMb09McG9Wc3BmVDg2S3ktTjRnJ10iLCAnZXJyb3JfZGV0YWlsX3R5cGUnOiAnYnV0dG9uX3dpdGhfZGlzYWJsZWQnLCAnc291cmNlJzogJ2FjY291bnRfcmVjb3ZlcnknLCAnbG9jYWxlJzogJ2VuX0dCJywgJ2NsaWVudF9jb3VudHJ5X2NvZGUnOiAnR0InLCAnZmJfYXBpX3JlcV9mcmllbmRseV9uYW1lJzogJ2F1dGhlbnRpY2F0ZScsICdmYl9hcGlfY2FsbGVyX2NsYXNzJzogJ0F1dGhPcGVyYXRpb25zJFBhc3N3b3JkQXV0aE9wZXJhdGlvbid9DQogICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzID0gew0KICAgICdhdXRob3JpdHknOiAnbS5mYWNlYm9vay5jb20nLA0KICAgICdhY2NlcHQnOiAndGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43JywNCiAgICAnYWNjZXB0LWxhbmd1YWdlJzogJ2FyLUVHLGFyO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43JywNCiAgICAnY2FjaGUtY29udHJvbCc6ICdtYXgtYWdlPTAnLA0KICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywNCiAgICAjICdjb29raWUnOiAnZGF0cj1ySUJqWlFwRW1aN2lXbzF1N1cxN3VVVjE7IHNiPXJJQmpaVXZSSlRNcmNhQ3I0MkxsZTJhdDsgbV9waXhlbF9yYXRpbz0yLjgxMjU7IGZyPTBEUndvREkyRFRuNTdyQkhYLkFXV3dmaHlVT2c2NWFsOUtVZ01rRnNGNnBuby5CbFk0Q3MucHkuQUFBLjAuMC5CbFk0RE8uQVdXS3hYaUc4NFk7IGNfdXNlcj0xMDAwMDA1OTA0OTI0OTA7IHhzPTQwJTNBckw5NUQ1QTZDMmM5NHclM0EyJTNBMTcwMTAxOTg1NSUzQS0xJTNBMTA4NzsgbV9wYWdlX3ZvaWNlPTEwMDAwMDU5MDQ5MjQ5MDsgd2Q9Mzg0eDc1MCcsDQogICAgJ2Rwcic6ICcyLjgxMjUnLA0KICAgICdvcmlnaW4nOiAnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbScsDQogICAgJ3JlZmVyZXInOiAnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9sb2dpbi9zYXZlLWRldmljZS8/bG9naW5fc291cmNlPWxvZ2luJywNCiAgICAnc2VjLWNoLXByZWZlcnMtY29sb3Itc2NoZW1lJzogJ2RhcmsnLA0KICAgICdzZWMtY2gtdWEnOiAnIk5vdF9BIEJyYW5kIjt2PSI4IiwgIkNocm9taXVtIjt2PSIxMjAiJywNCiAgICAnc2VjLWNoLXVhLWZ1bGwtdmVyc2lvbi1saXN0JzogJyJOb3RfQSBCcmFuZCI7dj0iOC4wLjAuMCIsICJDaHJvbWl1bSI7dj0iMTIwLjAuNjA5OS4yMCInLA0KICAgICdzZWMtY2gtdWEtbW9iaWxlJzogJz8xJywNCiAgICAnc2VjLWNoLXVhLW1vZGVsJzogJyJNMjAwN0oyMENHIicsDQogICAgJ3NlYy1jaC11YS1wbGF0Zm9ybSc6ICciQW5kcm9pZCInLA0KICAgICdzZWMtY2gtdWEtcGxhdGZvcm0tdmVyc2lvbic6ICciMTIuMC4wIicsDQogICAgJ3NlYy1mZXRjaC1kZXN0JzogJ2RvY3VtZW50JywNCiAgICAnc2VjLWZldGNoLW1vZGUnOiAnbmF2aWdhdGUnLA0KICAgICdzZWMtZmV0Y2gtc2l0ZSc6ICdzYW1lLW9yaWdpbicsDQogICAgJ3NlYy1mZXRjaC11c2VyJzogJz8xJywNCiAgICAndXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyc6ICcxJywNCiAgICAndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IEspIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMjAuMC4wLjAgTW9iaWxlIFNhZmFyaS81MzcuMzYnLA0KICAgICd2aWV3cG9ydC13aWR0aCc6ICc5ODAnLA0KfQ0KICAgICAgICAgICAgICAgICAgICAgICAgdXJsID0gJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL2F1dGgvbG9naW4nDQogICAgICAgICAgICAgICAgICAgICAgICBwbyA9IHJlcXVlc3RzLnBvc3QodXJsLGRhdGE9ZGF0YSxoZWFkZXJzPWhlYWRlcnMpLmpzb24oKQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ3Nlc3Npb25fa2V5JyBpbiBwbzoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1xyXHJceDFiWzM4OzU7MjQ0bShceDFiWzM4OzU7NDZtTFVGRlktT0tceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtICcraWRzK2YnIOKUgVx4MWJbMzg7NTsyNDRt4p6kXHgxYlszODs1OzQ2bSAnK3BhcysnXDAzM1sxOzk3bScpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29raSA9ICI7Ii5qb2luKGlbIm5hbWUiXSsiPSIraVsidmFsdWUiXSBmb3IgaSBpbiBwb1sic2Vzc2lvbl9jb29raWVzIl0pDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZiJcclxyXHgxYlszODs1OzI0NG09KFx4MWJbMzg7NTs0Nm1ceDFiWzM4OzU7MjQ0bSk9e0F9ICIrY29raSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5leCgpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlbignL3NkY2FyZC9MVUZGWS1GSUxFLU0xLU9LLnR4dCcsICdhJykud3JpdGUoaWRzKycgfCAnK3BhcysnIHwtPiAnK2Nva2krIlxuIikNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBva3MuYXBwZW5kKGlkcykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gcG9bJ2Vycm9yJ11bJ21lc3NhZ2UnXToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAneScgaW4gcGNwOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidcclxyXHgxYlszODs1OzI0NG0oe1l9TFVGRlktQ1BceDFiWzM4OzU7MjQ0bSl7WX0gJytpZHMrJyB8ICcrcGFzKydcMDMzWzE7OTdtJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZW4oJy9zZGNhcmQvTFVGRlktQ1AudHh0JywnYScpLndyaXRlKGlkcysnfCcrcGFzKydcbicpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKGlkcykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlDQogICAgICAgICAgICAgICAgbG9vcCs9MQ0KICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQogICAgICAgICAgICAgICAgcGFzcw0KI19fX19fX19fX19fX19fX19fX3wgRklMRSBNRVRIT0QgTTIgfF9fX19fX19fX19fX19fX19fXyMNCmRlZiBhcGkyKGlkcyxuYW1lcyxwYXNzbGlzdCk6DQogICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICBnbG9iYWwgb2tzLGxvb3Asc2ltX2lkDQogICAgICAgICAgICAgICAgc3lzLnN0ZG91dC53cml0ZShmJ1xyXHJceDFiWzM4OzU7MjQ0bShceDFiWzM4OzU7NDZte2RhdGV9XHgxYlszODs1OzI0NG0pXHgxYlszODs1OzQ2bSAlcyBceDFiWzM4OzU7MjQ0bXxceDFiWzM4OzU7NDZtIE9LXHgxYlszODs1OzI0NG18XHgxYlszODs1OzQ2bUNQXHgxYlszODs1OzQ2bSAlc1x4MWJbMzg7NTsyNDRtfFx4MWJbMzg7NTs0Nm0lcyAnJShsb29wLGxlbihva3MpLGxlbihjcHMpKSk7c3lzLnN0ZG91dC5mbHVzaCgpDQogICAgICAgICAgICAgICAgZm4gPSBuYW1lcy5zcGxpdCgnICcpWzBdDQogICAgICAgICAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgICAgICAgICAgbG4gPSBuYW1lcy5zcGxpdCgnICcpWzFdDQogICAgICAgICAgICAgICAgZXhjZXB0Og0KICAgICAgICAgICAgICAgICAgICAgICAgbG4gPSBmbg0KICAgICAgICAgICAgICAgIGZvciBwdyBpbiBwYXNzbGlzdDoNCiAgICAgICAgICAgICAgICAgICAgICAgIHBhcyA9IHB3LnJlcGxhY2UoJ2ZpcnN0Jyxmbi5sb3dlcigpKS5yZXBsYWNlKCdGaXJzdCcsZm4pLnJlcGxhY2UoJ2xhc3QnLGxuLmxvd2VyKCkpLnJlcGxhY2UoJ0xhc3QnLGxuKS5yZXBsYWNlKCdOYW1lJyxuYW1lcykucmVwbGFjZSgnbmFtZScsbmFtZXMubG93ZXIoKSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc1Rva2VuID0gJzM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMicNCiAgICAgICAgICAgICAgICAgICAgICAgIGZiYXYgPSBmJ3tyYW5kb20ucmFuZGludCgxMTEsOTk5KX0uMC4wLntyYW5kb20ucmFuZGludCgxMSw5OSl9LntyYW5kb20ucmFuZGludCgxMTEsOTk5KX0nDQogICAgICAgICAgICAgICAgICAgICAgICBmYmJ2ID0gc3RyKHJhbmRvbS5yYW5kaW50KDExMTExMTExMSw5OTk5OTk5OTkpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgYW5kcm9pZF92ZXJzaW9uID0gZGV2aWNlWydhbmRyb2lkX3ZlcnNpb24nXQ0KICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwgPSBkZXZpY2VbJ21vZGVsJ10NCiAgICAgICAgICAgICAgICAgICAgICAgIGJ1aWxkID0gZGV2aWNlWydidWlsZCddDQogICAgICAgICAgICAgICAgICAgICAgICBmYmxjID0gZGV2aWNlWydmYmxjJ10NCiAgICAgICAgICAgICAgICAgICAgICAgIGZiY3IgPSBzaW1faWQNCiAgICAgICAgICAgICAgICAgICAgICAgIGZibWYgPSBkZXZpY2VbJ2ZibWYnXQ0KICAgICAgICAgICAgICAgICAgICAgICAgZmJiZCA9IGRldmljZVsnZmJiZCddDQogICAgICAgICAgICAgICAgICAgICAgICBmYmR2ID0gZGV2aWNlWydmYmR2J10NCiAgICAgICAgICAgICAgICAgICAgICAgIGZic3YgPSBkZXZpY2VbJ2Zic3YnXQ0KICAgICAgICAgICAgICAgICAgICAgICAgZmJjYSA9IGRldmljZVsnZmJjYSddDQogICAgICAgICAgICAgICAgICAgICAgICBmYmRtID0gZGV2aWNlWydmYmRtJ10NCiAgICAgICAgICAgICAgICAgICAgICAgIGZiZncgPSAnMScNCiAgICAgICAgICAgICAgICAgICAgICAgIGZicnYgPSAnMCcNCiAgICAgICAgICAgICAgICAgICAgICAgIGZiYW4gPSAnRkI0QScNCiAgICAgICAgICAgICAgICAgICAgICAgIGZicG4gPSAnY29tLmZhY2Vib29rLmthdGFuYScNCiAgICAgICAgICAgICAgICAgICAgICAgIHVhID0gJ1tGQjRBLztGQkFWL1laV1NFUzkzO0ZCQlYvMjkyNDAyNzE5O0ZCQU4vRkI0QTtGQkFWL1laV1NFUzkzO0ZCQlYvMjkyNDAyNzE5O0ZCRE0vLyp7ZGVuc2l0eT0yLjUsd2lkdGg9MTkyMCxoZWlnaHQ9MjU2MH07RkJMQy9pdF9JVDtGQlJWLzMyNjE1Mzk1NztGQkNSL05va2lhO0ZCTUYvTW90b3JvbGE7RkJCRC9PYmk7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvU00tTjk4MEJEUztGQlNWLzExO0ZCT1AvODtGQkNBL3g4Nl82NDtGQlNTLzEyO10nDQogICAgICAgICAgICAgICAgICAgICAgICByYW5kb21fc2VlZCA9IHJhbmRvbS5SYW5kb20oKQ0KICAgICAgICAgICAgICAgICAgICAgICAgYWRpZCA9IHN0cignJy5qb2luKHJhbmRvbV9zZWVkLmNob2ljZXMoc3RyaW5nLmhleGRpZ2l0cywgaz0xNikpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgZGV2aWNlX2lkID0gc3RyKHV1aWQudXVpZDQoKSkNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlY3VyZSA9IHN0cih1dWlkLnV1aWQ0KCkpDQogICAgICAgICAgICAgICAgICAgICAgICBmYW1pbHkgPSBzdHIodXVpZC51dWlkNCgpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzVG9rZW4gPSAnMzUwNjg1NTMxNzI4fDYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJw0KICAgICAgICAgICAgICAgICAgICAgICAgeGQgPXN0cignJy5qb2luKHJhbmRvbV9zZWVkLmNob2ljZXMoc3RyaW5nLmRpZ2l0cywgaz0yMCkpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgc2ltX3NlcmlhbHMgPSBmJ1sie3hkfSJdJw0KICAgICAgICAgICAgICAgICAgICAgICAgbGkgPSBbJzI4JywnMjknLCcyMTAnXQ0KICAgICAgICAgICAgICAgICAgICAgICAgbGkyID0gcmFuZG9tLmNob2ljZShsaSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGoxID0gJycuam9pbihyYW5kb20uY2hvaWNlKHN0cmluZy5kaWdpdHMpIGZvciBfIGluIHJhbmdlKDIpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgamF6b2VzdCA9IGxpMitqMQ0KICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSA6IHsnYWRpZCc6ICcxMjFjYzlkNi1iYmI2LTQ5ZjQtOGU1OS1mNDRiMjkzYjNiZDAnLCAnZm9ybWF0JzogJ2pzb24nLCAnZGV2aWNlX2lkJzogJzJjZTU4MTFiLTYwM2UtNDkzNy04OWM0LTIxYWYyOWNlMTQyNCcsICdmYW1pbHlfZGV2aWNlX2lkJzogJ2I3YWY3NzdmLWI3MGUtNDExZi1hMGRhLWQ1NmZjYmI5YTQ3YScsICdzZWN1cmVfZmFtaWx5X2RldmljZV9pZCc6ICc0YTM1YThmZi0zYWE2LTRkMDUtYjczZS1iOTFjNDNiMDdmNDQnLCAnY3BsJzogJ3RydWUnLCAndHJ5X251bSc6ICcxJywgJ2VtYWlsJzogJzEwMDAzMDAxNjA2NjA0NCcsICdwYXNzd29yZCc6ICd3YWhlZWQnLCAnbWV0aG9kJzogJ2F1dGgubG9naW4nLCAnZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzJzogJzEnLCAnc2ltX3NlcmlhbHMnOiAiWyc4MDk3MzQ1MzM0NTIxMDc4NDc5OCddIiwgJ29wZW5pZF9mbG93JzogJ2FuZHJvaWRfbG9naW4nLCAnb3BlbmlkX3Byb3ZpZGVyJzogJ2dvb2dsZScsICdvcGVuaWRfZW1haWxzJzogIlsnMDE3MTA5NDAwMTcnXSIsICdvcGVuaWRfdG9rZW5zJzogIlsnZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqZGpPV00zT0dVellqQXdaVEZpWWpBNU1tUXlORFpqT0RnM1lqRXhNakl3WXpnM1lqZGtNakFpTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lBaVlXTmpiM1Z1ZEhNdVoyOXZaMnhsTG1OdmJTSXNJQ0poZW5BaU9pQWlNVFk1TWpJNU16Z3lNeTB4Wm5vMGNHVmpPR2c1TjJKc1lteG1kMnQwT0RoMk5HOHdlV0o1WTJwc2VXWXVZWEJ3Y3k1bmIyOW5iR1YxYzJWeVkyOXVkR1Z1ZEM1amIyMGlMQ0FpWVhWa0lqb2dJakUyT1RJeU9UTTRNak10YkRocVpEQTVPR2g1WTNkbWQybG5aRFkwTlc1eE1tZG1lWFYwWVRGdVoyRm9MbUZ3Y0hNdVoyOXZaMnhsZFhObGNtTnZiblJsYm5RdVkyOXRJaXdnSW5OMVlpSTZJQ0l4TURreE16azROek16TkRNd05UY3dNREU1TnpraUxDQWlaVzFoYVd3aU9pQWlNVGswTlVCbmJXRnBiQzVqYjIwaUxDQWlaVzFoYVd4ZmRtVnlhV1pwWldRaU9pQjBjblZsTENBaWNHbGpkSFZ5WlNJNklDSm9kSFJ3Y3pvdkwyeG9NeTVuYjI5bmJHVjFjMlZ5WTI5dWRHVnVkQzVqYjIwdllTMHZRVVJmWTAxTlVtdEZZM0ZEY1Rsd2NGOVlNSGRJWVRsU2IzSnBSMlYxYTB0SmEwTm5MVTE1VGpGaVIyZ3hiM2xuWDFFOWN6azJMV01pTENBaWFXRjBJam9nTVRZNU1qSTVNemd5TXl3Z0ltVjRjQ0k2SURFMk9USXlPVE00TWpOOS5vSHZha0N4cG1WZEF6WWdxNWpTWE41dUNENkwxMEJqMkVoYmxXSzRJRUZoYXRfYWNuNmpEUEtHY1lWRHg4d3hvajVyRlJWYkRQMXh3emZOMGVDRkc2UjlwVHNsc1FIUC1QclROc3FlVm5oV0RWMWlFdXA3N2lSaFBqSlJDbE5NaWo1UnpxUUZyN3JTdHdQdEFvbHJRV0NfcV91dUZyR2VsVzIxVGdfZW5BMzZQUFNyU2hubG9UbTZ6dDgzeFVZektRdlhsNTVickJzMnphdFoydld3ZnR3TW9PV2ZwNk5iVWtkOGhsaVpyTUdBOGpfQTlQVGlqXzEtNUJRWlNPWFNmamN4bDdKdFp3cXg0REpOMmRrSTBlVDZoU0FqYzRZVU9NUUhETFJKRDl0WTRja1lmekozOG1HanMybTV3QUN2Mm4xUUxvT0xwb1ZzcGZUODZLeS1ONGcnXSIsICdlcnJvcl9kZXRhaWxfdHlwZSc6ICdidXR0b25fd2l0aF9kaXNhYmxlZCcsICdzb3VyY2UnOiAnYWNjb3VudF9yZWNvdmVyeScsICdsb2NhbGUnOiAnZW5fR0InLCAnY2xpZW50X2NvdW50cnlfY29kZSc6ICdHQicsICdmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWUnOiAnYXV0aGVudGljYXRlJywgJ2ZiX2FwaV9jYWxsZXJfY2xhc3MnOiAnQXV0aE9wZXJhdGlvbnMkUGFzc3dvcmRBdXRoT3BlcmF0aW9uJ30NCiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnMgPSB7DQogICAgJ2F1dGhvcml0eSc6ICdtLmZhY2Vib29rLmNvbScsDQogICAgJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcnLA0KICAgICdhY2NlcHQtbGFuZ3VhZ2UnOiAnYXItRUcsYXI7cT0wLjksZW4tVVM7cT0wLjgsZW47cT0wLjcnLA0KICAgICdjYWNoZS1jb250cm9sJzogJ21heC1hZ2U9MCcsDQogICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLA0KICAgICMgJ2Nvb2tpZSc6ICdkYXRyPXJJQmpaUXBFbVo3aVdvMXU3VzE3dVVWMTsgc2I9cklCalpVdlJKVE1yY2FDcjQyTGxlMmF0OyBtX3BpeGVsX3JhdGlvPTIuODEyNTsgZnI9MERSd29ESTJEVG41N3JCSFguQVdXd2ZoeVVPZzY1YWw5S1VnTWtGc0Y2cG5vLkJsWTRDcy5weS5BQUEuMC4wLkJsWTRETy5BV1dLeFhpRzg0WTsgY191c2VyPTEwMDAwMDU5MDQ5MjQ5MDsgeHM9NDAlM0FyTDk1RDVBNkMyYzk0dyUzQTIlM0ExNzAxMDE5ODU1JTNBLTElM0ExMDg3OyBtX3BhZ2Vfdm9pY2U9MTAwMDAwNTkwNDkyNDkwOyB3ZD0zODR4NzUwJywNCiAgICAnZHByJzogJzIuODEyNScsDQogICAgJ29yaWdpbic6ICdodHRwczovL20uZmFjZWJvb2suY29tJywNCiAgICAncmVmZXJlcic6ICdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luL3NhdmUtZGV2aWNlLz9sb2dpbl9zb3VyY2U9bG9naW4nLA0KICAgICdzZWMtY2gtcHJlZmVycy1jb2xvci1zY2hlbWUnOiAnZGFyaycsDQogICAgJ3NlYy1jaC11YSc6ICciTm90X0EgQnJhbmQiO3Y9IjgiLCAiQ2hyb21pdW0iO3Y9IjEyMCInLA0KICAgICdzZWMtY2gtdWEtZnVsbC12ZXJzaW9uLWxpc3QnOiAnIk5vdF9BIEJyYW5kIjt2PSI4LjAuMC4wIiwgIkNocm9taXVtIjt2PSIxMjAuMC42MDk5LjIwIicsDQogICAgJ3NlYy1jaC11YS1tb2JpbGUnOiAnPzEnLA0KICAgICdzZWMtY2gtdWEtbW9kZWwnOiAnIk0yMDA3SjIwQ0ciJywNCiAgICAnc2VjLWNoLXVhLXBsYXRmb3JtJzogJyJBbmRyb2lkIicsDQogICAgJ3NlYy1jaC11YS1wbGF0Zm9ybS12ZXJzaW9uJzogJyIxMi4wLjAiJywNCiAgICAnc2VjLWZldGNoLWRlc3QnOiAnZG9jdW1lbnQnLA0KICAgICdzZWMtZmV0Y2gtbW9kZSc6ICduYXZpZ2F0ZScsDQogICAgJ3NlYy1mZXRjaC1zaXRlJzogJ3NhbWUtb3JpZ2luJywNCiAgICAnc2VjLWZldGNoLXVzZXInOiAnPzEnLA0KICAgICd1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzJzogJzEnLA0KICAgICd1c2VyLWFnZW50JzogJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgSykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyMC4wLjAuMCBNb2JpbGUgU2FmYXJpLzUzNy4zNicsDQogICAgJ3ZpZXdwb3J0LXdpZHRoJzogJzk4MCcsDQp9DQogICAgICAgICAgICAgICAgICAgICAgICB1cmwgPSAnaHR0cHM6Ly9iLWdyYXBoLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbicNCiAgICAgICAgICAgICAgICAgICAgICAgIHBvID0gcmVxdWVzdHMucG9zdCh1cmwsZGF0YT1kYXRhLGhlYWRlcnM9aGVhZGVycykuanNvbigpDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAnc2Vzc2lvbl9rZXknIGluIHBvOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYnXHJcclx4MWJbMzg7NTsyNDRtKFx4MWJbMzg7NTs0Nm1MVUZGWS1PS1x4MWJbMzg7NTsyNDRtKVx4MWJbMzg7NTs0Nm0gJytpZHMrZicg4pSBXHgxYlszODs1OzI0NG1ceDFiWzM4OzU7NDZtICcrcGFzKydcMDMzWzE7OTdtJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2tpID0gIjsiLmpvaW4oaVsibmFtZSJdKyI9IitpWyJ2YWx1ZSJdIGZvciBpIGluIHBvWyJzZXNzaW9uX2Nvb2tpZXMiXSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChmIlxyXHJceDFiWzM4OzU7MjQ0bT0oXHgxYlszODs1OzQ2bVx4MWJbMzg7NTsyNDRtKT17QX0gIitjb2tpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmV4KCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVuKCcvc2RjYXJkL0xVRkZZLUZJTEUtTTItT0sudHh0JywgJ2EnKS53cml0ZShpZHMrJyB8ICcrcGFzKycgfC0+ICcrY29raSsiXG4iKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQoaWRzKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgICAgICAgICBlbGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBwb1snZXJyb3InXVsnbWVzc2FnZSddOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd5JyBpbiBwY3A6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1xyXHJceDFiWzM4OzU7MjQ0bSh7WX1MVUZGWS1DUFx4MWJbMzg7NTsyNDRtKXtZfSAnK2lkcysnIHwgJytwYXMrJ1wwMzNbMTs5N20nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlbignL3NkY2FyZC9MVUZGWS1DUC50eHQnLCdhJykud3JpdGUoaWRzKyd8JytwYXMrJ1xuJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQoaWRzKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUNCiAgICAgICAgICAgICAgICBsb29wKz0xDQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCiAgICAgICAgICAgICAgICBwYXNzDQojX19fX19fX19fX19fX19fX19ffCBSQU5ET00gTUVUSE9EIE0xIHxfX19fX19fX19fX19fX19fX18jDQpkZWYgcm5kbTEodWlkLHBhc3NsaXN0KToNCiAgICAgICAgZ2xvYmFsIGxvb3ANCiAgICAgICAgZ2xvYmFsIG9rcw0KICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKGYnXHJcclx4MWJbMzg7NTsyNDRtKFx4MWJbMzg7NTs0Nm17ZGF0ZX1ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtICVzIFx4MWJbMzg7NTsyNDRtfFx4MWJbMzg7NTs0Nm0gT0tceDFiWzM4OzU7MjQ0bXxceDFiWzM4OzU7NDZtQ1BceDFiWzM4OzU7NDZtICVzXHgxYlszODs1OzI0NG18XHgxYlszODs1OzQ2bSVzICclKGxvb3AsbGVuKG9rcyksbGVuKGNwcykpKTtzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgIGZvciBwYXMgaW4gcGFzc2xpc3Q6DQogICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NUb2tlbiA9ICczNTA2ODU1MzE3Mjh8NjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzInDQogICAgICAgICAgICAgICAgICAgICAgICBmYmF2ID0gZid7cmFuZG9tLnJhbmRpbnQoMTExLDk5OSl9LjAuMC57cmFuZG9tLnJhbmRpbnQoMTEsOTkpfS57cmFuZG9tLnJhbmRpbnQoMTExLDk5OSl9Jw0KICAgICAgICAgICAgICAgICAgICAgICAgZmJidiA9IHN0cihyYW5kb20ucmFuZGludCgxMTExMTExMTEsOTk5OTk5OTk5KSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGFuZHJvaWRfdmVyc2lvbiA9IGRldmljZVsnYW5kcm9pZF92ZXJzaW9uJ10NCiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsID0gZGV2aWNlWydtb2RlbCddDQogICAgICAgICAgICAgICAgICAgICAgICBidWlsZCA9IGRldmljZVsnYnVpbGQnXQ0KICAgICAgICAgICAgICAgICAgICAgICAgZmJsYyA9IGRldmljZVsnZmJsYyddDQogICAgICAgICAgICAgICAgICAgICAgICBmYmNyID0gc2ltX2lkDQogICAgICAgICAgICAgICAgICAgICAgICBmYm1mID0gZGV2aWNlWydmYm1mJ10NCiAgICAgICAgICAgICAgICAgICAgICAgIGZiYmQgPSBkZXZpY2VbJ2ZiYmQnXQ0KICAgICAgICAgICAgICAgICAgICAgICAgZmJkdiA9IGRldmljZVsnZmJkdiddDQogICAgICAgICAgICAgICAgICAgICAgICBmYnN2ID0gZGV2aWNlWydmYnN2J10NCiAgICAgICAgICAgICAgICAgICAgICAgIGZiY2EgPSBkZXZpY2VbJ2ZiY2EnXQ0KICAgICAgICAgICAgICAgICAgICAgICAgZmJkbSA9IGRldmljZVsnZmJkbSddDQogICAgICAgICAgICAgICAgICAgICAgICBmYmZ3ID0gJzEnDQogICAgICAgICAgICAgICAgICAgICAgICBmYnJ2ID0gJzAnDQogICAgICAgICAgICAgICAgICAgICAgICBmYmFuID0gJ0ZCNEEnDQogICAgICAgICAgICAgICAgICAgICAgICBmYnBuID0gJ2NvbS5mYWNlYm9vay5vcmNhJw0KICAgICAgICAgICAgICAgICAgICAgICAgdWEgPSAnRGFsdmlrLzIuMS4wIChMaW51eDsgVTsgQW5kcm9pZCAxMSBCdWlsZC81Mjg1OyBTYW1zdW5nIEdhbGF4eSBOb3RlIDIwKSBbRkJBTi8yMTcuNC44LjA7RkJCVi8xOTE2MDQ2MDQ7RkJSVi84O2NvbS5mYWNlYm9vay5tbGl0ZTtGQkxDL2VuX1VTO0ZCTUYvU2Ftc3VuZztGQkJEL1NhbXN1bmc7RkJEVi9HYWxheHkgTm90ZSAyMDtGQlNWLzEyO0ZCQ0EvYXJtZWFiaS12N2E6YXJtZWFiaTtGQkRNL3tkZW5zaXR5PTEuNCx3aWR0aD05MzMsaGVpZ2h0PTgwN307RkJfRlcvMjtdIjsiRGFsdmlrLzIuMS4wIChMaW51eDsgVTsgQW5kcm9pZCA5IEJ1aWxkLzc2NTc7IFhpYW9taSBSZWRtaSBOb3RlIDEwKSBbRkJBTi8yNjcuOS42LjA7RkJCVi80MTg3NTE4Mzc7RkJSVi8xO2NvbS5mYWNlYm9vay5vY3JhO0ZCTEMvZW5fVVM7RkJNRi9YaWFvbWk7RkJCRC9YaWFvbWk7RkJEVi9SZWRtaSBOb3RlIDEwO0ZCU1YvMTI7RkJDQS9hcm1lYWJpLXY3YTphcm1lYWJpO0ZCRE0ve2RlbnNpdHk9Mi4zLHdpZHRoPTQzNSxoZWlnaHQ9MTY2M307RkJfRlcvMjtdIjsiRGFsdmlrLzIuMS4wIChMaW51eDsgVTsgQW5kcm9pZCAxMiBCdWlsZC81MDQ4OyBURUNOTyBLRTUpIFtGQkFOLzYzMi4xLjguMDtGQkJWLzYxMDA0MzgwMDtGQlJWLzA7Y29tLmZhY2Vib29rLmthdGFuYTtGQkxDL2VuX1VTO0ZCTUYvVEVDTk87RkJCRC9URUNOTztGQkRWL0tFNTtGQlNWLzExO0ZCQ0EvYXJtZWFiaS12N2E6YXJtZWFiaTtGQkRNL3tkZW5zaXR5PTEuOSx3aWR0aD03NjksaGVpZ2h0PTE3NjF9O0ZCX0ZXLzE7XSI7IkRhbHZpay8yLjEuMCAoTGludXg7IFU7IEFuZHJvaWQgMTIgQnVpbGQvMzAwNTsgVEVDTk8gTW9kZWwyKSBbRkJBTi8xMTYuMi4yLjA7RkJCVi82NzgwODEwNzI7RkJSVi82O2NvbS5mYWNlYm9vay5rYXRhbmE7RkJMQy9lbl9VUztGQk1GL1RFQ05PO0ZCQkQvVEVDTk87RkJEVi9Nb2RlbDI7RkJTVi8xMTtGQkNBL2FybWVhYmktdjdhOmFybWVhYmk7RkJETS97ZGVuc2l0eT0xLjcsd2lkdGg9MTE2OSxoZWlnaHQ9MTg2OH07RkJfRlcvMztdJw0KICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tX3NlZWQgPSByYW5kb20uUmFuZG9tKCkNCiAgICAgICAgICAgICAgICAgICAgICAgIGFkaWQgPSBzdHIoJycuam9pbihyYW5kb21fc2VlZC5jaG9pY2VzKHN0cmluZy5oZXhkaWdpdHMsIGs9MTYpKSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGRldmljZV9pZCA9IHN0cih1dWlkLnV1aWQ0KCkpDQogICAgICAgICAgICAgICAgICAgICAgICBzZWN1cmUgPSBzdHIodXVpZC51dWlkNCgpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgZmFtaWx5ID0gc3RyKHV1aWQudXVpZDQoKSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc1Rva2VuID0gJzM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMicNCiAgICAgICAgICAgICAgICAgICAgICAgIHhkID1zdHIoJycuam9pbihyYW5kb21fc2VlZC5jaG9pY2VzKHN0cmluZy5kaWdpdHMsIGs9MjApKSkNCiAgICAgICAgICAgICAgICAgICAgICAgIHNpbV9zZXJpYWxzID0gZidbInt4ZH0iXScNCiAgICAgICAgICAgICAgICAgICAgICAgIGxpID0gWycyOCcsJzI5JywnMjEwJ10NCiAgICAgICAgICAgICAgICAgICAgICAgIGxpMiA9IHJhbmRvbS5jaG9pY2UobGkpDQogICAgICAgICAgICAgICAgICAgICAgICBqMSA9ICcnLmpvaW4ocmFuZG9tLmNob2ljZShzdHJpbmcuZGlnaXRzKSBmb3IgXyBpbiByYW5nZSgyKSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGphem9lc3QgPSBsaTIrajENCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgOiB7J2FkaWQnOiAnMTIxY2M5ZDYtYmJiNi00OWY0LThlNTktZjQ0YjI5M2IzYmQwJywgJ2Zvcm1hdCc6ICdqc29uJywgJ2RldmljZV9pZCc6ICcyY2U1ODExYi02MDNlLTQ5MzctODljNC0yMWFmMjljZTE0MjQnLCAnZmFtaWx5X2RldmljZV9pZCc6ICdiN2FmNzc3Zi1iNzBlLTQxMWYtYTBkYS1kNTZmY2JiOWE0N2EnLCAnc2VjdXJlX2ZhbWlseV9kZXZpY2VfaWQnOiAnNGEzNWE4ZmYtM2FhNi00ZDA1LWI3M2UtYjkxYzQzYjA3ZjQ0JywgJ2NwbCc6ICd0cnVlJywgJ3RyeV9udW0nOiAnMScsICdlbWFpbCc6ICcxMDAwMzAwMTYwNjYwNDQnLCAncGFzc3dvcmQnOiAnd2FoZWVkJywgJ21ldGhvZCc6ICdhdXRoLmxvZ2luJywgJ2dlbmVyYXRlX3Nlc3Npb25fY29va2llcyc6ICcxJywgJ3NpbV9zZXJpYWxzJzogIlsnODA5NzM0NTMzNDUyMTA3ODQ3OTgnXSIsICdvcGVuaWRfZmxvdyc6ICdhbmRyb2lkX2xvZ2luJywgJ29wZW5pZF9wcm92aWRlcic6ICdnb29nbGUnLCAnb3BlbmlkX2VtYWlscyc6ICJbJzAxNzEwOTQwMDE3J10iLCAnb3BlbmlkX3Rva2Vucyc6ICJbJ2V5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJamRqT1dNM09HVXpZakF3WlRGaVlqQTVNbVF5TkRaak9EZzNZakV4TWpJd1l6ZzNZamRrTWpBaUxDSjBlWEFpT2lKS1YxUWlmUS5leUpwYzNNaU9pQWlZV05qYjNWdWRITXVaMjl2WjJ4bExtTnZiU0lzSUNKaGVuQWlPaUFpTVRZNU1qSTVNemd5TXkweFpubzBjR1ZqT0dnNU4ySnNZbXhtZDJ0ME9EaDJORzh3ZVdKNVkycHNlV1l1WVhCd2N5NW5iMjluYkdWMWMyVnlZMjl1ZEdWdWRDNWpiMjBpTENBaVlYVmtJam9nSWpFMk9USXlPVE00TWpNdGJEaHFaREE1T0doNVkzZG1kMmxuWkRZME5XNXhNbWRtZVhWMFlURnVaMkZvTG1Gd2NITXVaMjl2WjJ4bGRYTmxjbU52Ym5SbGJuUXVZMjl0SWl3Z0luTjFZaUk2SUNJeE1Ea3hNems0TnpNek5ETXdOVGN3TURFNU56a2lMQ0FpWlcxaGFXd2lPaUFpTVRrME5VQm5iV0ZwYkM1amIyMGlMQ0FpWlcxaGFXeGZkbVZ5YVdacFpXUWlPaUIwY25WbExDQWljR2xqZEhWeVpTSTZJQ0pvZEhSd2N6b3ZMMnhvTXk1bmIyOW5iR1YxYzJWeVkyOXVkR1Z1ZEM1amIyMHZZUzB2UVVSZlkwMU5VbXRGWTNGRGNUbHdjRjlZTUhkSVlUbFNiM0pwUjJWMWEwdEphME5uTFUxNVRqRmlSMmd4YjNsblgxRTljemsyTFdNaUxDQWlhV0YwSWpvZ01UWTVNakk1TXpneU15d2dJbVY0Y0NJNklERTJPVEl5T1RNNE1qTjkub0h2YWtDeHBtVmRBellncTVqU1hONXVDRDZMMTBCajJFaGJsV0s0SUVGaGF0X2FjbjZqRFBLR2NZVkR4OHd4b2o1ckZSVmJEUDF4d3pmTjBlQ0ZHNlI5cFRzbHNRSFAtUHJUTnNxZVZuaFdEVjFpRXVwNzdpUmhQakpSQ2xOTWlqNVJ6cVFGcjdyU3R3UHRBb2xyUVdDX3FfdXVGckdlbFcyMVRnX2VuQTM2UFBTclNobmxvVG02enQ4M3hVWXpLUXZYbDU1YnJCczJ6YXRaMnZXd2Z0d01vT1dmcDZOYlVrZDhobGlack1HQThqX0E5UFRpal8xLTVCUVpTT1hTZmpjeGw3SnRad3F4NERKTjJka0kwZVQ2aFNBamM0WVVPTVFIRExSSkQ5dFk0Y2tZZnpKMzhtR2pzMm01d0FDdjJuMVFMb09McG9Wc3BmVDg2S3ktTjRnJ10iLCAnZXJyb3JfZGV0YWlsX3R5cGUnOiAnYnV0dG9uX3dpdGhfZGlzYWJsZWQnLCAnc291cmNlJzogJ2FjY291bnRfcmVjb3ZlcnknLCAnbG9jYWxlJzogJ2VuX0dCJywgJ2NsaWVudF9jb3VudHJ5X2NvZGUnOiAnR0InLCAnZmJfYXBpX3JlcV9mcmllbmRseV9uYW1lJzogJ2F1dGhlbnRpY2F0ZScsICdmYl9hcGlfY2FsbGVyX2NsYXNzJzogJ0F1dGhPcGVyYXRpb25zJFBhc3N3b3JkQXV0aE9wZXJhdGlvbid9DQogICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzID0gew0KICAgICdhdXRob3JpdHknOiAnbS5mYWNlYm9vay5jb20nLA0KICAgICdhY2NlcHQnOiAndGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43JywNCiAgICAnYWNjZXB0LWxhbmd1YWdlJzogJ2FyLUVHLGFyO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43JywNCiAgICAnY2FjaGUtY29udHJvbCc6ICdtYXgtYWdlPTAnLA0KICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywNCiAgICAjICdjb29raWUnOiAnZGF0cj1ySUJqWlFwRW1aN2lXbzF1N1cxN3VVVjE7IHNiPXJJQmpaVXZSSlRNcmNhQ3I0MkxsZTJhdDsgbV9waXhlbF9yYXRpbz0yLjgxMjU7IGZyPTBEUndvREkyRFRuNTdyQkhYLkFXV3dmaHlVT2c2NWFsOUtVZ01rRnNGNnBuby5CbFk0Q3MucHkuQUFBLjAuMC5CbFk0RE8uQVdXS3hYaUc4NFk7IGNfdXNlcj0xMDAwMDA1OTA0OTI0OTA7IHhzPTQwJTNBckw5NUQ1QTZDMmM5NHclM0EyJTNBMTcwMTAxOTg1NSUzQS0xJTNBMTA4NzsgbV9wYWdlX3ZvaWNlPTEwMDAwMDU5MDQ5MjQ5MDsgd2Q9Mzg0eDc1MCcsDQogICAgJ2Rwcic6ICcyLjgxMjUnLA0KICAgICdvcmlnaW4nOiAnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbScsDQogICAgJ3JlZmVyZXInOiAnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9sb2dpbi9zYXZlLWRldmljZS8/bG9naW5fc291cmNlPWxvZ2luJywNCiAgICAnc2VjLWNoLXByZWZlcnMtY29sb3Itc2NoZW1lJzogJ2RhcmsnLA0KICAgICdzZWMtY2gtdWEnOiAnIk5vdF9BIEJyYW5kIjt2PSI4IiwgIkNocm9taXVtIjt2PSIxMjAiJywNCiAgICAnc2VjLWNoLXVhLWZ1bGwtdmVyc2lvbi1saXN0JzogJyJOb3RfQSBCcmFuZCI7dj0iOC4wLjAuMCIsICJDaHJvbWl1bSI7dj0iMTIwLjAuNjA5OS4yMCInLA0KICAgICdzZWMtY2gtdWEtbW9iaWxlJzogJz8xJywNCiAgICAnc2VjLWNoLXVhLW1vZGVsJzogJyJNMjAwN0oyMENHIicsDQogICAgJ3NlYy1jaC11YS1wbGF0Zm9ybSc6ICciQW5kcm9pZCInLA0KICAgICdzZWMtY2gtdWEtcGxhdGZvcm0tdmVyc2lvbic6ICciMTIuMC4wIicsDQogICAgJ3NlYy1mZXRjaC1kZXN0JzogJ2RvY3VtZW50JywNCiAgICAnc2VjLWZldGNoLW1vZGUnOiAnbmF2aWdhdGUnLA0KICAgICdzZWMtZmV0Y2gtc2l0ZSc6ICdzYW1lLW9yaWdpbicsDQogICAgJ3NlYy1mZXRjaC11c2VyJzogJz8xJywNCiAgICAndXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyc6ICcxJywNCiAgICAndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IEspIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMjAuMC4wLjAgTW9iaWxlIFNhZmFyaS81MzcuMzYnLA0KICAgICd2aWV3cG9ydC13aWR0aCc6ICc5ODAnLA0KfQ0KICAgICAgICAgICAgICAgICAgICAgICAgdXJsID0gJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL2F1dGgvbG9naW4nDQogICAgICAgICAgICAgICAgICAgICAgICBwbyA9IHJlcXVlc3RzLnBvc3QodXJsLGRhdGE9ZGF0YSxoZWFkZXJzPWhlYWRlcnMpLmpzb24oKQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ3Nlc3Npb25fa2V5JyBpbiBwbzoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1xyXHJceDFiWzM4OzU7MjQ0bShceDFiWzM4OzU7NDZtTFVGRlktT0tceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtICcrdWlkK2YnIOKUgVx4MWJbMzg7NTsyNDRt4p6kXHgxYlszODs1OzQ2bSAnK3BhcysnXDAzM1sxOzk3bScpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29raSA9ICI7Ii5qb2luKGlbIm5hbWUiXSsiPSIraVsidmFsdWUiXSBmb3IgaSBpbiBwb1sic2Vzc2lvbl9jb29raWVzIl0pDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZiJcclxyXHgxYlszODs1OzI0NG0oXHgxYlszODs1OzQ2bUNPT0tJRVx4MWJbMzg7NTsyNDRtKT57QX0gIitjb2tpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZW4oJy9zZGNhcmQvTFVGRlktTTEtT0sudHh0JywgJ2EnKS53cml0ZSh1aWQrJyB8ICcrcGFzKycgfC0+ICcrY29raSsiXG4iKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQodWlkKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgICAgICAgICBlbGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBwb1snZXJyb3InXVsnbWVzc2FnZSddOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd5JyBpbiBwY3A6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1xyXHJceDFiWzM4OzU7MjQ0bSh7WX1MVUZGWS1DUFx4MWJbMzg7NTsyNDRtKXtZfSAnK3VpZCsnIHwgJytwYXMrJ1wwMzNbMTs5N20nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlbignL3NkY2FyZC9MVUZGWS1DUC50eHQnLCdhJykud3JpdGUodWlkKyd8JytwYXMrJ1xuJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQodWlkKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUNCiAgICAgICAgICAgICAgICBsb29wKz0xDQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCiAgICAgICAgICAgICAgICBwYXNzDQojX19fX19fX19fX19fX19fX19ffCBSQU5ET00gTUVUSE9EIE0yIHxfX19fX19fX19fX19fX19fX18jDQpkZWYgcm5kbTIodWlkLHBhc3NsaXN0KToNCiAgICAgICAgZ2xvYmFsIGxvb3ANCiAgICAgICAgZ2xvYmFsIG9rcw0KICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKGYnXHJcclx4MWJbMzg7NTsyNDRtKFx4MWJbMzg7NTs0Nm17ZGF0ZX1ceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtICVzIFx4MWJbMzg7NTsyNDRtfFx4MWJbMzg7NTs0Nm0gT0tceDFiWzM4OzU7MjQ0bXxceDFiWzM4OzU7NDZtQ1BceDFiWzM4OzU7NDZtICVzXHgxYlszODs1OzI0NG18XHgxYlszODs1OzQ2bSVzICclKGxvb3AsbGVuKG9rcyksbGVuKGNwcykpKTtzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgIGZvciBwYXMgaW4gcGFzc2xpc3Q6DQogICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NUb2tlbiA9ICczNTA2ODU1MzE3Mjh8NjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzInDQogICAgICAgICAgICAgICAgICAgICAgICBmYmF2ID0gZid7cmFuZG9tLnJhbmRpbnQoMTExLDk5OSl9LjAuMC57cmFuZG9tLnJhbmRpbnQoMTEsOTkpfS57cmFuZG9tLnJhbmRpbnQoMTExLDk5OSl9Jw0KICAgICAgICAgICAgICAgICAgICAgICAgZmJidiA9IHN0cihyYW5kb20ucmFuZGludCgxMTExMTExMTEsOTk5OTk5OTk5KSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGFuZHJvaWRfdmVyc2lvbiA9IGRldmljZVsnYW5kcm9pZF92ZXJzaW9uJ10NCiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsID0gZGV2aWNlWydtb2RlbCddDQogICAgICAgICAgICAgICAgICAgICAgICBidWlsZCA9IGRldmljZVsnYnVpbGQnXQ0KICAgICAgICAgICAgICAgICAgICAgICAgZmJsYyA9IGRldmljZVsnZmJsYyddDQogICAgICAgICAgICAgICAgICAgICAgICBmYmNyID0gc2ltX2lkDQogICAgICAgICAgICAgICAgICAgICAgICBmYm1mID0gZGV2aWNlWydmYm1mJ10NCiAgICAgICAgICAgICAgICAgICAgICAgIGZiYmQgPSBkZXZpY2VbJ2ZiYmQnXQ0KICAgICAgICAgICAgICAgICAgICAgICAgZmJkdiA9IGRldmljZVsnZmJkdiddDQogICAgICAgICAgICAgICAgICAgICAgICBmYnN2ID0gZGV2aWNlWydmYnN2J10NCiAgICAgICAgICAgICAgICAgICAgICAgIGZiY2EgPSBkZXZpY2VbJ2ZiY2EnXQ0KICAgICAgICAgICAgICAgICAgICAgICAgZmJkbSA9IGRldmljZVsnZmJkbSddDQogICAgICAgICAgICAgICAgICAgICAgICBmYmZ3ID0gJzEnDQogICAgICAgICAgICAgICAgICAgICAgICBmYnJ2ID0gJzAnDQogICAgICAgICAgICAgICAgICAgICAgICBmYmFuID0gJ0ZCNEEnDQogICAgICAgICAgICAgICAgICAgICAgICBmYnBuID0gJ2NvbS5mYWNlYm9vay5rYXRhbmEnDQogICAgICAgICAgICAgICAgICAgICAgICB1YSA9ICdEYWx2aWsvMi4xLjAgKExpbnV4OyBVOyBBbmRyb2lkIDExIEJ1aWxkLzUyODU7IFNhbXN1bmcgR2FsYXh5IE5vdGUgMjApIFtGQkFOLzIxNy40LjguMDtGQkJWLzE5MTYwNDYwNDtGQlJWLzg7Y29tLmZhY2Vib29rLm1saXRlO0ZCTEMvZW5fVVM7RkJNRi9TYW1zdW5nO0ZCQkQvU2Ftc3VuZztGQkRWL0dhbGF4eSBOb3RlIDIwO0ZCU1YvMTI7RkJDQS9hcm1lYWJpLXY3YTphcm1lYWJpO0ZCRE0ve2RlbnNpdHk9MS40LHdpZHRoPTkzMyxoZWlnaHQ9ODA3fTtGQl9GVy8yO10iOyJEYWx2aWsvMi4xLjAgKExpbnV4OyBVOyBBbmRyb2lkIDkgQnVpbGQvNzY1NzsgWGlhb21pIFJlZG1pIE5vdGUgMTApIFtGQkFOLzI2Ny45LjYuMDtGQkJWLzQxODc1MTgzNztGQlJWLzE7Y29tLmZhY2Vib29rLm9jcmE7RkJMQy9lbl9VUztGQk1GL1hpYW9taTtGQkJEL1hpYW9taTtGQkRWL1JlZG1pIE5vdGUgMTA7RkJTVi8xMjtGQkNBL2FybWVhYmktdjdhOmFybWVhYmk7RkJETS97ZGVuc2l0eT0yLjMsd2lkdGg9NDM1LGhlaWdodD0xNjYzfTtGQl9GVy8yO10iOyJEYWx2aWsvMi4xLjAgKExpbnV4OyBVOyBBbmRyb2lkIDEyIEJ1aWxkLzUwNDg7IFRFQ05PIEtFNSkgW0ZCQU4vNjMyLjEuOC4wO0ZCQlYvNjEwMDQzODAwO0ZCUlYvMDtjb20uZmFjZWJvb2sua2F0YW5hO0ZCTEMvZW5fVVM7RkJNRi9URUNOTztGQkJEL1RFQ05PO0ZCRFYvS0U1O0ZCU1YvMTE7RkJDQS9hcm1lYWJpLXY3YTphcm1lYWJpO0ZCRE0ve2RlbnNpdHk9MS45LHdpZHRoPTc2OSxoZWlnaHQ9MTc2MX07RkJfRlcvMTtdIjsiRGFsdmlrLzIuMS4wIChMaW51eDsgVTsgQW5kcm9pZCAxMiBCdWlsZC8zMDA1OyBURUNOTyBNb2RlbDIpIFtGQkFOLzExNi4yLjIuMDtGQkJWLzY3ODA4MTA3MjtGQlJWLzY7Y29tLmZhY2Vib29rLmthdGFuYTtGQkxDL2VuX1VTO0ZCTUYvVEVDTk87RkJCRC9URUNOTztGQkRWL01vZGVsMjtGQlNWLzExO0ZCQ0EvYXJtZWFiaS12N2E6YXJtZWFiaTtGQkRNL3tkZW5zaXR5PTEuNyx3aWR0aD0xMTY5LGhlaWdodD0xODY4fTtGQl9GVy8zO10nDQogICAgICAgICAgICAgICAgICAgICAgICByYW5kb21fc2VlZCA9IHJhbmRvbS5SYW5kb20oKQ0KICAgICAgICAgICAgICAgICAgICAgICAgYWRpZCA9IHN0cignJy5qb2luKHJhbmRvbV9zZWVkLmNob2ljZXMoc3RyaW5nLmhleGRpZ2l0cywgaz0xNikpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgZGV2aWNlX2lkID0gc3RyKHV1aWQudXVpZDQoKSkNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlY3VyZSA9IHN0cih1dWlkLnV1aWQ0KCkpDQogICAgICAgICAgICAgICAgICAgICAgICBmYW1pbHkgPSBzdHIodXVpZC51dWlkNCgpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzVG9rZW4gPSAnMzUwNjg1NTMxNzI4fDYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJw0KICAgICAgICAgICAgICAgICAgICAgICAgeGQgPXN0cignJy5qb2luKHJhbmRvbV9zZWVkLmNob2ljZXMoc3RyaW5nLmRpZ2l0cywgaz0yMCkpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgc2ltX3NlcmlhbHMgPSBmJ1sie3hkfSJdJw0KICAgICAgICAgICAgICAgICAgICAgICAgbGkgPSBbJzI4JywnMjknLCcyMTAnXQ0KICAgICAgICAgICAgICAgICAgICAgICAgbGkyID0gcmFuZG9tLmNob2ljZShsaSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGoxID0gJycuam9pbihyYW5kb20uY2hvaWNlKHN0cmluZy5kaWdpdHMpIGZvciBfIGluIHJhbmdlKDIpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgamF6b2VzdCA9IGxpMitqMQ0KICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSA6IHsnYWRpZCc6ICcxMjFjYzlkNi1iYmI2LTQ5ZjQtOGU1OS1mNDRiMjkzYjNiZDAnLCAnZm9ybWF0JzogJ2pzb24nLCAnZGV2aWNlX2lkJzogJzJjZTU4MTFiLTYwM2UtNDkzNy04OWM0LTIxYWYyOWNlMTQyNCcsICdmYW1pbHlfZGV2aWNlX2lkJzogJ2I3YWY3NzdmLWI3MGUtNDExZi1hMGRhLWQ1NmZjYmI5YTQ3YScsICdzZWN1cmVfZmFtaWx5X2RldmljZV9pZCc6ICc0YTM1YThmZi0zYWE2LTRkMDUtYjczZS1iOTFjNDNiMDdmNDQnLCAnY3BsJzogJ3RydWUnLCAndHJ5X251bSc6ICcxJywgJ2VtYWlsJzogJzEwMDAzMDAxNjA2NjA0NCcsICdwYXNzd29yZCc6ICd3YWhlZWQnLCAnbWV0aG9kJzogJ2F1dGgubG9naW4nLCAnZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzJzogJzEnLCAnc2ltX3NlcmlhbHMnOiAiWyc4MDk3MzQ1MzM0NTIxMDc4NDc5OCddIiwgJ29wZW5pZF9mbG93JzogJ2FuZHJvaWRfbG9naW4nLCAnb3BlbmlkX3Byb3ZpZGVyJzogJ2dvb2dsZScsICdvcGVuaWRfZW1haWxzJzogIlsnMDE3MTA5NDAwMTcnXSIsICdvcGVuaWRfdG9rZW5zJzogIlsnZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqZGpPV00zT0dVellqQXdaVEZpWWpBNU1tUXlORFpqT0RnM1lqRXhNakl3WXpnM1lqZGtNakFpTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lBaVlXTmpiM1Z1ZEhNdVoyOXZaMnhsTG1OdmJTSXNJQ0poZW5BaU9pQWlNVFk1TWpJNU16Z3lNeTB4Wm5vMGNHVmpPR2c1TjJKc1lteG1kMnQwT0RoMk5HOHdlV0o1WTJwc2VXWXVZWEJ3Y3k1bmIyOW5iR1YxYzJWeVkyOXVkR1Z1ZEM1amIyMGlMQ0FpWVhWa0lqb2dJakUyT1RJeU9UTTRNak10YkRocVpEQTVPR2g1WTNkbWQybG5aRFkwTlc1eE1tZG1lWFYwWVRGdVoyRm9MbUZ3Y0hNdVoyOXZaMnhsZFhObGNtTnZiblJsYm5RdVkyOXRJaXdnSW5OMVlpSTZJQ0l4TURreE16azROek16TkRNd05UY3dNREU1TnpraUxDQWlaVzFoYVd3aU9pQWlNVGswTlVCbmJXRnBiQzVqYjIwaUxDQWlaVzFoYVd4ZmRtVnlhV1pwWldRaU9pQjBjblZsTENBaWNHbGpkSFZ5WlNJNklDSm9kSFJ3Y3pvdkwyeG9NeTVuYjI5bmJHVjFjMlZ5WTI5dWRHVnVkQzVqYjIwdllTMHZRVVJmWTAxTlVtdEZZM0ZEY1Rsd2NGOVlNSGRJWVRsU2IzSnBSMlYxYTB0SmEwTm5MVTE1VGpGaVIyZ3hiM2xuWDFFOWN6azJMV01pTENBaWFXRjBJam9nTVRZNU1qSTVNemd5TXl3Z0ltVjRjQ0k2SURFMk9USXlPVE00TWpOOS5vSHZha0N4cG1WZEF6WWdxNWpTWE41dUNENkwxMEJqMkVoYmxXSzRJRUZoYXRfYWNuNmpEUEtHY1lWRHg4d3hvajVyRlJWYkRQMXh3emZOMGVDRkc2UjlwVHNsc1FIUC1QclROc3FlVm5oV0RWMWlFdXA3N2lSaFBqSlJDbE5NaWo1UnpxUUZyN3JTdHdQdEFvbHJRV0NfcV91dUZyR2VsVzIxVGdfZW5BMzZQUFNyU2hubG9UbTZ6dDgzeFVZektRdlhsNTVickJzMnphdFoydld3ZnR3TW9PV2ZwNk5iVWtkOGhsaVpyTUdBOGpfQTlQVGlqXzEtNUJRWlNPWFNmamN4bDdKdFp3cXg0REpOMmRrSTBlVDZoU0FqYzRZVU9NUUhETFJKRDl0WTRja1lmekozOG1HanMybTV3QUN2Mm4xUUxvT0xwb1ZzcGZUODZLeS1ONGcnXSIsICdlcnJvcl9kZXRhaWxfdHlwZSc6ICdidXR0b25fd2l0aF9kaXNhYmxlZCcsICdzb3VyY2UnOiAnYWNjb3VudF9yZWNvdmVyeScsICdsb2NhbGUnOiAnZW5fR0InLCAnY2xpZW50X2NvdW50cnlfY29kZSc6ICdHQicsICdmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWUnOiAnYXV0aGVudGljYXRlJywgJ2ZiX2FwaV9jYWxsZXJfY2xhc3MnOiAnQXV0aE9wZXJhdGlvbnMkUGFzc3dvcmRBdXRoT3BlcmF0aW9uJ30NCiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnMgPSB7DQogICAgJ2F1dGhvcml0eSc6ICdtLmZhY2Vib29rLmNvbScsDQogICAgJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcnLA0KICAgICdhY2NlcHQtbGFuZ3VhZ2UnOiAnYXItRUcsYXI7cT0wLjksZW4tVVM7cT0wLjgsZW47cT0wLjcnLA0KICAgICdjYWNoZS1jb250cm9sJzogJ21heC1hZ2U9MCcsDQogICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLA0KICAgICMgJ2Nvb2tpZSc6ICdkYXRyPXJJQmpaUXBFbVo3aVdvMXU3VzE3dVVWMTsgc2I9cklCalpVdlJKVE1yY2FDcjQyTGxlMmF0OyBtX3BpeGVsX3JhdGlvPTIuODEyNTsgZnI9MERSd29ESTJEVG41N3JCSFguQVdXd2ZoeVVPZzY1YWw5S1VnTWtGc0Y2cG5vLkJsWTRDcy5weS5BQUEuMC4wLkJsWTRETy5BV1dLeFhpRzg0WTsgY191c2VyPTEwMDAwMDU5MDQ5MjQ5MDsgeHM9NDAlM0FyTDk1RDVBNkMyYzk0dyUzQTIlM0ExNzAxMDE5ODU1JTNBLTElM0ExMDg3OyBtX3BhZ2Vfdm9pY2U9MTAwMDAwNTkwNDkyNDkwOyB3ZD0zODR4NzUwJywNCiAgICAnZHByJzogJzIuODEyNScsDQogICAgJ29yaWdpbic6ICdodHRwczovL20uZmFjZWJvb2suY29tJywNCiAgICAncmVmZXJlcic6ICdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luL3NhdmUtZGV2aWNlLz9sb2dpbl9zb3VyY2U9bG9naW4nLA0KICAgICdzZWMtY2gtcHJlZmVycy1jb2xvci1zY2hlbWUnOiAnZGFyaycsDQogICAgJ3NlYy1jaC11YSc6ICciTm90X0EgQnJhbmQiO3Y9IjgiLCAiQ2hyb21pdW0iO3Y9IjEyMCInLA0KICAgICdzZWMtY2gtdWEtZnVsbC12ZXJzaW9uLWxpc3QnOiAnIk5vdF9BIEJyYW5kIjt2PSI4LjAuMC4wIiwgIkNocm9taXVtIjt2PSIxMjAuMC42MDk5LjIwIicsDQogICAgJ3NlYy1jaC11YS1tb2JpbGUnOiAnPzEnLA0KICAgICdzZWMtY2gtdWEtbW9kZWwnOiAnIk0yMDA3SjIwQ0ciJywNCiAgICAnc2VjLWNoLXVhLXBsYXRmb3JtJzogJyJBbmRyb2lkIicsDQogICAgJ3NlYy1jaC11YS1wbGF0Zm9ybS12ZXJzaW9uJzogJyIxMi4wLjAiJywNCiAgICAnc2VjLWZldGNoLWRlc3QnOiAnZG9jdW1lbnQnLA0KICAgICdzZWMtZmV0Y2gtbW9kZSc6ICduYXZpZ2F0ZScsDQogICAgJ3NlYy1mZXRjaC1zaXRlJzogJ3NhbWUtb3JpZ2luJywNCiAgICAnc2VjLWZldGNoLXVzZXInOiAnPzEnLA0KICAgICd1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzJzogJzEnLA0KICAgICd1c2VyLWFnZW50JzogJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgSykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyMC4wLjAuMCBNb2JpbGUgU2FmYXJpLzUzNy4zNicsDQogICAgJ3ZpZXdwb3J0LXdpZHRoJzogJzk4MCcsDQp9DQogICAgICAgICAgICAgICAgICAgICAgICB1cmwgPSAnaHR0cHM6Ly9iLWdyYXBoLmZhY2Vib29rLmNvbS9hdXRoL2xvZ2luJw0KICAgICAgICAgICAgICAgICAgICAgICAgcG8gPSByZXF1ZXN0cy5wb3N0KHVybCxkYXRhPWRhdGEsaGVhZGVycz1oZWFkZXJzKS5qc29uKCkNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICdzZXNzaW9uX2tleScgaW4gcG86DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZidcclxyXHgxYlszODs1OzI0NG0oXHgxYlszODs1OzQ2bUxVRkZZ4oCiR00tT0tceDFiWzM4OzU7MjQ0bSlceDFiWzM4OzU7NDZtICcrdWlkK2YnIOKUgVx4MWJbMzg7NTsyNDRt4p6kXHgxYlszODs1OzQ2bSAnK3BhcysnXDAzM1sxOzk3bScpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29raSA9ICI7Ii5qb2luKGlbIm5hbWUiXSsiPSIraVsidmFsdWUiXSBmb3IgaSBpbiBwb1sic2Vzc2lvbl9jb29raWVzIl0pDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZiJcclxyXHgxYlszODs1OzI0NG0oXHgxYlszODs1OzQ2bUNPT0tJRVx4MWJbMzg7NTsyNDRtKT57QX0gIitjb2tpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZW4oJy9zZGNhcmQvTFVGRlnigKJSQU5ET00tTTEtT0sudHh0JywgJ2EnKS53cml0ZSh1aWQrJyB8ICcrcGFzKycgfC0+ICcrY29raSsiXG4iKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQodWlkKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgICAgICAgICBlbGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBwb1snZXJyb3InXVsnbWVzc2FnZSddOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd5JyBpbiBwY3A6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChmJ1xyXHJceDFiWzM4OzU7MjQ0bSh7WX1MVUZGWS1DUFx4MWJbMzg7NTsyNDRtKXtZfSAnK3VpZCsnIHwgJytwYXMrJ1wwMzNbMTs5N20nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlbignL3NkY2FyZC9MVUZGWS1DUC50eHQnLCdhJykud3JpdGUodWlkKyd8JytwYXMrJ1xuJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQodWlkKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUNCiAgICAgICAgICAgICAgICBsb29wKz0xDQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCiAgICAgICAgICAgICAgICBwYXNzDQojX19fX19fX19fX19fX19fX19ffCBFTkQgfF9fX19fX19fX19fX19fX19fXyMNCnRyeTogDQogICAgbWVudSgpDQpleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6DQogICAgICAgIHByaW50KCdcbiBObyBpbnRlcm5ldCBjb25uZWN0aW9uIC4uLicpDQogICAgICAgIGV4aXQoKQ0KZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KICAgIHByaW50KGUp"))