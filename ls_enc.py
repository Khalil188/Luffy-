# Compiled By Mr Mafia | Muhammad Muzammil
# Github  :  https://github.com/Muzammil-404

import base64
exec(base64.b64decode("I19fX19fX19fX19fX19fX19fX1sgSU1QT1JUIF1fX19fX19fX19fX19fX19fX18jDQppbXBvcnQgb3MsemxpYg0KZnJvbSBvcyBpbXBvcnQgc3lzdGVtIGFzIG9zUlVCDQpmcm9tIG9zIGltcG9ydCBzeXN0ZW0gYXMgY21kDQpvcy5zeXN0ZW0oJ2NsZWFyJykNCnByaW50KGYnXHgxYlszODs1OzQ2bVtceDFiWzE7OTdtPVx4MWJbMzg7NTs0Nm1dIExPQURJTkcgTU9EVUxFUyAnKQ0KdHJ5Og0KICAgIGltcG9ydCByZXF1ZXN0cyANCmV4Y2VwdCBJbXBvcnRFcnJvcjoNCiAgICBwcmludChmJ1x4MWJbMzg7NTs0Nm1bXHgxYlsxOzk3bT1ceDFiWzM4OzU7NDZtXSBJTlNUQUxMSU5HIFJFUVVFU1RTICcpDQogICAgb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCByZXF1ZXN0cycpDQp0cnk6DQogICAgaW1wb3J0IGNvbmN1cnJlbnQuZnV0dXJlcw0KZXhjZXB0IEltcG9ydEVycm9yOg0KICAgIHByaW50KGYnXHgxYlszODs1OzQ2bVtceDFiWzE7OTdtPVx4MWJbMzg7NTs0Nm1dIElOU1RBTExJTkcgRlVUVVJFUyAnKQ0KICAgIG9zLnN5c3RlbSgncGlwIGluc3RhbGwgZnV0dXJlcycpDQp0cnk6DQogICAgaW1wb3J0IG1lY2hhbml6ZQ0KZXhjZXB0IE1vZHVsZU5vdEZvdW5kRXJyb3I6DQogICAgb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCBtZWNoYW5pemUgPiAvZGV2L251bGwnKQ0KZnJvbSB1cmxsaWIucmVxdWVzdCBpbXBvcnQgUmVxdWVzdCwgdXJsb3Blbg0KaW1wb3J0IG9zLCByZXF1ZXN0cywgcmUscGxhdGZvcm0sIHN5cywgcmFuZG9tLCBzdWJwcm9jZXNzLCB0aHJlYWRpbmcsIGl0ZXJ0b29scyxiYXNlNjQsdXVpZCx6bGliLHJlLGpzb24sdXVpZCxzdWJwcm9jZXNzLHNodXRpbCx3ZWJicm93c2VyLHRpbWUsanNvbixzeXMscmFuZG9tLGRhdGV0aW1lLHRpbWUscmUsc3VicHJvY2VzcyxwbGF0Zm9ybSxzdHJpbmcsanNvbix0aW1lLHJlLHJhbmRvbSxzeXMsc3RyaW5nLHV1aWQNCmZyb20gY29uY3VycmVudC5mdXR1cmVzIGltcG9ydCBUaHJlYWRQb29sRXhlY3V0b3IgYXMgSGFiaWINCmZyb20gc3RyaW5nIGltcG9ydCAqIA0KZnJvbSByYW5kb20gaW1wb3J0IHJhbmRpbnQNCmZyb20gdGltZSBpbXBvcnQgc2xlZXAgYXMgc2xwDQpmcm9tIG9zIGltcG9ydCBzeXN0ZW0gYXMgY21kDQpmcm9tIHpsaWIgaW1wb3J0IGRlY29tcHJlc3MgDQppbXBvcnQgb3MsIHBsYXRmb3JtDQpmcm9tIGNvbmN1cnJlbnQuZnV0dXJlcyBpbXBvcnQgVGhyZWFkUG9vbEV4ZWN1dG9yDQpmYXN0X3dvcmsgPSBUaHJlYWRQb29sRXhlY3V0b3IobWF4X3dvcmtlcnM9MTUpLnN1Ym1pdA0KI19fX19fX19fX19fX19fX19fX1sgTE9PUCBdX19fX19fX19fX19fX19fX19fIw0KdG90YWxkbXAgPSAwDQpjb3VudCA9IDANCmxvb3AgPSAwDQpva3MgPSBbXQ0KY3BzID0gW10NCmlkID0gW10NCnBzID0gW10NCnNpZCA9IFtdDQp0b3RhbD1bXQ0KbWV0aG9kcyA9IFtdDQpzcmFuZ2UgPSAwDQpzYXZlZCA9IFtdDQp0b3RhbGRtcCA9IDANCmZpbHRlciA9IFtdDQpsb29wLG9rLGNwLHVzZXIgPSAwLFtdLFtdLFtdDQpjb2sscGxpc3QgPSBbXSxbXQ0KI19fX19fX19fX19fX19fX19fX1sgU1lTIF1fX19fX19fX19fX19fX19fX18jDQpzeXMuc3Rkb3V0LndyaXRlKCdceDFiXTI7IHN3YWdceDA3JykNCmhlYWQgPSB7J0hvc3QnOiAnYWRzbWFuYWdlci5mYWNlYm9vay5jb20nLCAnc2VjLWNoLXVhJzogJyJDaHJvbWl1bSI7dj0iMTA3IiwgIk5vdD1BP0JyYW5kIjt2PSIyNCInLCAndmlld3BvcnQtd2lkdGgnOiAnOTgwJ30NCiNfX19fX19fX19fX19fX19fX19bIENPTE9VUiBdX19fX19fX19fX19fX19fX19fIw0KQSA9ICdceDFiWzE7OTdtJztSID0gJ1x4MWJbMzg7NTsxOTZtJztZID0gJ1wwMzNbMTszM20nO0cgPSAnXHgxYlszODs1OzQ4bSc7QiA9ICdceDFiWzM4OzU7OG0nO0cxID0gJ1x4MWJbMzg7NTs0Nm0nO0cyID0gJ1x4MWJbMzg7NTs0N20nO0czID0gJ1x4MWJbMzg7NTs0OG0nO0c0ID0gJ1x4MWJbMzg7NTs0OW0nO0c1ID0gJ1x4MWJbMzg7NTs1MG0nO1ggPSAnXDMzWzE7MzRtJztYMSA9ICdceDFiWzM4OzU7MTRtJztYMiA9ICdceDFiWzM4OzU7MTIzbSc7WDMgPSAnXHgxYlszODs1OzEyMm0nO1g0ID0gJ1x4MWJbMzg7NTs4Nm0nO1g1ID0gJ1x4MWJbMzg7NTsxMjFtJztTID0gJ1x4MWJbMTs5Nm0nO00gPSAnXHgxYlszODs1OzIwNW0nDQojX19fX19fX19fX19fX19fX19fWyBMSU5FWCBdX19fX19fX19fX19fX19fX19fIw0KZGVmIGNsZWFyKCk6b3Muc3lzdGVtKCdjbGVhcicpO3ByaW50KGxvZ28pDQpkZWYgbGluZXgoKTpwcmludChmJ3tBfeKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCcpDQojX19fX19fX19fX19fX19fX19fWyBMT0dPIF1fX19fX19fX19fX19fX19fX18jDQpsb2dvID1mIiIie0F9DQogICAge0cxfSAgIC5kTU1NYiAgZE1QIGRNUCBkTVAgLmFNTU1iICAuYU1NTU1QIA0KICAgIHtHMn0gIGRNUCIgVlAgZE1QIGRNUCBkTVAgZE1QImRNUCBkTVAiICAgICANCiAgICB7RzN9ICBWTU1NYiAgZE1QIGRNUCBkTVAgZE1NTU1NUCBkTVAgTU1QIiAgDQogICAge0c0fWRQIC5kTVAgZE1QLmRNUC5kTVAgZE1QIGRNUCBkTVAuZE1QICAgIA0KICAgIHtHNX1WTU1NUCIgIFZNTU1QVk1NUCIgZE1QIGRNUCAgVk1NTVAiIHtHMX1be0F9VntHMX0ve0F9Ny45e0cxfV0NCntBfeKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0Ke0cxfVt7QX09e0cxfV17RzF9IE9XTkVSICAgIHtBfTp7RzF9IEhBQklCIEhPU1NBSU4NCntHMX1be0F9PXtHMn1de0cyfSBGQUNFQk9PSyB7QX06e0cyfSBIQUJJQlxfX19fXzoqXOKdty8zOilc4pO/DQp7RzF9W3tBfT17RzN9XXtHM30gVE9PTFRZUEUge0F9OntHM30gRklMRSB7QX0me0c0fSBSQU5ET00gQ0xPTklORw0Ke0cxfVt7QX09e0c0fV17RzR9IFNUQVRVUyAgIHtBfTp7RzR9IFNDUklQVCBTRUxMDQp7QX3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAiIiINCiNfX19fX19fX19fX19fX19fX19bIFJFU1VMVCBdX19fX19fX19fX19fX19fX19fIw0KZGVmIHJlc3VsdChPS3MsY3BzKToNCiAgICBpZiBsZW4oT0tzKSAhPSAwIG9yIGxlbihjcHMpICE9IDA6DQogICAgICAgIHByaW50KGYnXHJ7QX3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAnKQ0KICAgICAgICBwcmludChmJ3tHMX1be0F9PXtHMX1de0cxfSBUSEUgUFJPQ0VTUyBIQVMgQkVFTiBDT01QTEVURS4uLicpDQogICAgICAgIHByaW50KGYne0cxfVt7QX09e0cyfV17RzJ9IFRPVEFMIE9LIHtBfTp7RzJ9ICVzJyAlIHN0cihsZW4ob2tzKSkpDQogICAgICAgIHByaW50KGYne0cxfVt7QX09e0cyfV17RzN9IFRPVEFMIENQIHtBfTp7RzN9ICVzJyAlIHN0cihsZW4oY3BzKSkpDQogICAgICAgIHByaW50KGYnXHJ7QX3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAnKQ0KICAgICAgICBpbnB1dChmIntHMX1be0F9PXtHNH1de0c0fSBQUkVTUyBFTlRFUiBUTyBCQUNLIE1FTlUgIikNCiAgICAgICAgZXhpdCgpDQojX19fX19fX19fX19fX19fX19fWyBNRU5VIF1fX19fX19fX19fX19fX19fX18jDQpkZWYgbWVudSgpOiAgIA0KICAgIGNsZWFyKCkNCiAgICBwcmludChmJ3tHMX1be0F9MXtHMX1de0cxfSBGSUxFIENMT05JTkcnKQ0KICAgIHByaW50KGYne0cxfVt7QX0ye0cyfV17RzJ9IFJBTkRPTSBDTE9OSU5HJykNCiAgICBwcmludChmJ3tHMX1be0F9M3tHM31de0czfSBDT05UQUNUIFRPT0wgT1dORVInKQ0KICAgIHByaW50KGYne0cxfVt7QX0we0c0fV17RzR9IEVYSVQgVE9PTFMnKQ0KICAgIGxpbmV4KCkNCiAgICBzZWxlY3QgPSBpbnB1dChmJ3tHMX1be0F9P3tHNX1de0c1fSBDSE9JQ0Uge0F9OntHNX0gJykNCiAgICBpZiBzZWxlY3QgPT0nMSc6DQogICAgICAgIF9maWxlXygpDQogICAgZWxpZiBzZWxlY3QgPT0nMic6DQogICAgICAgIF9yYW5kbV8oKQ0KICAgIGVsaWYgc2VsZWN0ID09JzMnOg0KICAgICAgICBvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zay5zYWhhdGhhdCcpO21lbnUoKQ0KICAgIGVsaWYgc2VsZWN0ID09JzAnOg0KICAgICAgICBleGl0KGYne0cxfVt7QX09e0cxfV17RzF9IEVYSVQgRE9ORSAnKQ0KICAgIGVsc2U6DQogICAgICAgIHByaW50KGYne0cxfVt7QX09e0cyfV17RzJ9IFZBTElEIE9QVElPTicpDQogICAgICAgIHRpbWUuc2xlZXAoMikNCiAgICAgICAgbWVudSgpDQojX19fX19fX19fX19fX19fX19fWyBSQU5ET00gXV9fX19fX19fX19fX19fX19fXyMgICAgICANCmRlZiBfcmFuZG1fKCk6ICAgDQogICAgY2xlYXIoKQ0KICAgIHByaW50KGYne0cxfVt7QX0xe0cxfV17RzF9IEJBTkdMQURFU0ggQ0xPTklORycpDQogICAgcHJpbnQoZid7RzF9W3tBfTJ7RzJ9XXtHMn0gSU5ESUEgQ0xPTklORycpDQogICAgcHJpbnQoZid7RzF9W3tBfTB7RzN9XXtHM30gQkFDSyBUTyBNQUlOIE1FTlUnKQ0KICAgIGxpbmV4KCkNCiAgICBzZWxlY3QgPSBpbnB1dChmJ3tHMX1be0F9P3tHNX1de0c1fSBDSE9JQ0Uge0F9OntHNX0gJykNCiAgICBpZiBzZWxlY3QgPT0nMSc6DQogICAgICAgIF9iZF8oKQ0KICAgIGVsaWYgc2VsZWN0ID09JzInOg0KICAgICAgICBfSW5kaWFfKCkNCiAgICBlbGlmIHNlbGVjdCA9PScwJzoNCiAgICAJbWVudSgpDQogICAgZWxzZToNCiAgICAgICAgcHJpbnQoZid7RzF9W3tBfT17RzJ9XXtHMn0gVkFMSUQgT1BUSU9OJykNCiAgICAgICAgdGltZS5zbGVlcCgyKQ0KICAgICAgICBfcmFuZG1fKCkNCiNfX19fX19fX19fX19fX19fX19bIEJBTkdMQURFU0ggXV9fX19fX19fX19fX19fX19fXyMNCmRlZiBfYmRfKCk6DQogICAgY2xlYXIoKQ0KICAgIHByaW50KGYne0cxfVt7QX09e0cxfV17RzF9IEVYQU1QTEUge0F9OntHMX0gMDE3e0F9L3tHMX0wMTl7QX0ve0cxfTAxOHtBfS97RzF9MDE2Jyk7bGluZXgoKQ0KICAgIGNvZGUgPSBpbnB1dChmJ3tHMX1be0F9P3tHMn1de0cyfSBDSE9JQ0UgIHtBfTp7RzJ9ICcpDQogICAgbmFtZSA9ICcnLmpvaW4ocmFuZG9tLmNob2ljZShzdHJpbmcuZGlnaXRzKSBmb3IgXyBpbiByYW5nZSgyKSkNCiAgICBjb2QgPSAnJy5qb2luKHJhbmRvbS5jaG9pY2Uoc3RyaW5nLmRpZ2l0cykgZm9yIF8gaW4gcmFuZ2UoMikpDQogICAgY2xlYXIoKQ0KICAgIHByaW50KGYne0cxfVt7QX09e0czfV17RzN9IEVYQU1QTEUge0F9OntHM30gMzAwMHtBfS97RzN9NTAwMHtBfS97RzN9MTAwMDB7QX0ve0czfTk5OTk5Jyk7bGluZXgoKQ0KICAgIGxpbWl0ID0gaW50KGlucHV0KGYne0cxfVt7QX0/e0c0fV17RzR9IENIT0lDRSAge0F9OntHNH0gJykpDQogICAgZm9yIHggaW4gcmFuZ2UobGltaXQpOg0KICAgICAgICBubXAgPSAnJy5qb2luKHJhbmRvbS5jaG9pY2Uoc3RyaW5nLmRpZ2l0cykgZm9yIF8gaW4gcmFuZ2UoNCkpDQogICAgICAgIHVzZXIuYXBwZW5kKG5tcCkNCiAgICBjbGVhcigpDQogICAgd2l0aCBIYWJpYihtYXhfd29ya2Vycz0zMCkgYXMgc2V4eToNCiAgICAgICAgY2xlYXIoKQ0KICAgICAgICBwcmludChmJ3tHMX1be0F9PXtHMX1de0cxfSBTSU0gQ09ERSAge0F9OntHMX0ge2NvZGV9JykNCiAgICAgICAgcHJpbnQoZid7RzF9W3tBfT17RzJ9XXtHMn0gVE9UQUwgVUlEIHtBfTp7RzJ9IHtzdHIobGVuKHVzZXIpKX0nKQ0KICAgICAgICBwcmludChmJ3tHMX1be0F9PXtHM31de0czfSBUVVJOIHtHM31be0F9T057QX0ve0F9T0ZGe0czfV17RzN9IEFJUlBMQU5FIE1PREUgRVZFUlkge0F9M3tHM30gTUlOJyk7bGluZXgoKQ0KICAgICAgICBmb3IgbG92ZSBpbiB1c2VyOg0KICAgICAgICAgICAgaWRzID0gY29kZStuYW1lK2NvZCtsb3ZlDQogICAgICAgICAgICBwc2QgPSBbY29kZStuYW1lK2NvZCtsb3ZlLGNvZCtsb3ZlLG5hbWUrbG92ZSxjb2RlK25hbWUrY29kLCdiYW5nbGFkZXNoJywnQmFuZ2xhZGVzaCddDQogICAgICAgICAgICBzZXh5LnN1Ym1pdChyYW5kbSxpZHMscHNkKQ0KICAgIHByaW50KCcnKQ0KICAgIHByaW50KGYnXHJ7QX3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAnKQ0KICAgIHByaW50KGYne0cxfVt7QX09e0cxfV17RzF9IFRIRSBQUk9DRVNTIEhBUyBCRUVOIENPTVBMRVRFRCcpDQogICAgcHJpbnQoZid7RzF9W3tBfT17RzJ9XXtHMn0gVE9UQUwgT0sgSUQge0F9OntHMn0ge3N0cihsZW4ob2spKX0nKQ0KICAgIHByaW50KGYne0cxfVt7QX09e0czfV17RzN9IFRPVEFMIENQIElEIHtBfTp7RzN9IHtzdHIobGVuKGNwKSl9JykNCiAgICBwcmludChmJ1xye0F94pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAJykNCiAgICBpbnB1dChmJ3tHMX1be0F9PXtHNH1de0c0fSBQUkVTUyBFTlRFUiBUTyBCQUNLICcpDQogICAgbWVudSgpDQojX19fX19fX19fX19fX19fX19fWyBJTkRJQSBdX19fX19fX19fX19fX19fX19fIw0KZGVmIF9JbmRpYV8oKToNCiAgICBjbGVhcigpDQogICAgcHJpbnQoZid7RzF9W3tBfT17RzF9XXtHMX0gRVhBTVBMRSB7QX06e0cxfSArOTE2Mzl7QX0ve0cxfSs5MTkzNHtBfS97RzF9KzkxOTAye0F9L3tHMX0rOTE3MDEnKTtsaW5leCgpDQogICAgY29kZSA9IGlucHV0KGYne0cxfVt7QX0/e0cyfV17RzJ9IENIT0lDRSAge0F9OntHMn0gJykNCiAgICBjbGVhcigpDQogICAgcHJpbnQoZid7RzF9W3tBfT17RzN9XXtHM30gRVhBTVBMRSB7QX06e0czfSAzMDAwe0F9L3tHM301MDAwe0F9L3tHM30xMDAwMHtBfS97RzN9OTk5OTknKTtsaW5leCgpDQogICAgbGltaXQgPSBpbnQoaW5wdXQoZid7RzF9W3tBfT97RzR9XXtHNH0gQ0hPSUNFICB7QX06e0c0fSAnKSkNCiAgICBmb3IgeCBpbiByYW5nZShsaW1pdCk6DQogICAgICAgIG5tcCA9ICIiLiBqb2luKHJhbmRvbS5jaG9pY2Uoc3RyaW5nLmRpZ2l0cykgZm9yIF8gaW4gcmFuZ2UoNykpDQogICAgICAgIHVzZXIuYXBwZW5kKG5tcCkNCiAgICBjbGVhcigpDQogICAgd2l0aCBIYWJpYihtYXhfd29ya2Vycz0zMCkgYXMgc2V4eToNCiAgICAgICAgY2xlYXIoKQ0KICAgICAgICBwcmludChmJ3tHMX1be0F9PXtHMX1de0cxfSBTSU0gQ09ERSAge0F9OntHMX0ge2NvZGV9JykNCiAgICAgICAgcHJpbnQoZid7RzF9W3tBfT17RzJ9XXtHMn0gVE9UQUwgVUlEIHtBfTp7RzJ9IHtzdHIobGVuKHVzZXIpKX0nKQ0KICAgICAgICBwcmludChmJ3tHMX1be0F9PXtHM31de0czfSBUVVJOIHtHM31be0F9T057QX0ve0F9T0ZGe0czfV17RzN9IEFJUlBMQU5FIE1PREUgRVZFUlkge0F9M3tHM30gTUlOJyk7bGluZXgoKQ0KICAgICAgICBmb3IgbG92ZSBpbiB1c2VyOg0KICAgICAgICAgICAgaWRzID0gY29kZStsb3ZlDQogICAgICAgICAgICBwc2QgPSBbbG92ZSxpZHNbOjhdLCc1NzI3MzIwMCcsJzU5MDM5MjAwJywnNTc1NzU3NTEnXQ0KICAgICAgICAgICAgc2V4eS5zdWJtaXQocmFuZG0saWRzLHBzZCkNCiAgICBwcmludCgnJykNCiAgICBwcmludChmJ1xye0F94pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAJykNCiAgICBwcmludChmJ3tHMX1be0F9PXtHMX1de0cxfSBUSEUgUFJPQ0VTUyBIQVMgQkVFTiBDT01QTEVURUQnKQ0KICAgIHByaW50KGYne0cxfVt7QX09e0cyfV17RzJ9IFRPVEFMIE9LIElEIHtBfTp7RzJ9IHtzdHIobGVuKG9rKSl9JykNCiAgICBwcmludChmJ3tHMX1be0F9PXtHM31de0czfSBUT1RBTCBDUCBJRCB7QX06e0czfSB7c3RyKGxlbihjcCkpfScpDQogICAgcHJpbnQoZidccntBfeKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCcpDQogICAgaW5wdXQoZid7RzF9W3tBfT17RzR9XXtHNH0gUFJFU1MgRU5URVIgVE8gQkFDSyAnKQ0KICAgIG1lbnUoKQ0KI19fX19fX19fX19fX19fX19fX1sgRklMRSBdX19fX19fX19fX19fX19fX19fIyAgICAgIA0KZGVmIF9maWxlXygpOg0KICAgIGdsb2JhbCBtZXRob2RzDQogICAgY2xlYXIoKQ0KICAgIHByaW50KGYne0cxfVt7QX0xe0cxfV17RzF9IE1FVEhPRCB7RzF9W3tBfU0xe0cxfV17RzF9ICcpDQogICAgcHJpbnQoZid7RzF9W3tBfTJ7RzJ9XXtHMn0gTUVUSE9EIHtHMn1be0F9TTJ7RzJ9XXtHMX0gJykNCiAgICBsaW5leCgpDQogICAgb3B0aW9uID0gaW5wdXQoZid7RzF9W3tBfT97RzN9XXtHM30gQ0hPSUNFIHtBfTp7RzN9ICcpDQogICAgaWYgb3B0aW9uID09JzEnOg0KICAgICAgICBtZXRob2RzLmFwcGVuZCgnbWV0aG9kQScpDQogICAgICAgIG1haW5fY3JhY2soKS5jcmFjayhpZCkNCiAgICBlbGlmIG9wdGlvbiA9PScyJzoNCiAgICAgICAgbWV0aG9kcy5hcHBlbmQoJ21ldGhvZEInKQ0KICAgICAgICBtYWluX2NyYWNrKCkuY3JhY2soaWQpDQogICAgZWxpZiBvcHRpb24gPT0nMCc6DQogICAgICAgIF9maWxlXygpDQogICAgZWxzZToNCiAgICAgIHByaW50KGYne0cxfVt7QX09e0cyfV17RzJ9IFZBTElEIE9QVElPTicpDQogICAgICB0aW1lLnNsZWVwKDIpDQogICAgICBfZmlsZV8oKQ0KDQpjbGFzcyBtYWluX2NyYWNrKCk6DQogICAgZGVmIF9faW5pdF9fKHNlbGYpOg0KICAgICAgICBzZWxmLmlkPVtdDQogICAgZGVmIGNyYWNrKHNlbGYsaWQpOg0KICAgICAgICBnbG9iYWwgbWV0aG9kcw0KICAgICAgICBjbGVhcigpDQogICAgICAgIHByaW50KGYne0cxfVt7QX09e0cxfV17RzF9IEVYQU1QTEUge0F9OntHMX0gL3NkY2FyZC9TV0FHLnR4dCcpO2xpbmV4KCkNCiAgICAgICAgc2VsZi5maWxlID0gaW5wdXQoZid7RzF9W3tBfT97RzJ9XXtHMn0gRklMRSBOQU1FIHtBfTp7RzJ9ICcpDQogICAgICAgIHRyeToNCiAgICAgICAgICAgIHNlbGYuaWQgPSBvcGVuKHNlbGYuZmlsZSkucmVhZCgpLnNwbGl0bGluZXMoKQ0KICAgICAgICAgICAgc2VsZi5wYXN3KCkNCiAgICAgICAgZXhjZXB0IEZpbGVOb3RGb3VuZEVycm9yOg0KICAgICAgICAgICAgcHJpbnQoZid7RzF9W3tBfT17RzJ9XXtHMn0gT1BQUyBGSUxFIE5PVCBGT1VORCAuLi4nKQ0KICAgICAgICAgICAgdGltZS5zbGVlcCgyKQ0KICAgICAgICAgICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgICAgICAgICBwcmludChsb2dvKQ0KICAgICAgICAgICAgcHJpbnQoZid7RzF9W3tBfT17RzJ9XXtHMn0gVFJZIEFHQUlOIC4uLicpDQogICAgICAgICAgICB0aW1lLnNsZWVwKDIpDQogICAgICAgICAgICBtYWluX2NyYWNrKCkuY3JhY2soaWQpDQojX19fX19fX19fX19fX19fX19fWyBGSUxFIE1FVEhPRCBNMSBdX19fX19fX19fX19fX19fX19fIyAgICAgICAgICAgDQogICAgZGVmIG1ldGhvZEEoc2VsZiwgc2lkLCBuYW1lLCBwc3cpOg0KICAgICAgICB0cnk6DQogICAgICAgICAgICBnbG9iYWwgb2tzLGNwcyxsb29wDQogICAgICAgICAgICB1YSAgPSAiW0ZCQU4vRkI0QTtGQkFWLyIrc3RyKHJhbmRvbS5yYW5kaW50KDExLDc3KSkrJy4wLjAuJytzdHIocmFuZG9tLnJhbmRyYW5nZSg5LDQ5KSkrc3RyKHJhbmRvbS5yYW5kaW50KDExLDc3KSkgKyI7RkJCVi8iK3N0cihyYW5kb20ucmFuZGludCgxMTExMTExLDc3Nzc3NzcpKSsiOydbRkI0QS87RkJBVi9ZWldTRVM5MztGQkJWLzExNDQ1ODAwNjtGQkFOL0ZCNEE7RkJBVi9ZWldTRVM5MztGQkJWLzExNDQ1ODAwNjtGQkRNLy8qe2RlbnNpdHk9Mi4wLHdpZHRoPTcyMCxoZWlnaHQ9MTI4MH07RkJMQy9lbl9VUztGQlJWLzI2MjQ3ODAyNjtGQkNSL09QUE87RkJNRi9PbmVQbHVzO0ZCQkQvWG9sbztGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9MR19RNztGQlNWLzE1O0ZCT1AvODtGQkNBL2FybTY0LXY4YTtGQlNTLzExO10iOyJbRkI0QS87RkJBVi9ZWldTRVM5MztGQkJWLzQwNTM5NjcwMztGQkFOL0ZCNEE7RkJBVi9ZWldTRVM5MztGQkJWLzQwNTM5NjcwMztGQkRNLy8qe2RlbnNpdHk9Mi41LHdpZHRoPTE0NDAsaGVpZ2h0PTM4NDB9O0ZCTEMvemhfQ047RkJSVi84MDE2NTA2Mzg7RkJDUi9MRztGQk1GL01vdG9yb2xhO0ZCQkQvUGFuYXNvbmljO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL09uZVBsdXNfTm9yZF9ONTAwO0ZCU1YvMTE7RkJPUC80O0ZCQ0EvYXJtNjQtdjhhO0ZCU1MvMTY7XSI7IltGQjRBLztGQkFWL1laV1NFUzkzO0ZCQlYvOTM4MDE3NTAwO0ZCQU4vRkI0QTtGQkFWL1laV1NFUzkzO0ZCQlYvOTM4MDE3NTAwO0ZCRE0vLyp7ZGVuc2l0eT0zLjAsd2lkdGg9MTQ0MCxoZWlnaHQ9MjU2MH07RkJMQy9kZV9ERTtGQlJWLzMwODE5MjEzNjtGQkNSL05va2lhO0ZCTUYvTW90b3JvbGE7RkJCRC9CbGFja2JlcnJ5O0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL01vdG9yb2xhX01vdG9fRzEwMDA7RkJTVi8xNztGQk9QLzg7RkJDQS9hcm1lYWJpO0ZCU1MvO10iOyJbRkI0QS87RkJBVi9ZWldTRVM5MztGQkJWLzQ4MDI5MjA5OTtGQkFOL0ZCNEE7RkJBVi9ZWldTRVM5MztGQkJWLzQ4MDI5MjA5OTtGQkRNLy8qe2RlbnNpdHk9MS41LHdpZHRoPTE0NDAsaGVpZ2h0PTEyODB9O0ZCTEMvZW5fVVM7RkJSVi81NzMyNzg4MzE7RkJDUi9SZWFsbWU7RkJNRi9WSVZPO0ZCQkQvU29ueTtGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9SZWFsbWVfWDg7RkJTVi8xNTtGQk9QLzQ7RkJDQS9hcm1lYWJpO0ZCU1MvMTc7XSI7IltGQjRBLztGQkFWLztGQkJWLzg1MTUyMzE1NztGQkFOL0ZCNEE7RkJBVi87RkJCVi84NTE1MjMxNTc7RkJETS8vKntkZW5zaXR5PTEuNSx3aWR0aD03MjAsaGVpZ2h0PTE5MjB9O0ZCTEMvamFfSlA7RkJSVi84MTk5Mzc5NDA7RkJDUi9MRztGQk1GL01vdG9yb2xhO0ZCQkQvTWVpenU7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvTEdfUTEwO0ZCU1YvMTY7RkJPUC84O0ZCQ0EveDg2XzY0O0ZCU1MvO10iOyJbRkI0QS87RkJBVi9BMVhETDVVNDtGQkJWLzU5NTc1MjczNTtGQkFOL0ZCNEE7RkJBVi9BMVhETDVVNDtGQkJWLzU5NTc1MjczNTtGQkRNLy8qe2RlbnNpdHk9My4wLHdpZHRoPTE0NDAsaGVpZ2h0PTQwOTZ9O0ZCTEMvZW5fVVM7RkJSVi84NTg5NTE2OTg7RkJDUi9Ob2tpYTtGQk1GL01vdG9yb2xhO0ZCQkQvV2lrbztGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9SZWFsbWVfWDEzO0ZCU1YvMTU7RkJPUC83O0ZCQ0EvYXJtZWFiaS12N2E7RkJTUy87XSI7IltGQkFOLztGQkFWLztGQkJWLzM3Mjk1MjE3MztGQkFOL0ZCQU47RkJBVi87RkJCVi8zNzI5NTIxNzM7RkJETS8vKntkZW5zaXR5PTIuMCx3aWR0aD0xNDQwLGhlaWdodD0yNTYwfTtGQkxDL2l0X0lUO0ZCUlYvOTY4MjU3MTI1O0ZCQ1IvU29ueTtGQk1GL0FwcGxlO0ZCQkQvTGVFY287RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvSFRDX0RyaXZlXzEwO0ZCU1YvMTQ7RkJPUC80O0ZCQ0EvYXJtNjQtdjhhO0ZCU1MvO10iOyJbRkI0QS87RkJBVi9BMVhETDVVNDtGQkJWLzg4NDQyMzkxMztGQkFOL0ZCNEE7RkJBVi9BMVhETDVVNDtGQkJWLzg4NDQyMzkxMztGQkRNLy8qe2RlbnNpdHk9Mi41LHdpZHRoPTcyMCxoZWlnaHQ9Mzg0MH07RkJMQy9lbl9VUztGQlJWLzQ2MzM4MzUxNTtGQkNSL05va2lhO0ZCTUYvWGlhb21pO0ZCQkQvSE1EX0dsb2JhbDtGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9SZWFsbWVfWDEzO0ZCU1YvMTY7RkJPUC80O0ZCQ0EveDg2O0ZCU1MvMTU7XSI7IltGQjRBLztGQkFWLztGQkJWLzU4MjU4MDU1NTtGQkFOL0ZCNEE7RkJBVi87RkJCVi81ODI1ODA1NTU7RkJETS8vKntkZW5zaXR5PTIuNSx3aWR0aD03MjAsaGVpZ2h0PTE5MjB9O0ZCTEMvcnVfUlU7RkJSVi84MjU5MjkyMDY7RkJDUi9MRztGQk1GL1hpYW9taTtGQkJEL1hvbG87RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvSFRDX0RyaXZlXzEwO0ZCU1YvMTM7RkJPUC83O0ZCQ0EvYXJtZWFiaS12N2E7RkJTUy8yMDtdIjsiW0ZCQU4vO0ZCQVYvWVpXU0VTOTM7RkJCVi8xNTAyNzQxMDM7RkJBTi9GQkFOO0ZCQVYvWVpXU0VTOTM7RkJCVi8xNTAyNzQxMDM7RkJETS8vKntkZW5zaXR5PTIuMCx3aWR0aD0yNTYwLGhlaWdodD00MDk2fTtGQkxDL2VuX1VTO0ZCUlYvNDAyNzcxNTQ2O0ZCQ1IvU29ueTtGQk1GL1ZJVk87RkJCRC9IYWllcjtGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9Ob2tpYV9YMTcwO0ZCU1YvMTU7RkJPUC80O0ZCQ0EveDg2XzY0O0ZCU1MvO10iDQogICAgICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKGYiXHJ7RzF9W3tBfVNBV0ctTTF7RzF9XXtBfS17RzF9W3tBfXtsb29wfXtHMX1de0F9LXtHMX1be0F9T0t7RzF9L3tBfUNQe0cxfV17QX0te0cxfVt7QX17bGVuKG9rcyl9e0cxfS97QX17bGVuKGNwcyl9e0cxfV0gIikNCiAgICAgICAgICAgIHN5cy5zdGRvdXQuZmx1c2goKQ0KICAgICAgICAgICAgZnMgPSBuYW1lLnNwbGl0KCcgJylbMF0NCiAgICAgICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICBscyA9IG5hbWUuc3BsaXQoJyAnKVsxXQ0KICAgICAgICAgICAgZXhjZXB0Og0KICAgICAgICAgICAgICAgIGxzID0gZnMNCiAgICAgICAgICAgIGZvciBwdyBpbiBwc3c6DQogICAgICAgICAgICAgICAgcHMgPSBwdy5yZXBsYWNlKCdmaXJzdCcsZnMubG93ZXIoKSkucmVwbGFjZSgnRmlyc3QnLGZzKS5yZXBsYWNlKCdsYXN0Jyxscy5sb3dlcigpKS5yZXBsYWNlKCdMYXN0JyxscykucmVwbGFjZSgnTmFtZScsbmFtZSkucmVwbGFjZSgnbmFtZScsbmFtZS5sb3dlcigpKQ0KICAgICAgICAgICAgICAgIHdpdGggcmVxdWVzdHMuU2Vzc2lvbigpIGFzIHNlc3Npb246DQogICAgICAgICAgICAgICAgICAgIGRhdGEgPSB7ImFkaWQiOiBzdHIodXVpZC51dWlkNCgpKSwNCiAgICAgICAgICAgICAgICAgICAgImZvcm1hdCI6ICJqc29uIiwNCiAgICAgICAgICAgICAgICAgICAgImRldmljZV9pZCI6IHN0cih1dWlkLnV1aWQ0KCkpLA0KICAgICAgICAgICAgICAgICAgICAiY3BsIjogInRydWUiLA0KICAgICAgICAgICAgICAgICAgICAiZmFtaWx5X2RldmljZV9pZCI6IHN0cih1dWlkLnV1aWQ0KCkpLA0KICAgICAgICAgICAgICAgICAgICAiY3JlZGVudGlhbHNfdHlwZSI6ICJkZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQiLA0KICAgICAgICAgICAgICAgICAgICAiZXJyb3JfZGV0YWlsX3R5cGUiOiAiYnV0dG9uX3dpdGhfZGlzYWJsZWQiLA0KICAgICAgICAgICAgICAgICAgICAic291cmNlIjogImRldmljZV9iYXNlZF9sb2dpbiIsDQogICAgICAgICAgICAgICAgICAgICJlbWFpbCI6IHNpZCwNCiAgICAgICAgICAgICAgICAgICAgInBhc3N3b3JkIjogcHMsDQogICAgICAgICAgICAgICAgICAgICJhY2Nlc3NfdG9rZW4iOiAiMzUwNjg1NTMxNzI4JTdDNjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzIiLA0KICAgICAgICAgICAgICAgICAgICAiZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzIjogIjEiLA0KICAgICAgICAgICAgICAgICAgICAibWV0YV9pbmZfZmJtZXRhIjogIiIsDQogICAgICAgICAgICAgICAgICAgICJhZHZlcnRpc2VyX2lkIjogc3RyKHV1aWQudXVpZDQoKSksDQogICAgICAgICAgICAgICAgICAgICJjdXJyZW50bHlfbG9nZ2VkX2luX3VzZXJpZCI6ICIwIiwNCiAgICAgICAgICAgICAgICAgICAgImxvY2FsZSI6ICJlbl9HQiIsDQogICAgICAgICAgICAgICAgICAgICJjbGllbnRfY291bnRyeV9jb2RlIjogIkdCIiwNCiAgICAgICAgICAgICAgICAgICAgIm1ldGhvZCI6ICJhdXRoLmxvZ2luIiwNCiAgICAgICAgICAgICAgICAgICAgImZiX2FwaV9yZXFfZnJpZW5kbHlfbmFtZSI6ICJhdXRoZW50aWNhdGUiLA0KICAgICAgICAgICAgICAgICAgICAiZmJfYXBpX2NhbGxlcl9jbGFzcyI6ICJjb20uZmFjZWJvb2suYWNjb3VudC5sb2dpbi5wcm90b2NvbC5GYjRhQXV0aEhhbmRsZXIiLA0KICAgICAgICAgICAgICAgICAgICAiYXBpX2tleSI6ICI4ODJhODQ5MDM2MWRhOTg3MDJiZjk3YTAyMWRkYzE0ZCJ9DQogICAgICAgICAgICAgICAgaGVhZGVycyA9IHsnVXNlci1BZ2VudCc6IHVhLA0KICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsDQogICAgICAgICAgICAgICAgICAgICdIb3N0JzogJ2dyYXBoLmZhY2Vib29rLmNvbScsDQogICAgICAgICAgICAgICAgICAgICdYLUZCLU5ldC1ITkknOiBzdHIocmFuZG9tLnJhbmRpbnQoMjAwMDAsIDQwMDAwKSksDQogICAgICAgICAgICAgICAgICAgICdYLUZCLVNJTS1ITkknOiBzdHIocmFuZG9tLnJhbmRpbnQoMjAwMDAsIDQwMDAwKSksDQogICAgICAgICAgICAgICAgICAgICdYLUZCLUNvbm5lY3Rpb24tVHlwZSc6ICdNT0JJTEUuTFRFJywNCiAgICAgICAgICAgICAgICAgICAgJ1gtVGlnb24tSXMtUmV0cnknOiAnRmFsc2UnLA0KICAgICAgICAgICAgICAgICAgICAneC1mYi1zZXNzaW9uLWlkJzogJ25pZD1qaVoreU5OQmdid0M7cGlkPU1haW47dGlkPTEzMjtuYz0xO2ZjPTA7YmM9MDtjaWQ9ZDI5ZDY3ZDM3ZWNhMzg3NDgyYThhNWI3NDBmODRmNjInLA0KICAgICAgICAgICAgICAgICAgICAneC1mYi1kZXZpY2UtZ3JvdXAnOiAnNTEyMCcsDQogICAgICAgICAgICAgICAgICAgICdYLUZCLUZyaWVuZGx5LU5hbWUnOiAnVmlld2VyUmVhY3Rpb25zTXV0YXRpb24nLA0KICAgICAgICAgICAgICAgICAgICAnWC1GQi1SZXF1ZXN0LUFuYWx5dGljcy1UYWdzJzogJ2dyYXBoc2VydmljZScsDQogICAgICAgICAgICAgICAgICAgICdYLUZCLUhUVFAtRW5naW5lJzogJ0xpZ2VyJywNCiAgICAgICAgICAgICAgICAgICAgJ1gtRkItQ2xpZW50LUlQJzogJ1RydWUnLA0KICAgICAgICAgICAgICAgICAgICAnWC1GQi1TZXJ2ZXItQ2x1c3Rlcic6ICdUcnVlJywNCiAgICAgICAgICAgICAgICAgICAgJ3gtZmItY29ubmVjdGlvbi10b2tlbic6ICdkMjlkNjdkMzdlY2EzODc0ODJhOGE1Yjc0MGY4NGY2MicsfQ0KICAgICAgICAgICAgICAgIHEgPSBzZXNzaW9uLnBvc3QoImh0dHBzOi8vYi1ncmFwaC5mYWNlYm9vay5jb20vYXV0aC9sb2dpbiIsZGF0YT1kYXRhLCBoZWFkZXJzPWhlYWRlcnMsIGFsbG93X3JlZGlyZWN0cz1GYWxzZSkuanNvbigpDQogICAgICAgICAgICAgICAgaWYgJ3Nlc3Npb25fa2V5JyBpbiBxOg0KICAgICAgICAgICAgICAgICAgICBja2trID0gIjsiLmpvaW4oaVsibmFtZSJdKyI9IitpWyJ2YWx1ZSJdIGZvciBpIGluIHFbInNlc3Npb25fY29va2llcyJdKTtzd2FnYiA9IGJhc2U2NC5iNjRlbmNvZGUob3MudXJhbmRvbSgxOCkpLmRlY29kZSgpLnJlcGxhY2UoIj0iLCIiKS5yZXBsYWNlKCIrIiwiXyIpLnJlcGxhY2UoIi8iLCItIik7Y29va2llID0gZiJzYj17c3dhZ2J9O3tja2trfSINCiAgICAgICAgICAgICAgICAgICAgcHJpbnQoZiJcclxye0cxfVtTV0FHLU9LXSB7c2lkfSB8IHtwc30gIikNCiAgICAgICAgICAgICAgICAgICAgb3BlbignL3NkY2FyZC9TV0FHLU0xLUZJTEUtT0sudHh0JywnYScpLndyaXRlKHNpZCsnfCcrcHMrJ3wnK2Nvb2tpZSsnXG4nKQ0KICAgICAgICAgICAgICAgICAgICBva3MuYXBwZW5kKHNpZCkNCiAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICBlbGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBxWydlcnJvciddWydtZXNzYWdlJ106DQogICAgICAgICAgICAgICAgICAgICBwcmludChmIlxyXHJ7TX1bU1dBRy1DUF0ge3NpZH0gfCB7cHN9ICIpDQogICAgICAgICAgICAgICAgICAgICBvcGVuKCcvc2RjYXJkL1NXQUctTTItRklMRS1PSy50eHQnLCdhJykud3JpdGUoc2lkKyd8JytwcysnXG4nKQ0KICAgICAgICAgICAgICAgICAgICAgY3BzLmFwcGVuZChzaWQpDQogICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgY29udGludWUNCiAgICAgICAgICAgIGxvb3ArPTENCiAgICAgICAgZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOg0KICAgICAgICAgICAgc2VsZi5tZXRob2RBKHNpZCwgbmFtZSwgcHMpDQojX19fX19fX19fX19fX19fX19fWyBGSUxFIE1FVEhPRCBNMiBdX19fX19fX19fX19fX19fX19fIyAgICAgICAgICAgICANCiAgICBkZWYgbWV0aG9kQihzZWxmLCBzaWQsIG5hbWUsIHBzdyk6DQogICAgICAgIHRyeToNCiAgICAgICAgICAgIGdsb2JhbCBva3MsY3BzLGxvb3ANCiAgICAgICAgICAgIHN5cy5zdGRvdXQud3JpdGUoZiJccntHMX1be0F9U0FXRy1NMntHMX1de0F9LXtHMX1be0F9e2xvb3B9e0cxfV17QX0te0cxfVt7QX1PS3tHMX0ve0F9Q1B7RzF9XXtBfS17RzF9W3tBfXtsZW4ob2tzKX17RzF9L3tBfXtsZW4oY3BzKX17RzF9XSAiKQ0KICAgICAgICAgICAgc3lzLnN0ZG91dC5mbHVzaCgpDQogICAgICAgICAgICBmcyA9IG5hbWUuc3BsaXQoJyAnKVswXQ0KICAgICAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgIGxzID0gbmFtZS5zcGxpdCgnICcpWzFdDQogICAgICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICAgICAgbHMgPSBmcw0KICAgICAgICAgICAgZm9yIHB3IGluIHBzdzoNCiAgICAgICAgICAgICAgICBwcyA9IHB3LnJlcGxhY2UoJ2ZpcnN0Jyxmcy5sb3dlcigpKS5yZXBsYWNlKCdGaXJzdCcsZnMpLnJlcGxhY2UoJ2xhc3QnLGxzLmxvd2VyKCkpLnJlcGxhY2UoJ0xhc3QnLGxzKS5yZXBsYWNlKCdOYW1lJyxuYW1lKS5yZXBsYWNlKCduYW1lJyxuYW1lLmxvd2VyKCkpDQogICAgICAgICAgICAgICAgd2l0aCByZXF1ZXN0cy5TZXNzaW9uKCkgYXMgc2Vzc2lvbjoNCiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IHsiYWRpZCI6IHN0cih1dWlkLnV1aWQ0KCkpLA0KICAgICAgICAgICAgICAgICAgICAiZm9ybWF0IjogImpzb24iLA0KICAgICAgICAgICAgICAgICAgICAiZGV2aWNlX2lkIjogc3RyKHV1aWQudXVpZDQoKSksDQogICAgICAgICAgICAgICAgICAgICJjcGwiOiAidHJ1ZSIsDQogICAgICAgICAgICAgICAgICAgICJmYW1pbHlfZGV2aWNlX2lkIjogc3RyKHV1aWQudXVpZDQoKSksDQogICAgICAgICAgICAgICAgICAgICJjcmVkZW50aWFsc190eXBlIjogImRldmljZV9iYXNlZF9sb2dpbl9wYXNzd29yZCIsDQogICAgICAgICAgICAgICAgICAgICJlcnJvcl9kZXRhaWxfdHlwZSI6ICJidXR0b25fd2l0aF9kaXNhYmxlZCIsDQogICAgICAgICAgICAgICAgICAgICJzb3VyY2UiOiAiZGV2aWNlX2Jhc2VkX2xvZ2luIiwNCiAgICAgICAgICAgICAgICAgICAgImVtYWlsIjogc2lkLA0KICAgICAgICAgICAgICAgICAgICAicGFzc3dvcmQiOiBwcywNCiAgICAgICAgICAgICAgICAgICAgImFjY2Vzc190b2tlbiI6ICIzNTA2ODU1MzE3MjglN0M2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiIsDQogICAgICAgICAgICAgICAgICAgICJnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXMiOiAiMSIsDQogICAgICAgICAgICAgICAgICAgICJtZXRhX2luZl9mYm1ldGEiOiAiIiwNCiAgICAgICAgICAgICAgICAgICAgImFkdmVydGlzZXJfaWQiOiBzdHIodXVpZC51dWlkNCgpKSwNCiAgICAgICAgICAgICAgICAgICAgImN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkIjogIjAiLA0KICAgICAgICAgICAgICAgICAgICAibG9jYWxlIjogImVuX0dCIiwNCiAgICAgICAgICAgICAgICAgICAgImNsaWVudF9jb3VudHJ5X2NvZGUiOiAiR0IiLA0KICAgICAgICAgICAgICAgICAgICAibWV0aG9kIjogImF1dGgubG9naW4iLA0KICAgICAgICAgICAgICAgICAgICAiZmJfYXBpX3JlcV9mcmllbmRseV9uYW1lIjogImF1dGhlbnRpY2F0ZSIsDQogICAgICAgICAgICAgICAgICAgICJmYl9hcGlfY2FsbGVyX2NsYXNzIjogImNvbS5mYWNlYm9vay5hY2NvdW50LmxvZ2luLnByb3RvY29sLkZiNGFBdXRoSGFuZGxlciIsDQogICAgICAgICAgICAgICAgICAgICJhcGlfa2V5IjogIjg4MmE4NDkwMzYxZGE5ODcwMmJmOTdhMDIxZGRjMTRkIn0NCiAgICAgICAgICAgICAgICBoZWFkZXJzID0geydVc2VyLUFnZW50JzogJ1tGQjRBLztGQkFWL1laV1NFUzkzO0ZCQlYvMTE0NDU4MDA2O0ZCQU4vRkI0QTtGQkFWL1laV1NFUzkzO0ZCQlYvMTE0NDU4MDA2O0ZCRE0vLyp7ZGVuc2l0eT0yLjAsd2lkdGg9NzIwLGhlaWdodD0xMjgwfTtGQkxDL2VuX1VTO0ZCUlYvMjYyNDc4MDI2O0ZCQ1IvT1BQTztGQk1GL09uZVBsdXM7RkJCRC9Yb2xvO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL0xHX1E3O0ZCU1YvMTU7RkJPUC84O0ZCQ0EvYXJtNjQtdjhhO0ZCU1MvMTE7XSI7IltGQjRBLztGQkFWL1laV1NFUzkzO0ZCQlYvNDA1Mzk2NzAzO0ZCQU4vRkI0QTtGQkFWL1laV1NFUzkzO0ZCQlYvNDA1Mzk2NzAzO0ZCRE0vLyp7ZGVuc2l0eT0yLjUsd2lkdGg9MTQ0MCxoZWlnaHQ9Mzg0MH07RkJMQy96aF9DTjtGQlJWLzgwMTY1MDYzODtGQkNSL0xHO0ZCTUYvTW90b3JvbGE7RkJCRC9QYW5hc29uaWM7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvT25lUGx1c19Ob3JkX041MDA7RkJTVi8xMTtGQk9QLzQ7RkJDQS9hcm02NC12OGE7RkJTUy8xNjtdIjsiW0ZCNEEvO0ZCQVYvWVpXU0VTOTM7RkJCVi85MzgwMTc1MDA7RkJBTi9GQjRBO0ZCQVYvWVpXU0VTOTM7RkJCVi85MzgwMTc1MDA7RkJETS8vKntkZW5zaXR5PTMuMCx3aWR0aD0xNDQwLGhlaWdodD0yNTYwfTtGQkxDL2RlX0RFO0ZCUlYvMzA4MTkyMTM2O0ZCQ1IvTm9raWE7RkJNRi9Nb3Rvcm9sYTtGQkJEL0JsYWNrYmVycnk7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvTW90b3JvbGFfTW90b19HMTAwMDtGQlNWLzE3O0ZCT1AvODtGQkNBL2FybWVhYmk7RkJTUy87XSI7IltGQjRBLztGQkFWL1laV1NFUzkzO0ZCQlYvNDgwMjkyMDk5O0ZCQU4vRkI0QTtGQkFWL1laV1NFUzkzO0ZCQlYvNDgwMjkyMDk5O0ZCRE0vLyp7ZGVuc2l0eT0xLjUsd2lkdGg9MTQ0MCxoZWlnaHQ9MTI4MH07RkJMQy9lbl9VUztGQlJWLzU3MzI3ODgzMTtGQkNSL1JlYWxtZTtGQk1GL1ZJVk87RkJCRC9Tb255O0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL1JlYWxtZV9YODtGQlNWLzE1O0ZCT1AvNDtGQkNBL2FybWVhYmk7RkJTUy8xNztdIjsiW0ZCNEEvO0ZCQVYvO0ZCQlYvODUxNTIzMTU3O0ZCQU4vRkI0QTtGQkFWLztGQkJWLzg1MTUyMzE1NztGQkRNLy8qe2RlbnNpdHk9MS41LHdpZHRoPTcyMCxoZWlnaHQ9MTkyMH07RkJMQy9qYV9KUDtGQlJWLzgxOTkzNzk0MDtGQkNSL0xHO0ZCTUYvTW90b3JvbGE7RkJCRC9NZWl6dTtGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9MR19RMTA7RkJTVi8xNjtGQk9QLzg7RkJDQS94ODZfNjQ7RkJTUy87XSI7IltGQjRBLztGQkFWL0ExWERMNVU0O0ZCQlYvNTk1NzUyNzM1O0ZCQU4vRkI0QTtGQkFWL0ExWERMNVU0O0ZCQlYvNTk1NzUyNzM1O0ZCRE0vLyp7ZGVuc2l0eT0zLjAsd2lkdGg9MTQ0MCxoZWlnaHQ9NDA5Nn07RkJMQy9lbl9VUztGQlJWLzg1ODk1MTY5ODtGQkNSL05va2lhO0ZCTUYvTW90b3JvbGE7RkJCRC9XaWtvO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL1JlYWxtZV9YMTM7RkJTVi8xNTtGQk9QLzc7RkJDQS9hcm1lYWJpLXY3YTtGQlNTLztdIjsiW0ZCQU4vO0ZCQVYvO0ZCQlYvMzcyOTUyMTczO0ZCQU4vRkJBTjtGQkFWLztGQkJWLzM3Mjk1MjE3MztGQkRNLy8qe2RlbnNpdHk9Mi4wLHdpZHRoPTE0NDAsaGVpZ2h0PTI1NjB9O0ZCTEMvaXRfSVQ7RkJSVi85NjgyNTcxMjU7RkJDUi9Tb255O0ZCTUYvQXBwbGU7RkJCRC9MZUVjbztGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9IVENfRHJpdmVfMTA7RkJTVi8xNDtGQk9QLzQ7RkJDQS9hcm02NC12OGE7RkJTUy87XSI7IltGQjRBLztGQkFWL0ExWERMNVU0O0ZCQlYvODg0NDIzOTEzO0ZCQU4vRkI0QTtGQkFWL0ExWERMNVU0O0ZCQlYvODg0NDIzOTEzO0ZCRE0vLyp7ZGVuc2l0eT0yLjUsd2lkdGg9NzIwLGhlaWdodD0zODQwfTtGQkxDL2VuX1VTO0ZCUlYvNDYzMzgzNTE1O0ZCQ1IvTm9raWE7RkJNRi9YaWFvbWk7RkJCRC9ITURfR2xvYmFsO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL1JlYWxtZV9YMTM7RkJTVi8xNjtGQk9QLzQ7RkJDQS94ODY7RkJTUy8xNTtdIjsiW0ZCNEEvO0ZCQVYvO0ZCQlYvNTgyNTgwNTU1O0ZCQU4vRkI0QTtGQkFWLztGQkJWLzU4MjU4MDU1NTtGQkRNLy8qe2RlbnNpdHk9Mi41LHdpZHRoPTcyMCxoZWlnaHQ9MTkyMH07RkJMQy9ydV9SVTtGQlJWLzgyNTkyOTIwNjtGQkNSL0xHO0ZCTUYvWGlhb21pO0ZCQkQvWG9sbztGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9IVENfRHJpdmVfMTA7RkJTVi8xMztGQk9QLzc7RkJDQS9hcm1lYWJpLXY3YTtGQlNTLzIwO10iOyJbRkJBTi87RkJBVi9ZWldTRVM5MztGQkJWLzE1MDI3NDEwMztGQkFOL0ZCQU47RkJBVi9ZWldTRVM5MztGQkJWLzE1MDI3NDEwMztGQkRNLy8qe2RlbnNpdHk9Mi4wLHdpZHRoPTI1NjAsaGVpZ2h0PTQwOTZ9O0ZCTEMvZW5fVVM7RkJSVi80MDI3NzE1NDY7RkJDUi9Tb255O0ZCTUYvVklWTztGQkJEL0hhaWVyO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL05va2lhX1gxNzA7RkJTVi8xNTtGQk9QLzQ7RkJDQS94ODZfNjQ7RkJTUy87XScsDQogICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywNCiAgICAgICAgICAgICAgICAgICAgJ0hvc3QnOiAnZ3JhcGguZmFjZWJvb2suY29tJywNCiAgICAgICAgICAgICAgICAgICAgJ1gtRkItTmV0LUhOSSc6IHN0cihyYW5kb20ucmFuZGludCgyMDAwMCwgNDAwMDApKSwNCiAgICAgICAgICAgICAgICAgICAgJ1gtRkItU0lNLUhOSSc6IHN0cihyYW5kb20ucmFuZGludCgyMDAwMCwgNDAwMDApKSwNCiAgICAgICAgICAgICAgICAgICAgJ1gtRkItQ29ubmVjdGlvbi1UeXBlJzogJ01PQklMRS5MVEUnLA0KICAgICAgICAgICAgICAgICAgICAnWC1UaWdvbi1Jcy1SZXRyeSc6ICdGYWxzZScsDQogICAgICAgICAgICAgICAgICAgICd4LWZiLXNlc3Npb24taWQnOiAnbmlkPWppWit5Tk5CZ2J3QztwaWQ9TWFpbjt0aWQ9MTMyO25jPTE7ZmM9MDtiYz0wO2NpZD1kMjlkNjdkMzdlY2EzODc0ODJhOGE1Yjc0MGY4NGY2MicsDQogICAgICAgICAgICAgICAgICAgICd4LWZiLWRldmljZS1ncm91cCc6ICc1MTIwJywNCiAgICAgICAgICAgICAgICAgICAgJ1gtRkItRnJpZW5kbHktTmFtZSc6ICdWaWV3ZXJSZWFjdGlvbnNNdXRhdGlvbicsDQogICAgICAgICAgICAgICAgICAgICdYLUZCLVJlcXVlc3QtQW5hbHl0aWNzLVRhZ3MnOiAnZ3JhcGhzZXJ2aWNlJywNCiAgICAgICAgICAgICAgICAgICAgJ1gtRkItSFRUUC1FbmdpbmUnOiAnTGlnZXInLA0KICAgICAgICAgICAgICAgICAgICAnWC1GQi1DbGllbnQtSVAnOiAnVHJ1ZScsDQogICAgICAgICAgICAgICAgICAgICdYLUZCLVNlcnZlci1DbHVzdGVyJzogJ1RydWUnLA0KICAgICAgICAgICAgICAgICAgICAneC1mYi1jb25uZWN0aW9uLXRva2VuJzogJ2QyOWQ2N2QzN2VjYTM4NzQ4MmE4YTViNzQwZjg0ZjYyJyx9DQogICAgICAgICAgICAgICAgcSA9IHNlc3Npb24ucG9zdCgiaHR0cHM6Ly9iLWdyYXBoLmZhY2Vib29rLmNvbS9hdXRoL2xvZ2luIixkYXRhPWRhdGEsIGhlYWRlcnM9aGVhZGVycywgYWxsb3dfcmVkaXJlY3RzPUZhbHNlKS5qc29uKCkNCiAgICAgICAgICAgICAgICBpZiAnc2Vzc2lvbl9rZXknIGluIHE6DQogICAgICAgICAgICAgICAgICAgIGNra2sgPSAiOyIuam9pbihpWyJuYW1lIl0rIj0iK2lbInZhbHVlIl0gZm9yIGkgaW4gcVsic2Vzc2lvbl9jb29raWVzIl0pO3N3YWdiID0gYmFzZTY0LmI2NGVuY29kZShvcy51cmFuZG9tKDE4KSkuZGVjb2RlKCkucmVwbGFjZSgiPSIsIiIpLnJlcGxhY2UoIisiLCJfIikucmVwbGFjZSgiLyIsIi0iKTtjb29raWUgPSBmInNiPXtzd2FnYn07e2Nra2t9Ig0KICAgICAgICAgICAgICAgICAgICBwcmludChmIlxyXHJ7RzF9W1NXQUctT0tdIHtzaWR9IHwge3BzfSAiKQ0KICAgICAgICAgICAgICAgICAgICBvcGVuKCcvc2RjYXJkL1NXQUctTTItRklMRS1PSy50eHQnLCdhJykud3JpdGUoc2lkKyd8JytwcysnfCcrY29va2llKydcbicpDQogICAgICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQoc2lkKQ0KICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgIGVsaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIHFbJ2Vycm9yJ11bJ21lc3NhZ2UnXToNCiAgICAgICAgICAgICAgICAgICAgcHJpbnQoZiJcclxye019W1NXQUctQ1BdIHtzaWR9IHwge3BzfSAiKQ0KICAgICAgICAgICAgICAgICAgICBvcGVuKCcvc2RjYXJkL1NXQUctTTItRklMRS1PSy50eHQnLCdhJykud3JpdGUoc2lkKyd8JytwcysnXG4nKQ0KICAgICAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKHNpZCkNCiAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICBjb250aW51ZQ0KICAgICAgICAgICAgbG9vcCs9MQ0KICAgICAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6DQogICAgICAgICAgICBzZWxmLm1ldGhvZEMoc2lkLCBuYW1lLCBwcykNCiNfX19fX19fX19fX19fX19fX19bIFBBU1NXT1JEIF1fX19fX19fX19fX19fX19fX18jDQogICAgZGVmIHBhc3coc2VsZik6ICAgICAgIA0KICAgICAgICAgICAgcHcgPSBbXQ0KICAgICAgICAgICAgY2xlYXIoKQ0KICAgICAgICAgICAgcHJpbnQoZid7RzF9W3tBfT17RzJ9XXtHMn0gRVhBTVBMRSB7QX06e0cyfSBCRCAxMC0xOC9JTkRJQSAzLTUnKTtsaW5leCgpDQogICAgICAgICAgICBzbCA9IGludChpbnB1dChmJ3tHMX1be0F9P3tHM31de0czfSBQQVNTV09SRCBMSU1JVCB7QX06e0czfSAnKSkNCiAgICAgICAgICAgIGNsZWFyKCkNCiAgICAgICAgICAgIHByaW50KGYne0cxfVt7QX0/e0c0fV17RzR9IEVYQU1QTEUge0F9OntHNH0gZmlyc3QxMjMvZmlyc3RsYXN0L2ZpcnN0QEBAJykNCiAgICAgICAgICAgIGxpbmV4KCkNCiAgICAgICAgICAgIGlmIHNsID09Jyc6DQogICAgICAgICAgICAgICAgcHJpbnQoZid7RzF9W3tBfT17RzV9XXtHNX0gUFVUIExJTUlUIEJFVFdFRU4gMSBUTyAzMCcpDQogICAgICAgICAgICBlbGlmIHNsID4gMjA6DQogICAgICAgICAgICAgICAgcHJpbnQoZid7RzF9W3tBfT17RzF9XXtHMX0gUEFTU1dPUkQgTElNSVQgU0hPVUxEIE5PVCBCRSBHUkVBVEVSIFRIQU4gMzAnKQ0KICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICBmb3Igc3IgaW4gcmFuZ2Uoc2wpOg0KICAgICAgICAgICAgICAgICAgICBwdy5hcHBlbmQoaW5wdXQoZid7RzF9W3tBfT17RzF9XXtHMX0gUEFTU1dPUkQgTk8ge0cxfVt7QX17c3IrMX17RzF9XSB7QX06e0cxfSAnKSkNCiAgICAgICAgICAgIGNsZWFyKCkNCiAgICAgICAgICAgIHByaW50KGYne0cxfVt7QX09e0cxfV17RzF9IFRPVEFMIEZJTEUgVUlEIHtBfTp7RzF9ICVzICcgJSBsZW4oc2VsZi5pZCkpDQogICAgICAgICAgICBwcmludChmJ3tHMX1be0F9PXtHMn1de0cyfSBQQVNTV09SRCBMSU1JVCB7QX06e0cxfSB7c2x9ICcpDQogICAgICAgICAgICBwcmludChmJ3tHMX1be0F9PXtHM31de0czfSBUVVJOIHtHM31be0F9T057QX0ve0F9T0ZGe0czfV17RzN9IEFJUlBMQU5FIE1PREUgRVZFUlkge0F9M3tHM30gTUlOJykNCiAgICAgICAgICAgIGxpbmV4KCkNCiAgICAgICAgICAgIHdpdGggSGFiaWIobWF4X3dvcmtlcnM9MzApIGFzIHN3YWd3b3JsZDoNCiAgICAgICAgICAgICAgICBmb3IgenNiIGluIHNlbGYuaWQ6DQogICAgICAgICAgICAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgICAgICAgICB1aWQsIG5hbWUgPSB6c2Iuc3BsaXQoJ3wnKQ0KICAgICAgICAgICAgICAgICAgICAgICBzeiA9IG5hbWUuc3BsaXQoJyAnKQ0KICAgICAgICAgICAgICAgICAgICAgICBpZiBsZW4oc3opID09IDMgb3IgbGVuKHN6KSA9PSA0IG9yIGxlbihzeikgPT0gNSBvciBsZW4oc3opID09IDg6DQogICAgICAgICAgICAgICAgICAgICAgICAgICBwd3ggPSAgcHcNCiAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwd3ggPSAgcHcNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAnbWV0aG9kQScgaW4gbWV0aG9kczoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dhZ3dvcmxkLnN1Ym1pdChzZWxmLm1ldGhvZEEsIHVpZCwgbmFtZSwgcHd4KQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsaWYgJ21ldGhvZEInIGluIG1ldGhvZHM6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3YWd3b3JsZC5zdWJtaXQoc2VsZi5tZXRob2RCLCB1aWQsIG5hbWUsIHB3eCkNCiAgICAgICAgICAgICAgICAgICBleGNlcHQ6cGFzcw0KICAgICAgICAgICAgcmVzdWx0KG9rcyxjcHMpDQojX19fX19fX19fX19fX19fX19fWyBSQU5ET00gTUVUSE9EIF1fX19fX19fX19fX19fX19fX18jDQpkZWYgcmFuZG0oaWRzLHBzZCk6DQogICAgZ2xvYmFsIGxvb3Asb2ssY3ANCiAgICBzeXMuc3Rkb3V0LndyaXRlKGYiXHJ7RzF9W3tBfVNBV0ctWER7RzF9XXtBfS17RzF9W3tBfXtsb29wfXtHMX1de0F9LXtHMX1be0F9T0t7RzF9L3tBfUNQe0cxfV17QX0te0cxfVt7QX17bGVuKG9rKX17RzF9L3tBfXtsZW4oY3ApfXtHMX1dICIpDQogICAgc3lzLnN0ZG91dC5mbHVzaCgpDQogICAgdHJ5Og0KICAgICAgICBmb3IgcGFzIGluIHBzZDoNCiAgICAgICAgICAgIGRhdGE9eydhZGlkJzpzdHIodXVpZC51dWlkNCgpKSwNCiAgICAgICAgICAgICdmb3JtYXQnOidqc29uJywNCiAgICAgICAgICAgICdkZXZpY2VfaWQnOnN0cih1dWlkLnV1aWQ0KCkpLA0KICAgICAgICAgICAgJ2VtYWlsJzppZHMsDQogICAgICAgICAgICAncGFzc3dvcmQnOnBhcywNCiAgICAgICAgICAgICdnZW5lcmF0ZV9hbmFseXRpY3NfY2xhaW1zJzonMScsDQogICAgICAgICAgICAnY29tbXVuaXR5X2lkJzonJywNCiAgICAgICAgICAgICdjcGwnOid0cnVlJywndHJ5X251bSc6JzEnLA0KICAgICAgICAgICAgJ2ZhbWlseV9kZXZpY2VfaWQnOnN0cih1dWlkLnV1aWQ0KCkpLA0KICAgICAgICAgICAgJ2NyZWRlbnRpYWxzX3R5cGUnOidwYXNzd29yZCcsDQogICAgICAgICAgICAnc291cmNlJzonbG9naW4nLA0KICAgICAgICAgICAgJ2Vycm9yX2RldGFpbF90eXBlJzonYnV0dG9uX3dpdGhfZGlzYWJsZWQnLA0KICAgICAgICAgICAgJ2Vucm9sbF9taXNhdXRoJzonZmFsc2UnLA0KICAgICAgICAgICAgJ2dlbmVyYXRlX3Nlc3Npb25fY29va2llcyc6JzEnLA0KICAgICAgICAgICAgJ2dlbmVyYXRlX21hY2hpbmVfaWQnOicxJywNCiAgICAgICAgICAgICdjdXJyZW50bHlfbG9nZ2VkX2luX3VzZXJpZCc6JzAnLA0KICAgICAgICAgICAgJ2xvY2FsZSc6J2VuX1VTJywNCiAgICAgICAgICAgICdjbGllbnRfY291bnRyeV9jb2RlJzonVVMnLA0KICAgICAgICAgICAgJ2ZiX2FwaV9yZXFfZnJpZW5kbHlfbmFtZSc6J2F1dGhlbnRpY2F0ZScsDQogICAgICAgICAgICAnYXBpX2tleSc6JzYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJywNCiAgICAgICAgICAgICdhY2Nlc3NfdG9rZW4nOiczNTA2ODU1MzE3Mjh8NjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzInfQ0KICAgICAgICAgICAgaGVhZD17J1VzZXItQWdlbnQnOiAnW0ZCNEEvO0ZCQVYvWVpXU0VTOTM7RkJCVi8xMTQ0NTgwMDY7RkJBTi9GQjRBO0ZCQVYvWVpXU0VTOTM7RkJCVi8xMTQ0NTgwMDY7RkJETS8vKntkZW5zaXR5PTIuMCx3aWR0aD03MjAsaGVpZ2h0PTEyODB9O0ZCTEMvZW5fVVM7RkJSVi8yNjI0NzgwMjY7RkJDUi9PUFBPO0ZCTUYvT25lUGx1cztGQkJEL1hvbG87RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvTEdfUTc7RkJTVi8xNTtGQk9QLzg7RkJDQS9hcm02NC12OGE7RkJTUy8xMTtdIjsiW0ZCNEEvO0ZCQVYvWVpXU0VTOTM7RkJCVi80MDUzOTY3MDM7RkJBTi9GQjRBO0ZCQVYvWVpXU0VTOTM7RkJCVi80MDUzOTY3MDM7RkJETS8vKntkZW5zaXR5PTIuNSx3aWR0aD0xNDQwLGhlaWdodD0zODQwfTtGQkxDL3poX0NOO0ZCUlYvODAxNjUwNjM4O0ZCQ1IvTEc7RkJNRi9Nb3Rvcm9sYTtGQkJEL1BhbmFzb25pYztGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9PbmVQbHVzX05vcmRfTjUwMDtGQlNWLzExO0ZCT1AvNDtGQkNBL2FybTY0LXY4YTtGQlNTLzE2O10iOyJbRkI0QS87RkJBVi9ZWldTRVM5MztGQkJWLzkzODAxNzUwMDtGQkFOL0ZCNEE7RkJBVi9ZWldTRVM5MztGQkJWLzkzODAxNzUwMDtGQkRNLy8qe2RlbnNpdHk9My4wLHdpZHRoPTE0NDAsaGVpZ2h0PTI1NjB9O0ZCTEMvZGVfREU7RkJSVi8zMDgxOTIxMzY7RkJDUi9Ob2tpYTtGQk1GL01vdG9yb2xhO0ZCQkQvQmxhY2tiZXJyeTtGQlBOL2NvbS5mYWNlYm9vay5rYXRhbmE7RkJEVi9Nb3Rvcm9sYV9Nb3RvX0cxMDAwO0ZCU1YvMTc7RkJPUC84O0ZCQ0EvYXJtZWFiaTtGQlNTLztdIjsiW0ZCNEEvO0ZCQVYvWVpXU0VTOTM7RkJCVi80ODAyOTIwOTk7RkJBTi9GQjRBO0ZCQVYvWVpXU0VTOTM7RkJCVi80ODAyOTIwOTk7RkJETS8vKntkZW5zaXR5PTEuNSx3aWR0aD0xNDQwLGhlaWdodD0xMjgwfTtGQkxDL2VuX1VTO0ZCUlYvNTczMjc4ODMxO0ZCQ1IvUmVhbG1lO0ZCTUYvVklWTztGQkJEL1Nvbnk7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvUmVhbG1lX1g4O0ZCU1YvMTU7RkJPUC80O0ZCQ0EvYXJtZWFiaTtGQlNTLzE3O10iOyJbRkI0QS87RkJBVi87RkJCVi84NTE1MjMxNTc7RkJBTi9GQjRBO0ZCQVYvO0ZCQlYvODUxNTIzMTU3O0ZCRE0vLyp7ZGVuc2l0eT0xLjUsd2lkdGg9NzIwLGhlaWdodD0xOTIwfTtGQkxDL2phX0pQO0ZCUlYvODE5OTM3OTQwO0ZCQ1IvTEc7RkJNRi9Nb3Rvcm9sYTtGQkJEL01laXp1O0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL0xHX1ExMDtGQlNWLzE2O0ZCT1AvODtGQkNBL3g4Nl82NDtGQlNTLztdIjsiW0ZCNEEvO0ZCQVYvQTFYREw1VTQ7RkJCVi81OTU3NTI3MzU7RkJBTi9GQjRBO0ZCQVYvQTFYREw1VTQ7RkJCVi81OTU3NTI3MzU7RkJETS8vKntkZW5zaXR5PTMuMCx3aWR0aD0xNDQwLGhlaWdodD00MDk2fTtGQkxDL2VuX1VTO0ZCUlYvODU4OTUxNjk4O0ZCQ1IvTm9raWE7RkJNRi9Nb3Rvcm9sYTtGQkJEL1dpa287RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvUmVhbG1lX1gxMztGQlNWLzE1O0ZCT1AvNztGQkNBL2FybWVhYmktdjdhO0ZCU1MvO10iOyJbRkJBTi87RkJBVi87RkJCVi8zNzI5NTIxNzM7RkJBTi9GQkFOO0ZCQVYvO0ZCQlYvMzcyOTUyMTczO0ZCRE0vLyp7ZGVuc2l0eT0yLjAsd2lkdGg9MTQ0MCxoZWlnaHQ9MjU2MH07RkJMQy9pdF9JVDtGQlJWLzk2ODI1NzEyNTtGQkNSL1Nvbnk7RkJNRi9BcHBsZTtGQkJEL0xlRWNvO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL0hUQ19Ecml2ZV8xMDtGQlNWLzE0O0ZCT1AvNDtGQkNBL2FybTY0LXY4YTtGQlNTLztdIjsiW0ZCNEEvO0ZCQVYvQTFYREw1VTQ7RkJCVi84ODQ0MjM5MTM7RkJBTi9GQjRBO0ZCQVYvQTFYREw1VTQ7RkJCVi84ODQ0MjM5MTM7RkJETS8vKntkZW5zaXR5PTIuNSx3aWR0aD03MjAsaGVpZ2h0PTM4NDB9O0ZCTEMvZW5fVVM7RkJSVi80NjMzODM1MTU7RkJDUi9Ob2tpYTtGQk1GL1hpYW9taTtGQkJEL0hNRF9HbG9iYWw7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvUmVhbG1lX1gxMztGQlNWLzE2O0ZCT1AvNDtGQkNBL3g4NjtGQlNTLzE1O10iOyJbRkI0QS87RkJBVi87RkJCVi81ODI1ODA1NTU7RkJBTi9GQjRBO0ZCQVYvO0ZCQlYvNTgyNTgwNTU1O0ZCRE0vLyp7ZGVuc2l0eT0yLjUsd2lkdGg9NzIwLGhlaWdodD0xOTIwfTtGQkxDL3J1X1JVO0ZCUlYvODI1OTI5MjA2O0ZCQ1IvTEc7RkJNRi9YaWFvbWk7RkJCRC9Yb2xvO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL0hUQ19Ecml2ZV8xMDtGQlNWLzEzO0ZCT1AvNztGQkNBL2FybWVhYmktdjdhO0ZCU1MvMjA7XSI7IltGQkFOLztGQkFWL1laV1NFUzkzO0ZCQlYvMTUwMjc0MTAzO0ZCQU4vRkJBTjtGQkFWL1laV1NFUzkzO0ZCQlYvMTUwMjc0MTAzO0ZCRE0vLyp7ZGVuc2l0eT0yLjAsd2lkdGg9MjU2MCxoZWlnaHQ9NDA5Nn07RkJMQy9lbl9VUztGQlJWLzQwMjc3MTU0NjtGQkNSL1Nvbnk7RkJNRi9WSVZPO0ZCQkQvSGFpZXI7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvTm9raWFfWDE3MDtGQlNWLzE1O0ZCT1AvNDtGQkNBL3g4Nl82NDtGQlNTLztdJywNCiAgICAgICAgICAgICdBY2NlcHQtRW5jb2RpbmcnOidnemlwLCBkZWZsYXRlJywNCiAgICAgICAgICAgICdDb25uZWN0aW9uJzonY2xvc2UnLA0KICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6J2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsDQogICAgICAgICAgICAnSG9zdCc6J2dyYXBoLmZhY2Vib29rLmNvbScsDQogICAgICAgICAgICAnWC1GQi1OZXQtSE5JJzpzdHIocmFuZG9tLnJhbmRpbnQoMmU0LCA0ZTQpKSwNCiAgICAgICAgICAgICdYLUZCLVNJTS1ITkknOnN0cihyYW5kb20ucmFuZGludCgyZTQsIDRlNCkpLA0KICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOidPQXV0aCAzNTA2ODU1MzE3Mjh8NjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzInLA0KICAgICAgICAgICAgJ1gtRkItQ29ubmVjdGlvbi1UeXBlJzonV0lGSScsDQogICAgICAgICAgICAnWC1UaWdvbi1Jcy1SZXRyeSc6J0ZhbHNlJywNCiAgICAgICAgICAgICd4LWZiLXNlc3Npb24taWQnOiduaWQ9amlaK3lOTkJnYndDO3BpZD1NYWluO3RpZD0xMzI7bmM9MTtmYz0wO2JjPTA7Y2lkPTYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJywNCiAgICAgICAgICAgICd4LWZiLWRldmljZS1ncm91cCc6JzUxMjAnLA0KICAgICAgICAgICAgJ1gtRkItRnJpZW5kbHktTmFtZSc6J1ZpZXdlclJlYWN0aW9uc011dGF0aW9uJywNCiAgICAgICAgICAgICdYLUZCLVJlcXVlc3QtQW5hbHl0aWNzLVRhZ3MnOidncmFwaHNlcnZpY2UnLA0KICAgICAgICAgICAgJ1gtRkItSFRUUC1FbmdpbmUnOidMaWdlcicsDQogICAgICAgICAgICAnWC1GQi1DbGllbnQtSVAnOidUcnVlJywNCiAgICAgICAgICAgICdYLUZCLVNlcnZlci1DbHVzdGVyJzonVHJ1ZScsDQogICAgICAgICAgICAneC1mYi1jb25uZWN0aW9uLXRva2VuJzonNjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzInfQ0KICAgICAgICAgICAgdXJsID0gJ2h0dHBzOi8vYi1ncmFwaC5mYWNlYm9vay5jb20vYXV0aC9sb2dpbicNCiAgICAgICAgICAgIHBvID0gcmVxdWVzdHMucG9zdCh1cmwsZGF0YT1kYXRhLGhlYWRlcnM9aGVhZCxhbGxvd19yZWRpcmVjdHM9RmFsc2UpLnRleHQNCiAgICAgICAgICAgIHEgPSBqc29uLmxvYWRzKHBvKQ0KICAgICAgICAgICAgaWYgJ2FjY2Vzc190b2tlbicgaW4gcToNCiAgICAgICAgICAgICAgICB1aWQgPSBzdHIocVsndWlkJ10pDQogICAgICAgICAgICAgICAgY29raSA9ICI7Ii5qb2luKGlbIm5hbWUiXSsiPSIraVsidmFsdWUiXSBmb3IgaSBpbiBxWyJzZXNzaW9uX2Nvb2tpZXMiXSkNCiAgICAgICAgICAgICAgICBwcmludChmJ1xyXHJ7RzF9W1NXQUctT0tdIHt1aWR9IHwge3Bhc30nKQ0KICAgICAgICAgICAgICAgICNwcmludChmJ1xyXHJ7RzF9W0NPT0tJRV17QX0ge2Nva2l9JykNCiAgICAgICAgICAgICAgICBvcGVuKCcvc2RjYXJkL1RNVC1STkRNLU9LLnR4dCcsJ2EnKS53cml0ZSh1aWQrJ3wnK3BhcysnfCcrY29raSsnXG4nKQ0KICAgICAgICAgICAgICAgIG9rLmFwcGVuZCh1aWQpDQogICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgIGVsc2U6Y29udGludWUNCiAgICAgICAgbG9vcCs9MQ0KICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCiAgICAgICAgcGFzcw0KICAgICAgICAgIA0KbWVudSgpDQojX19fX19fX19fX19fX19fX19fWyBFTkQgXV9fX19fX19fX19fX19fX19fXyM="))